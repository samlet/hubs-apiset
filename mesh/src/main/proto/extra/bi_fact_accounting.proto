syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "BiFactAccountingExtraProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// Sales Invoice Item Fact
message SalesInvoiceItemFactData {
    option (routines.entity_type) = "SalesInvoiceItemFact";
    option (routines.keys).keys = "invoice_id, invoice_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: invoiceId, invoiceItemSeqId
    // fields
    string invoice_id = 1 [(routines.opts).field_type = "id"];
    string invoice_item_seq_id = 2 [(routines.opts).field_type = "id"];
    string order_id = 3 [(routines.opts).field_type = "id"];
    string invoice_date_dim_id = 4 [(routines.opts).field_type = "id"];
    string product_dim_id = 5 [(routines.opts).field_type = "id"];
    string bill_to_customer_dim_id = 6 [(routines.opts).field_type = "id"];
    string orig_currency_dim_id = 7 [(routines.opts).field_type = "id"];
    routines.FixedPoint quantity = 8 [(routines.opts).field_type = "fixed-point"];
    routines.Currency ext_gross_amount = 9 [(routines.opts).field_type = "currency-precise"];
    routines.Currency ext_discount_amount = 10 [(routines.opts).field_type = "currency-precise"];
    routines.Currency ext_net_amount = 11 [(routines.opts).field_type = "currency-precise"];
    routines.Currency ext_tax_amount = 12 [(routines.opts).field_type = "currency-precise"];
    routines.Currency ext_man_fixed_cost = 13 [(routines.opts).field_type = "currency-precise"];
    routines.Currency ext_man_var_cost = 14 [(routines.opts).field_type = "currency-precise"];
    routines.Currency ext_storage_cost = 15 [(routines.opts).field_type = "currency-precise"];
    routines.Currency ext_distribution_cost = 16 [(routines.opts).field_type = "currency-precise"];
    routines.Currency contribution_amount = 17 [(routines.opts).field_type = "currency-precise"];
    google.protobuf.Timestamp last_updated_tx_stamp = 18 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 19 [(routines.opts).field_type = "date-time"];
    string id = 20 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 24;
    map<string, google.protobuf.Any> attachments = 25;
}


message SalesInvoiceItemFactKey{
    string invoice_id = 1 [(routines.opts).field_type = "id"];
    string invoice_item_seq_id = 2 [(routines.opts).field_type = "id"];
}

message SalesInvoiceItemFactList{
    repeated SalesInvoiceItemFactData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSalesInvoiceItemFacts` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


