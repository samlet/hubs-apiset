syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "EntityTestExtraProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// Entity for testing the field data types
message TestFieldTypeData {
    option (routines.entity_type) = "TestFieldType";
    option (routines.keys).keys = "test_field_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testFieldTypeId
    // fields
    string test_field_type_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    bytes blob_field = 2 [(routines.opts).field_type = "blob"];
    bytes byte_array_field = 3 [(routines.opts).field_type = "byte-array"];
    bytes object_field = 4 [(routines.opts).field_type = "object"];
    google.type.Date date_field = 5 [(routines.opts).field_type = "date"];
    google.type.TimeOfDay time_field = 6 [(routines.opts).field_type = "time"];
    google.protobuf.Timestamp date_time_field = 7 [(routines.opts).field_type = "date-time"];
    routines.FixedPoint fixed_point_field = 8 [(routines.opts).field_type = "fixed-point"];
    double floating_point_field = 9 [(routines.opts).field_type = "floating-point"];
    int64 numeric_field = 10 [(routines.opts).field_type = "numeric"];
    string clob_field = 11 [(routines.opts).field_type = "very-long"];
    google.protobuf.Timestamp last_updated_tx_stamp = 12 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 13 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 14;
    map<string, google.protobuf.Any> attachments = 15;
}


message TestFieldTypeKey{
    string test_field_type_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TestFieldTypeList{
    repeated TestFieldTypeData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestFieldTypes` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Testing
message TestingData {
    option (routines.entity_type) = "Testing";
    option (routines.keys).keys = "testing_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testingId
    // fields
    string testing_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string testing_type_id = 2 [(routines.opts).field_type = "id"];
    string testing_name = 3 [(routines.opts).field_type = "name"];
    string description = 4 [(routines.opts).field_type = "description"];
    string comments = 5 [(routines.opts).field_type = "comment"];
    int64 testing_size = 6 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp testing_date = 7 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp last_updated_tx_stamp = 8 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 9 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}


message TestingKey{
    string testing_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TestingList{
    repeated TestingData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestings` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Testing Crypto
message TestingCryptoData {
    option (routines.entity_type) = "TestingCrypto";
    option (routines.keys).keys = "testing_crypto_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testingCryptoId
    // fields
    string testing_crypto_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string testing_crypto_type_id = 2 [(routines.opts).field_type = "id"];
    string unencrypted_value = 3 [(routines.opts).field_type = "description"];
    string encrypted_value = 4 [(routines.opts).field_type = "description"];
    string salted_encrypted_value = 5 [(routines.opts).field_type = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 8;
    map<string, google.protobuf.Any> attachments = 9;
}


message TestingCryptoKey{
    string testing_crypto_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TestingCryptoList{
    repeated TestingCryptoData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestingCryptos` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Testing Item
message TestingItemData {
    option (routines.entity_type) = "TestingItem";
    option (routines.keys).keys = "testing_id, testing_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testingId, testingSeqId
    // fields
    string testing_id = 1 [(routines.opts).field_type = "id"];
    string testing_seq_id = 2 [(routines.opts).field_type = "id"];
    string testing_history = 3 [(routines.opts).field_type = "very-long"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
    string id = 6 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 8;
    map<string, google.protobuf.Any> attachments = 9;
}


message TestingItemKey{
    string testing_id = 1 [(routines.opts).field_type = "id"];
    string testing_seq_id = 2 [(routines.opts).field_type = "id"];
}

message TestingItemList{
    repeated TestingItemData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestingItems` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Testing Node
message TestingNodeData {
    option (routines.entity_type) = "TestingNode";
    option (routines.keys).keys = "testing_node_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testingNodeId
    // fields
    string testing_node_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string primary_parent_node_id = 2 [(routines.opts).field_type = "id"];
    string description = 3 [(routines.opts).field_type = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 9;
    map<string, google.protobuf.Any> attachments = 10;
}


message TestingNodeKey{
    string testing_node_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TestingNodeList{
    repeated TestingNodeData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestingNodes` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Testing Node Member
message TestingNodeMemberData {
    option (routines.entity_type) = "TestingNodeMember";
    option (routines.keys).keys = "testing_node_id, testing_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testingNodeId, testingId, fromDate
    // fields
    string testing_node_id = 1 [(routines.opts).field_type = "id"];
    string testing_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp extend_from_date = 5 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp extend_thru_date = 6 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp last_updated_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 8 [(routines.opts).field_type = "date-time"];
    string id = 9 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 12;
    map<string, google.protobuf.Any> attachments = 13;
}


message TestingNodeMemberKey{
    string testing_node_id = 1 [(routines.opts).field_type = "id"];
    string testing_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
}

message TestingNodeMemberList{
    repeated TestingNodeMemberData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestingNodeMembers` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Testing
message TestingRemoveAllData {
    option (routines.entity_type) = "TestingRemoveAll";
    option (routines.keys).keys = "testing_remove_all_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testingRemoveAllId
    // fields
    string testing_remove_all_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string description = 2 [(routines.opts).field_type = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 5;
    map<string, google.protobuf.Any> attachments = 6;
}


message TestingRemoveAllKey{
    string testing_remove_all_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TestingRemoveAllList{
    repeated TestingRemoveAllData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestingRemoveAlls` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Entity for testing EntityStatus concept
message TestingStatusData {
    option (routines.entity_type) = "TestingStatus";
    option (routines.keys).keys = "testing_status_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testingStatusId
    // fields
    string testing_status_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string testing_id = 2 [(routines.opts).field_type = "id"];
    string status_id = 3 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp status_date = 4 [(routines.opts).field_type = "date-time"];
    string change_by_user_login_id = 5 [(routines.opts).field_type = "id-vlong"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 10;
    map<string, google.protobuf.Any> attachments = 11;
}


message TestingStatusKey{
    string testing_status_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TestingStatusList{
    repeated TestingStatusData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestingStatuses` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Testing Subtype
message TestingSubtypeData {
    option (routines.entity_type) = "TestingSubtype";
    option (routines.keys).keys = "testing_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testingTypeId
    // fields
    string testing_type_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string subtype_description = 2 [(routines.opts).field_type = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 5;
    map<string, google.protobuf.Any> attachments = 6;
}


message TestingSubtypeKey{
    string testing_type_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TestingSubtypeList{
    repeated TestingSubtypeData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestingSubtypes` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Testing Entity Type
message TestingTypeData {
    option (routines.entity_type) = "TestingType";
    option (routines.keys).keys = "testing_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: testingTypeId
    // fields
    string testing_type_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string description = 2 [(routines.opts).field_type = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 6;
    map<string, google.protobuf.Any> attachments = 7;
}


message TestingTypeKey{
    string testing_type_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TestingTypeList{
    repeated TestingTypeData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTestingTypes` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


