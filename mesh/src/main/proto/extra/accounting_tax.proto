syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "AccountingTaxExtraProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// Zip Sales Tax Lookup
message ZipSalesRuleLookupData {
    option (routines.entity_type) = "ZipSalesRuleLookup";
    option (routines.keys).keys = "state_code, city, county, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: stateCode, city, county, fromDate
    // fields
    string state_code = 1 [json_name = "state_code"];
    string city = 2 [json_name = "city"];
    string county = 3 [json_name = "county"];
    google.protobuf.Timestamp from_date = 4 [json_name = "from_date"];
    string id_code = 5 [json_name = "id_code"];
    string taxable = 6 [json_name = "taxable"];
    string ship_cond = 7 [json_name = "ship_cond"];
    google.protobuf.Timestamp last_updated_tx_stamp = 8 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 9 [json_name = "created_tx_stamp"];
    string id = 10 [json_name = "id", (google.api.graphql.relay_options).id = true];
    
        

    // extra
    google.protobuf.Struct extra = 11;
    map<string, google.protobuf.Any> attachments = 12;
}


message ZipSalesRuleLookupKey{
    string state_code = 1 [json_name = "state_code"];
    string city = 2 [json_name = "city"];
    string county = 3 [json_name = "county"];
    google.protobuf.Timestamp from_date = 4 [json_name = "from_date"];
}

message ZipSalesRuleLookupList{
    repeated ZipSalesRuleLookupData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListZipSalesRuleLookups` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Zip Sales Tax Lookup
message ZipSalesTaxLookupData {
    option (routines.entity_type) = "ZipSalesTaxLookup";
    option (routines.keys).keys = "zip_code, state_code, city, county, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: zipCode, stateCode, city, county, fromDate
    // fields
    string zip_code = 1 [json_name = "zip_code"];
    string state_code = 2 [json_name = "state_code"];
    string city = 3 [json_name = "city"];
    string county = 4 [json_name = "county"];
    google.protobuf.Timestamp from_date = 5 [json_name = "from_date"];
    string county_fips = 6 [json_name = "county_fips"];
    routines.Indicator county_default = 7 [json_name = "county_default"];
    routines.Indicator general_default = 8 [json_name = "general_default"];
    routines.Indicator inside_city = 9 [json_name = "inside_city"];
    string geo_code = 10 [json_name = "geo_code"];
    routines.FixedPoint state_sales_tax = 11 [json_name = "state_sales_tax"];
    routines.FixedPoint city_sales_tax = 12 [json_name = "city_sales_tax"];
    routines.FixedPoint city_local_sales_tax = 13 [json_name = "city_local_sales_tax"];
    routines.FixedPoint county_sales_tax = 14 [json_name = "county_sales_tax"];
    routines.FixedPoint county_local_sales_tax = 15 [json_name = "county_local_sales_tax"];
    routines.FixedPoint combo_sales_tax = 16 [json_name = "combo_sales_tax"];
    routines.FixedPoint state_use_tax = 17 [json_name = "state_use_tax"];
    routines.FixedPoint city_use_tax = 18 [json_name = "city_use_tax"];
    routines.FixedPoint city_local_use_tax = 19 [json_name = "city_local_use_tax"];
    routines.FixedPoint county_use_tax = 20 [json_name = "county_use_tax"];
    routines.FixedPoint county_local_use_tax = 21 [json_name = "county_local_use_tax"];
    routines.FixedPoint combo_use_tax = 22 [json_name = "combo_use_tax"];
    google.protobuf.Timestamp last_updated_tx_stamp = 23 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 24 [json_name = "created_tx_stamp"];
    string id = 25 [json_name = "id", (google.api.graphql.relay_options).id = true];
    
        

    // extra
    google.protobuf.Struct extra = 26;
    map<string, google.protobuf.Any> attachments = 27;
}


message ZipSalesTaxLookupKey{
    string zip_code = 1 [json_name = "zip_code"];
    string state_code = 2 [json_name = "state_code"];
    string city = 3 [json_name = "city"];
    string county = 4 [json_name = "county"];
    google.protobuf.Timestamp from_date = 5 [json_name = "from_date"];
}

message ZipSalesTaxLookupList{
    repeated ZipSalesTaxLookupData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListZipSalesTaxLookups` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


