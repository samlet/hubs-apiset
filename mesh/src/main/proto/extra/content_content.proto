syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "ContentExtraProto";
option objc_class_prefix = "ContentExtra";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// Content Approval
message ContentApprovalData {
    option (routines.entity_type) = "ContentApproval";
    option (routines.keys).keys = "content_approval_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentApprovalId
    // fields
    string content_approval_id = 1 [json_name = "content_approval_id", (google.api.graphql.relay_options).id = true];
    string content_id = 2 [json_name = "content_id"];
    string content_revision_seq_id = 3 [json_name = "content_revision_seq_id"];
    string party_id = 4 [json_name = "party_id"];
    string role_type_id = 5 [json_name = "role_type_id"];
    string approval_status_id = 6 [json_name = "approval_status_id"];
    google.protobuf.Timestamp approval_date = 7 [json_name = "approval_date"];
    int64 sequence_num = 8 [json_name = "sequence_num"];
    string comments = 9 [json_name = "comments"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 11 [json_name = "created_tx_stamp"];
    
        

    // extra
    google.protobuf.Struct extra = 17;
    map<string, google.protobuf.Any> attachments = 18;
}


message ContentApprovalList{
    repeated ContentApprovalData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContentApprovals` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// Content Keyword
message ContentKeywordData {
    option (routines.entity_type) = "ContentKeyword";
    option (routines.keys).keys = "content_id, keyword";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentId, keyword
    // fields
    string content_id = 1 [json_name = "content_id"];
    string keyword = 2 [json_name = "keyword"];
    int64 relevancy_weight = 3 [json_name = "relevancy_weight"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 5 [json_name = "created_tx_stamp"];
    string id = 6 [json_name = "id", (google.api.graphql.relay_options).id = true];
    
        

    // extra
    google.protobuf.Struct extra = 8;
    map<string, google.protobuf.Any> attachments = 9;
}


message ContentKeywordList{
    repeated ContentKeywordData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContentKeywords` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// Content Meta-Data Predicate
message ContentMetaDataData {
    option (routines.entity_type) = "ContentMetaData";
    option (routines.keys).keys = "content_id, meta_data_predicate_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentId, metaDataPredicateId
    // fields
    string content_id = 1 [json_name = "content_id"];
    string meta_data_predicate_id = 2 [json_name = "meta_data_predicate_id"];
    string meta_data_value = 3 [json_name = "meta_data_value"];
    string data_source_id = 4 [json_name = "data_source_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 6 [json_name = "created_tx_stamp"];
    string id = 7 [json_name = "id", (google.api.graphql.relay_options).id = true];
    
        

    // extra
    google.protobuf.Struct extra = 11;
    map<string, google.protobuf.Any> attachments = 12;
}


message ContentMetaDataList{
    repeated ContentMetaDataData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContentMetaData` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// Content Purpose
message ContentPurposeData {
    option (routines.entity_type) = "ContentPurpose";
    option (routines.keys).keys = "content_id, content_purpose_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentId, contentPurposeTypeId
    // fields
    string content_id = 1 [json_name = "content_id"];
    string content_purpose_type_id = 2 [json_name = "content_purpose_type_id"];
    int64 sequence_num = 3 [json_name = "sequence_num"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 5 [json_name = "created_tx_stamp"];
    string id = 6 [json_name = "id", (google.api.graphql.relay_options).id = true];
    
        

    // extra
    google.protobuf.Struct extra = 9;
    map<string, google.protobuf.Any> attachments = 10;
}


message ContentPurposeList{
    repeated ContentPurposeData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContentPurposes` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// Content Revision
message ContentRevisionData {
    option (routines.entity_type) = "ContentRevision";
    option (routines.keys).keys = "content_id, content_revision_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentId, contentRevisionSeqId
    // fields
    string content_id = 1 [json_name = "content_id"];
    string content_revision_seq_id = 2 [json_name = "content_revision_seq_id"];
    string committed_by_party_id = 3 [json_name = "committed_by_party_id"];
    string comments = 4 [json_name = "comments"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 6 [json_name = "created_tx_stamp"];
    string id = 7 [json_name = "id", (google.api.graphql.relay_options).id = true];
    
        

    // extra
    google.protobuf.Struct extra = 12;
    map<string, google.protobuf.Any> attachments = 13;
}


message ContentRevisionList{
    repeated ContentRevisionData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContentRevisions` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// Content Revision
message ContentRevisionItemData {
    option (routines.entity_type) = "ContentRevisionItem";
    option (routines.keys).keys = "content_id, content_revision_seq_id, item_content_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentId, contentRevisionSeqId, itemContentId
    // fields
    string content_id = 1 [json_name = "content_id"];
    string content_revision_seq_id = 2 [json_name = "content_revision_seq_id"];
    string item_content_id = 3 [json_name = "item_content_id"];
    string old_data_resource_id = 4 [json_name = "old_data_resource_id"];
    string new_data_resource_id = 5 [json_name = "new_data_resource_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 7 [json_name = "created_tx_stamp"];
    string id = 8 [json_name = "id", (google.api.graphql.relay_options).id = true];
    
        

    // extra
    google.protobuf.Struct extra = 12;
    map<string, google.protobuf.Any> attachments = 13;
}


message ContentRevisionItemList{
    repeated ContentRevisionItemData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContentRevisionItems` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// Content Search Result Constraint
message ContentSearchConstraintData {
    option (routines.entity_type) = "ContentSearchConstraint";
    option (routines.keys).keys = "content_search_result_id, constraint_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentSearchResultId, constraintSeqId
    // fields
    string content_search_result_id = 1 [json_name = "content_search_result_id"];
    string constraint_seq_id = 2 [json_name = "constraint_seq_id"];
    string constraint_name = 3 [json_name = "constraint_name"];
    string info_string = 4 [json_name = "info_string"];
    routines.Indicator include_sub_categories = 5 [json_name = "include_sub_categories"];
    routines.Indicator is_and = 6 [json_name = "is_and"];
    routines.Indicator any_prefix = 7 [json_name = "any_prefix"];
    routines.Indicator any_suffix = 8 [json_name = "any_suffix"];
    routines.Indicator remove_stems = 9 [json_name = "remove_stems"];
    string low_value = 10 [json_name = "low_value"];
    string high_value = 11 [json_name = "high_value"];
    google.protobuf.Timestamp last_updated_tx_stamp = 12 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 13 [json_name = "created_tx_stamp"];
    string id = 14 [json_name = "id", (google.api.graphql.relay_options).id = true];
    
        

    // extra
    google.protobuf.Struct extra = 16;
    map<string, google.protobuf.Any> attachments = 17;
}


message ContentSearchConstraintList{
    repeated ContentSearchConstraintData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContentSearchConstraints` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// Content Search Result
message ContentSearchResultData {
    option (routines.entity_type) = "ContentSearchResult";
    option (routines.keys).keys = "content_search_result_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentSearchResultId
    // fields
    string content_search_result_id = 1 [json_name = "content_search_result_id", (google.api.graphql.relay_options).id = true];
    string visit_id = 2 [json_name = "visit_id"];
    string order_by_name = 3 [json_name = "order_by_name"];
    routines.Indicator is_ascending = 4 [json_name = "is_ascending"];
    int64 num_results = 5 [json_name = "num_results"];
    double seconds_total = 6 [json_name = "seconds_total"];
    google.protobuf.Timestamp search_date = 7 [json_name = "search_date"];
    google.protobuf.Timestamp last_updated_tx_stamp = 8 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 9 [json_name = "created_tx_stamp"];
    
        

    // extra
    google.protobuf.Struct extra = 11;
    map<string, google.protobuf.Any> attachments = 12;
}


message ContentSearchResultList{
    repeated ContentSearchResultData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContentSearchResults` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// Content Type Attribute
message ContentTypeAttrData {
    option (routines.entity_type) = "ContentTypeAttr";
    option (routines.keys).keys = "content_type_id, attr_name";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentTypeId, attrName
    // fields
    string content_type_id = 1 [json_name = "content_type_id"];
    string attr_name = 2 [json_name = "attr_name"];
    string description = 3 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 5 [json_name = "created_tx_stamp"];
    string id = 6 [json_name = "id", (google.api.graphql.relay_options).id = true];
    
        

    // extra
    google.protobuf.Struct extra = 10;
    map<string, google.protobuf.Any> attachments = 11;
}


message ContentTypeAttrList{
    repeated ContentTypeAttrData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContentTypeAttrs` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


