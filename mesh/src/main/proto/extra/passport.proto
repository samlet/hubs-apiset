syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "PassportExtraProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// Store GitHub access token for user
message GitHubUserData {
    option (routines.entity_type) = "GitHubUser";
    option (routines.keys).keys = "git_hub_user_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: gitHubUserId
    // fields
    string git_hub_user_id = 1 [(routines.opts).field_type = "id-vlong", (google.api.graphql.relay_options).id = true];
    string product_store_id = 2 [(routines.opts).field_type = "id"];
    string env_prefix = 3 [(routines.opts).field_type = "short-varchar"];
    string token_type = 4 [(routines.opts).field_type = "short-varchar"];
    string access_token = 5 [(routines.opts).field_type = "value"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 9;
    map<string, google.protobuf.Any> attachments = 10;
}


message GitHubUserKey{
    string git_hub_user_id = 1 [(routines.opts).field_type = "id-vlong", (google.api.graphql.relay_options).id = true];
}

message GitHubUserList{
    repeated GitHubUserData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListGitHubUsers` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Store LinkedIn access token for user
message LinkedInUserData {
    option (routines.entity_type) = "LinkedInUser";
    option (routines.keys).keys = "linked_in_user_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: linkedInUserId
    // fields
    string linked_in_user_id = 1 [(routines.opts).field_type = "id-vlong", (google.api.graphql.relay_options).id = true];
    string product_store_id = 2 [(routines.opts).field_type = "id"];
    string env_prefix = 3 [(routines.opts).field_type = "short-varchar"];
    string access_token = 4 [(routines.opts).field_type = "value"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
            
             

    // extra
    google.protobuf.Struct extra = 8;
    map<string, google.protobuf.Any> attachments = 9;
}


message LinkedInUserKey{
    string linked_in_user_id = 1 [(routines.opts).field_type = "id-vlong", (google.api.graphql.relay_options).id = true];
}

message LinkedInUserList{
    repeated LinkedInUserData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListLinkedInUsers` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// GitHub OAuth Login Config
message OAuth2GitHubData {
    option (routines.entity_type) = "OAuth2GitHub";
    option (routines.keys).keys = "product_store_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, fromDate
    // fields
    string product_store_id = 1 [(routines.opts).field_type = "id"];
    string client_id = 2 [(routines.opts).field_type = "short-varchar"];
    string client_secret = 3 [(routines.opts).field_type = "short-varchar"];
    string return_url = 4 [(routines.opts).field_type = "value"];
    string local_redirect_uri = 5 [(routines.opts).field_type = "short-varchar"];
    string icon_url = 6 [(routines.opts).field_type = "url"];
    google.protobuf.Timestamp from_date = 7 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 8 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp last_updated_tx_stamp = 9 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 10 [(routines.opts).field_type = "date-time"];
    string id = 11 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}


message OAuth2GitHubKey{
    string product_store_id = 1 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 2 [(routines.opts).field_type = "date-time"];
}

message OAuth2GitHubList{
    repeated OAuth2GitHubData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListOAuth2GitHubs` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// LinkedIn OAuth Login Config
message OAuth2LinkedInData {
    option (routines.entity_type) = "OAuth2LinkedIn";
    option (routines.keys).keys = "product_store_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, fromDate
    // fields
    string product_store_id = 1 [(routines.opts).field_type = "id"];
    string api_key = 2 [(routines.opts).field_type = "short-varchar"];
    string secret_key = 3 [(routines.opts).field_type = "short-varchar"];
    string live_return_url = 4 [(routines.opts).field_type = "value"];
    string test_return_url = 5 [(routines.opts).field_type = "value"];
    string local_redirect_uri = 6 [(routines.opts).field_type = "short-varchar"];
    string icon_url = 7 [(routines.opts).field_type = "url"];
    google.protobuf.Timestamp from_date = 8 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 9 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 11 [(routines.opts).field_type = "date-time"];
    string id = 12 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 14;
    map<string, google.protobuf.Any> attachments = 15;
}


message OAuth2LinkedInKey{
    string product_store_id = 1 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 2 [(routines.opts).field_type = "date-time"];
}

message OAuth2LinkedInList{
    repeated OAuth2LinkedInData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListOAuth2LinkedIns` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Third party logins for a specific product store
message ThirdPartyLoginData {
    option (routines.entity_type) = "ThirdPartyLogin";
    option (routines.keys).keys = "product_store_id, login_meth_type_id, login_provider_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, loginMethTypeId, loginProviderId, fromDate
    // fields
    string product_store_id = 1 [(routines.opts).field_type = "id"];
    string login_meth_type_id = 2 [(routines.opts).field_type = "id"];
    string login_provider_id = 3 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 5 [(routines.opts).field_type = "date-time"];
    int64 sequence_num = 6 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp last_updated_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 8 [(routines.opts).field_type = "date-time"];
    string id = 9 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 12;
    map<string, google.protobuf.Any> attachments = 13;
}


message ThirdPartyLoginKey{
    string product_store_id = 1 [(routines.opts).field_type = "id"];
    string login_meth_type_id = 2 [(routines.opts).field_type = "id"];
    string login_provider_id = 3 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 4 [(routines.opts).field_type = "date-time"];
}

message ThirdPartyLoginList{
    repeated ThirdPartyLoginData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListThirdPartyLogins` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


