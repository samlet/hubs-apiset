syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "DataProto";
option objc_class_prefix = "DTP";

package domain;

import "google/protobuf/timestamp.proto";
import "date.proto";
import "timeofday.proto";
import "routines.proto";


// The Order Header service definition.
service OrderHeaderService {
    rpc Create(OrderHeaderData) returns (routines.Response) {}
    rpc StoreOrUpdate(OrderHeaderFlatData) returns (routines.Response) {}
    rpc Update(OrderHeaderFlatData) returns (routines.Response) {}
    rpc Delete(OrderHeaderFlatData) returns (routines.Response) {}
    rpc Find(OrderHeaderFlatData) returns (OrderHeaderFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (OrderHeaderFlatData) {}
}

// The Order Item service definition.
service OrderItemService {
    rpc Create(OrderItemData) returns (routines.Response) {}
    rpc StoreOrUpdate(OrderItemFlatData) returns (routines.Response) {}
    rpc Update(OrderItemFlatData) returns (routines.Response) {}
    rpc Delete(OrderItemFlatData) returns (routines.Response) {}
    rpc Find(OrderItemFlatData) returns (OrderItemFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (OrderItemFlatData) {}
}

// The Payment service definition.
service PaymentService {
    rpc Create(PaymentData) returns (routines.Response) {}
    rpc StoreOrUpdate(PaymentFlatData) returns (routines.Response) {}
    rpc Update(PaymentFlatData) returns (routines.Response) {}
    rpc Delete(PaymentFlatData) returns (routines.Response) {}
    rpc Find(PaymentFlatData) returns (PaymentFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PaymentFlatData) {}
}

// The Invoice service definition.
service InvoiceService {
    rpc Create(InvoiceData) returns (routines.Response) {}
    rpc StoreOrUpdate(InvoiceFlatData) returns (routines.Response) {}
    rpc Update(InvoiceFlatData) returns (routines.Response) {}
    rpc Delete(InvoiceFlatData) returns (routines.Response) {}
    rpc Find(InvoiceFlatData) returns (InvoiceFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (InvoiceFlatData) {}
}

// The Invoice Item service definition.
service InvoiceItemService {
    rpc Create(InvoiceItemData) returns (routines.Response) {}
    rpc StoreOrUpdate(InvoiceItemFlatData) returns (routines.Response) {}
    rpc Update(InvoiceItemFlatData) returns (routines.Response) {}
    rpc Delete(InvoiceItemFlatData) returns (routines.Response) {}
    rpc Find(InvoiceItemFlatData) returns (InvoiceItemFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (InvoiceItemFlatData) {}
}

// The Product service definition.
service ProductService {
    rpc Create(ProductData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductFlatData) returns (routines.Response) {}
    rpc Update(ProductFlatData) returns (routines.Response) {}
    rpc Delete(ProductFlatData) returns (routines.Response) {}
    rpc Find(ProductFlatData) returns (ProductFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductFlatData) {}
}

// The Shipment service definition.
service ShipmentService {
    rpc Create(ShipmentData) returns (routines.Response) {}
    rpc StoreOrUpdate(ShipmentFlatData) returns (routines.Response) {}
    rpc Update(ShipmentFlatData) returns (routines.Response) {}
    rpc Delete(ShipmentFlatData) returns (routines.Response) {}
    rpc Find(ShipmentFlatData) returns (ShipmentFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ShipmentFlatData) {}
}

// The Inventory Item service definition.
service InventoryItemService {
    rpc Create(InventoryItemData) returns (routines.Response) {}
    rpc StoreOrUpdate(InventoryItemFlatData) returns (routines.Response) {}
    rpc Update(InventoryItemFlatData) returns (routines.Response) {}
    rpc Delete(InventoryItemFlatData) returns (routines.Response) {}
    rpc Find(InventoryItemFlatData) returns (InventoryItemFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (InventoryItemFlatData) {}
}

// The Product Store service definition.
service ProductStoreService {
    rpc Create(ProductStoreData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductStoreFlatData) returns (routines.Response) {}
    rpc Update(ProductStoreFlatData) returns (routines.Response) {}
    rpc Delete(ProductStoreFlatData) returns (routines.Response) {}
    rpc Find(ProductStoreFlatData) returns (ProductStoreFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductStoreFlatData) {}
}

// The Party service definition.
service PartyService {
    rpc Create(PartyData) returns (routines.Response) {}
    rpc StoreOrUpdate(PartyFlatData) returns (routines.Response) {}
    rpc Update(PartyFlatData) returns (routines.Response) {}
    rpc Delete(PartyFlatData) returns (routines.Response) {}
    rpc Find(PartyFlatData) returns (PartyFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PartyFlatData) {}
}

// The Person service definition.
service PersonService {
    rpc Create(PersonData) returns (routines.Response) {}
    rpc StoreOrUpdate(PersonFlatData) returns (routines.Response) {}
    rpc Update(PersonFlatData) returns (routines.Response) {}
    rpc Delete(PersonFlatData) returns (routines.Response) {}
    rpc Find(PersonFlatData) returns (PersonFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PersonFlatData) {}
}

// The Party Group service definition.
service PartyGroupService {
    rpc Create(PartyGroupData) returns (routines.Response) {}
    rpc StoreOrUpdate(PartyGroupFlatData) returns (routines.Response) {}
    rpc Update(PartyGroupFlatData) returns (routines.Response) {}
    rpc Delete(PartyGroupFlatData) returns (routines.Response) {}
    rpc Find(PartyGroupFlatData) returns (PartyGroupFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PartyGroupFlatData) {}
}

// The UserLogin service definition.
service UserLoginService {
    rpc Create(UserLoginData) returns (routines.Response) {}
    rpc StoreOrUpdate(UserLoginFlatData) returns (routines.Response) {}
    rpc Update(UserLoginFlatData) returns (routines.Response) {}
    rpc Delete(UserLoginFlatData) returns (routines.Response) {}
    rpc Find(UserLoginFlatData) returns (UserLoginFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (UserLoginFlatData) {}
}

// The Product Category service definition.
service ProductCategoryService {
    rpc Create(ProductCategoryData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductCategoryFlatData) returns (routines.Response) {}
    rpc Update(ProductCategoryFlatData) returns (routines.Response) {}
    rpc Delete(ProductCategoryFlatData) returns (routines.Response) {}
    rpc Find(ProductCategoryFlatData) returns (ProductCategoryFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductCategoryFlatData) {}
}

// The Catalog service definition.
service ProdCatalogService {
    rpc Create(ProdCatalogData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProdCatalogFlatData) returns (routines.Response) {}
    rpc Update(ProdCatalogFlatData) returns (routines.Response) {}
    rpc Delete(ProdCatalogFlatData) returns (routines.Response) {}
    rpc Find(ProdCatalogFlatData) returns (ProdCatalogFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProdCatalogFlatData) {}
}

// The Billing Account service definition.
service BillingAccountService {
    rpc Create(BillingAccountData) returns (routines.Response) {}
    rpc StoreOrUpdate(BillingAccountFlatData) returns (routines.Response) {}
    rpc Update(BillingAccountFlatData) returns (routines.Response) {}
    rpc Delete(BillingAccountFlatData) returns (routines.Response) {}
    rpc Find(BillingAccountFlatData) returns (BillingAccountFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (BillingAccountFlatData) {}
}

// The Financial Account service definition.
service FinAccountService {
    rpc Create(FinAccountData) returns (routines.Response) {}
    rpc StoreOrUpdate(FinAccountFlatData) returns (routines.Response) {}
    rpc Update(FinAccountFlatData) returns (routines.Response) {}
    rpc Delete(FinAccountFlatData) returns (routines.Response) {}
    rpc Find(FinAccountFlatData) returns (FinAccountFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (FinAccountFlatData) {}
}

// The Quote service definition.
service QuoteService {
    rpc Create(QuoteData) returns (routines.Response) {}
    rpc StoreOrUpdate(QuoteFlatData) returns (routines.Response) {}
    rpc Update(QuoteFlatData) returns (routines.Response) {}
    rpc Delete(QuoteFlatData) returns (routines.Response) {}
    rpc Find(QuoteFlatData) returns (QuoteFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (QuoteFlatData) {}
}

// The Fixed Asset service definition.
service FixedAssetService {
    rpc Create(FixedAssetData) returns (routines.Response) {}
    rpc StoreOrUpdate(FixedAssetFlatData) returns (routines.Response) {}
    rpc Update(FixedAssetFlatData) returns (routines.Response) {}
    rpc Delete(FixedAssetFlatData) returns (routines.Response) {}
    rpc Find(FixedAssetFlatData) returns (FixedAssetFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (FixedAssetFlatData) {}
}

// flat-ent: Order Header
message OrderHeaderFlatData {
    option (routines.entity_type) = "OrderHeader";
    option (routines.keys).keys = "order_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderId
        
    string order_id = 1;    
    string order_type_id = 2;    
    string order_name = 3;    
    string external_id = 4;
    string sales_channel_enum_id = 5; // Enumeration    
    google.protobuf.Timestamp order_date = 6;    
    routines.Indicator priority = 7;    
    google.protobuf.Timestamp entry_date = 8;    
    google.protobuf.Timestamp pick_sheet_printed_date = 9;    
    string visit_id = 10;
    string status_id = 11; // StatusItem    
    string created_by = 12;    
    string first_attempt_order_id = 13;
    string currency_uom = 14; // Uom
    string sync_status_id = 15; // StatusItem    
    string billing_account_id = 16;    
    string origin_facility_id = 17;    
    string web_site_id = 18;    
    string product_store_id = 19;    
    string agreement_id = 20;    
    string terminal_id = 21;    
    string transaction_id = 22;    
    string auto_order_shopping_list_id = 23;    
    routines.Indicator needs_inventory_issuance = 24;    
    routines.Indicator is_rush_order = 25;    
    string internal_code = 26;    
    routines.Currency remaining_sub_total = 27;    
    routines.Currency grand_total = 28;    
    routines.Indicator is_viewed = 29;    
    routines.Indicator invoice_per_shipment = 30;    
    google.protobuf.Timestamp last_updated_tx_stamp = 31;    
    google.protobuf.Timestamp created_tx_stamp = 32;  
}

// flat-ent: Order Item
message OrderItemFlatData {
    option (routines.entity_type) = "OrderItem";
    option (routines.keys).keys = "order_id, order_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderId, orderItemSeqId
    string id = 150;     
    string order_id = 1;    
    string order_item_seq_id = 2;    
    string external_id = 3;    
    string order_item_type_id = 4;    
    string order_item_group_seq_id = 5;    
    routines.Indicator is_item_group_primary = 6;    
    string from_inventory_item_id = 7;    
    string budget_id = 8;    
    string budget_item_seq_id = 9;    
    string product_id = 10;    
    string supplier_product_id = 11;    
    string product_feature_id = 12;    
    string prod_catalog_id = 13;    
    string product_category_id = 14;    
    routines.Indicator is_promo = 15;    
    string quote_id = 16;    
    string quote_item_seq_id = 17;    
    string shopping_list_id = 18;    
    string shopping_list_item_seq_id = 19;    
    string subscription_id = 20;    
    string deployment_id = 21;    
    routines.FixedPoint quantity = 22;    
    routines.FixedPoint cancel_quantity = 23;    
    routines.FixedPoint selected_amount = 24;    
    routines.Currency unit_price = 25;    
    routines.Currency unit_list_price = 26;    
    routines.Currency unit_average_cost = 27;    
    routines.Currency unit_recurring_price = 28;    
    routines.Indicator is_modified_price = 29;
    string recurring_freq_uom_id = 30; // Uom    
    string item_description = 31;    
    string comments = 32;    
    string corresponding_po_id = 33;
    string status_id = 34; // StatusValidChange
    string sync_status_id = 35; // StatusItem    
    google.protobuf.Timestamp estimated_ship_date = 36;    
    google.protobuf.Timestamp estimated_delivery_date = 37;    
    google.protobuf.Timestamp auto_cancel_date = 38;    
    google.protobuf.Timestamp dont_cancel_set_date = 39;    
    string dont_cancel_set_user_login = 40;    
    google.protobuf.Timestamp ship_before_date = 41;    
    google.protobuf.Timestamp ship_after_date = 42;    
    google.protobuf.Timestamp reserve_after_date = 43;    
    google.protobuf.Timestamp cancel_back_order_date = 44;    
    string override_gl_account_id = 45;    
    string sales_opportunity_id = 46;    
    string change_by_user_login_id = 47;    
    google.protobuf.Timestamp last_updated_tx_stamp = 48;    
    google.protobuf.Timestamp created_tx_stamp = 49;  
}

// flat-ent: Payment
message PaymentFlatData {
    option (routines.entity_type) = "Payment";
    option (routines.keys).keys = "payment_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: paymentId
        
    string payment_id = 1;    
    string payment_type_id = 2;
    string payment_method_type_id = 3; // PaymentMethodType    
    string payment_method_id = 4;    
    string payment_gateway_response_id = 5;    
    string payment_preference_id = 6;    
    string party_id_from = 7;    
    string party_id_to = 8;
    string role_type_id_to = 9; // RoleType
    string status_id = 10; // StatusItem    
    google.protobuf.Timestamp effective_date = 11;    
    string payment_ref_num = 12;    
    routines.Currency amount = 13;
    string currency_uom_id = 14; // Uom    
    string comments = 15;    
    string fin_account_trans_id = 16;    
    string override_gl_account_id = 17;    
    routines.Currency actual_currency_amount = 18;
    string actual_currency_uom_id = 19; // Uom    
    google.protobuf.Timestamp last_updated_tx_stamp = 20;    
    google.protobuf.Timestamp created_tx_stamp = 21;  
}

// flat-ent: Invoice
message InvoiceFlatData {
    option (routines.entity_type) = "Invoice";
    option (routines.keys).keys = "invoice_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: invoiceId
        
    string invoice_id = 1;    
    string invoice_type_id = 2;    
    string party_id_from = 3;    
    string party_id = 4;
    string role_type_id = 5; // RoleType
    string status_id = 6; // StatusItem    
    string billing_account_id = 7;    
    string contact_mech_id = 8;    
    google.protobuf.Timestamp invoice_date = 9;    
    google.protobuf.Timestamp due_date = 10;    
    google.protobuf.Timestamp paid_date = 11;    
    string invoice_message = 12;    
    string reference_number = 13;    
    string description = 14;
    string currency_uom_id = 15; // Uom    
    string recurrence_info_id = 16;    
    google.protobuf.Timestamp last_updated_tx_stamp = 17;    
    google.protobuf.Timestamp created_tx_stamp = 18;  
}

// flat-ent: Invoice Item
message InvoiceItemFlatData {
    option (routines.entity_type) = "InvoiceItem";
    option (routines.keys).keys = "invoice_id, invoice_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: invoiceId, invoiceItemSeqId
    string id = 150;     
    string invoice_id = 1;    
    string invoice_item_seq_id = 2;    
    string invoice_item_type_id = 3;    
    string override_gl_account_id = 4;    
    string override_org_party_id = 5;    
    string inventory_item_id = 6;    
    string product_id = 7;    
    string product_feature_id = 8;    
    string parent_invoice_id = 9;    
    string parent_invoice_item_seq_id = 10;
    string uom_id = 11; // Uom    
    routines.Indicator taxable_flag = 12;    
    routines.FixedPoint quantity = 13;    
    routines.Currency amount = 14;    
    string description = 15;    
    string tax_auth_party_id = 16;
    string tax_auth_geo_id = 17; // Geo    
    string tax_authority_rate_seq_id = 18;    
    string sales_opportunity_id = 19;    
    google.protobuf.Timestamp last_updated_tx_stamp = 20;    
    google.protobuf.Timestamp created_tx_stamp = 21;  
}

// flat-ent: Product
message ProductFlatData {
    option (routines.entity_type) = "Product";
    option (routines.keys).keys = "product_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId
        
    string product_id = 1;    
    string product_type_id = 2;    
    string primary_product_category_id = 3;    
    string facility_id = 4;    
    google.protobuf.Timestamp introduction_date = 5;    
    google.protobuf.Timestamp release_date = 6;    
    google.protobuf.Timestamp support_discontinuation_date = 7;    
    google.protobuf.Timestamp sales_discontinuation_date = 8;    
    routines.Indicator sales_disc_when_not_avail = 9;    
    string internal_name = 10;    
    string brand_name = 11;    
    string comments = 12;    
    string product_name = 13;    
    string description = 14;    
    string long_description = 15;    
    string price_detail_text = 16;    
    string small_image_url = 17;    
    string medium_image_url = 18;    
    string large_image_url = 19;    
    string detail_image_url = 20;    
    string original_image_url = 21;    
    string detail_screen = 22;    
    string inventory_message = 23;
    string inventory_item_type_id = 24; // InventoryItemType    
    routines.Indicator require_inventory = 25;
    string quantity_uom_id = 26; // Uom    
    routines.FixedPoint quantity_included = 27;    
    int64 pieces_included = 28;    
    routines.Indicator require_amount = 29;    
    routines.Currency fixed_amount = 30;
    string amount_uom_type_id = 31; // UomType
    string weight_uom_id = 32; // Uom    
    routines.FixedPoint shipping_weight = 33;    
    routines.FixedPoint product_weight = 34;
    string height_uom_id = 35; // Uom    
    routines.FixedPoint product_height = 36;    
    routines.FixedPoint shipping_height = 37;
    string width_uom_id = 38; // Uom    
    routines.FixedPoint product_width = 39;    
    routines.FixedPoint shipping_width = 40;
    string depth_uom_id = 41; // Uom    
    routines.FixedPoint product_depth = 42;    
    routines.FixedPoint shipping_depth = 43;
    string diameter_uom_id = 44; // Uom    
    routines.FixedPoint product_diameter = 45;    
    routines.FixedPoint product_rating = 46;
    string rating_type_enum = 47; // Enumeration    
    routines.Indicator returnable = 48;    
    routines.Indicator taxable = 49;    
    routines.Indicator charge_shipping = 50;    
    routines.Indicator auto_create_keywords = 51;    
    routines.Indicator include_in_promotions = 52;    
    routines.Indicator is_virtual = 53;    
    routines.Indicator is_variant = 54;
    string virtual_variant_method_enum = 55; // Enumeration
    string origin_geo_id = 56; // Geo
    string requirement_method_enum_id = 57; // Enumeration    
    int64 bill_of_material_level = 58;    
    routines.FixedPoint reserv_max_persons = 59;    
    routines.FixedPoint reserv_2nd_p_p_perc = 60;    
    routines.FixedPoint reserv_nth_p_p_perc = 61;    
    string config_id = 62;    
    google.protobuf.Timestamp created_date = 63;    
    string created_by_user_login = 64;    
    google.protobuf.Timestamp last_modified_date = 65;    
    string last_modified_by_user_login = 66;    
    routines.Indicator in_shipping_box = 67;    
    string default_shipment_box_type_id = 68;    
    string lot_id_filled_in = 69;    
    routines.Indicator order_decimal_quantity = 70;    
    google.protobuf.Timestamp last_updated_tx_stamp = 71;    
    google.protobuf.Timestamp created_tx_stamp = 72;  
}

// flat-ent: Shipment
message ShipmentFlatData {
    option (routines.entity_type) = "Shipment";
    option (routines.keys).keys = "shipment_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentId
        
    string shipment_id = 1;    
    string shipment_type_id = 2;
    string status_id = 3; // StatusItem    
    string primary_order_id = 4;    
    string primary_return_id = 5;    
    string primary_ship_group_seq_id = 6;    
    string picklist_bin_id = 7;    
    google.protobuf.Timestamp estimated_ready_date = 8;    
    google.protobuf.Timestamp estimated_ship_date = 9;    
    string estimated_ship_work_eff_id = 10;    
    google.protobuf.Timestamp estimated_arrival_date = 11;    
    string estimated_arrival_work_eff_id = 12;    
    google.protobuf.Timestamp latest_cancel_date = 13;    
    routines.Currency estimated_ship_cost = 14;
    string currency_uom_id = 15; // Uom    
    string handling_instructions = 16;    
    string origin_facility_id = 17;    
    string destination_facility_id = 18;    
    string origin_contact_mech_id = 19;    
    string origin_telecom_number_id = 20;    
    string destination_contact_mech_id = 21;    
    string destination_telecom_number_id = 22;    
    string party_id_to = 23;    
    string party_id_from = 24;    
    routines.Currency additional_shipping_charge = 25;    
    string addtl_shipping_charge_desc = 26;    
    google.protobuf.Timestamp created_date = 27;    
    string created_by_user_login = 28;    
    google.protobuf.Timestamp last_modified_date = 29;    
    string last_modified_by_user_login = 30;    
    google.protobuf.Timestamp last_updated_tx_stamp = 31;    
    google.protobuf.Timestamp created_tx_stamp = 32;  
}

// flat-ent: Inventory Item
message InventoryItemFlatData {
    option (routines.entity_type) = "InventoryItem";
    option (routines.keys).keys = "inventory_item_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: inventoryItemId
        
    string inventory_item_id = 1;    
    string inventory_item_type_id = 2;    
    string product_id = 3;    
    string party_id = 4;    
    string owner_party_id = 5;
    string status_id = 6; // StatusItem    
    google.protobuf.Timestamp datetime_received = 7;    
    google.protobuf.Timestamp datetime_manufactured = 8;    
    google.protobuf.Timestamp expire_date = 9;    
    string facility_id = 10;    
    string container_id = 11;    
    string lot_id = 12;
    string uom_id = 13; // Uom    
    string bin_number = 14;    
    string location_seq_id = 15;    
    string comments = 16;    
    routines.FixedPoint quantity_on_hand_total = 17;    
    routines.FixedPoint available_to_promise_total = 18;    
    routines.FixedPoint accounting_quantity_total = 19;    
    string serial_number = 20;    
    string soft_identifier = 21;    
    string activation_number = 22;    
    google.protobuf.Timestamp activation_valid_thru = 23;    
    routines.FixedPoint unit_cost = 24;
    string currency_uom_id = 25; // Uom    
    string fixed_asset_id = 26;    
    google.protobuf.Timestamp last_updated_tx_stamp = 27;    
    google.protobuf.Timestamp created_tx_stamp = 28;  
}

// flat-ent: Product Store
message ProductStoreFlatData {
    option (routines.entity_type) = "ProductStore";
    option (routines.keys).keys = "product_store_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId
        
    string product_store_id = 1;
    string primary_store_group_id = 2; // ProductStoreGroup    
    string store_name = 3;    
    string company_name = 4;    
    string title = 5;    
    string subtitle = 6;    
    string pay_to_party_id = 7;    
    int64 days_to_cancel_non_pay = 8;    
    routines.Indicator manual_auth_is_capture = 9;    
    routines.Indicator prorate_shipping = 10;    
    routines.Indicator prorate_taxes = 11;    
    routines.Indicator view_cart_on_add = 12;    
    routines.Indicator auto_save_cart = 13;    
    routines.Indicator auto_approve_reviews = 14;    
    routines.Indicator is_demo_store = 15;    
    routines.Indicator is_immediately_fulfilled = 16;    
    string inventory_facility_id = 17;    
    routines.Indicator one_inventory_facility = 18;    
    routines.Indicator check_inventory = 19;    
    routines.Indicator reserve_inventory = 20;
    string reserve_order_enum_id = 21; // Enumeration    
    routines.Indicator require_inventory = 22;    
    routines.Indicator balance_res_on_order_creation = 23;
    string requirement_method_enum_id = 24; // Enumeration    
    string order_number_prefix = 25;    
    string default_locale_string = 26;
    string default_currency_uom_id = 27; // Uom    
    string default_time_zone_string = 28;
    string default_sales_channel_enum_id = 29; // Enumeration    
    routines.Indicator allow_password = 30;    
    string default_password = 31;    
    routines.Indicator explode_order_items = 32;    
    routines.Indicator check_gc_balance = 33;    
    routines.Indicator retry_failed_auths = 34;
    string header_approved_status = 35; // StatusItem
    string item_approved_status = 36; // StatusItem
    string digital_item_approved_status = 37; // StatusItem
    string header_declined_status = 38; // StatusItem
    string item_declined_status = 39; // StatusItem
    string header_cancel_status = 40; // StatusItem
    string item_cancel_status = 41; // StatusItem    
    string auth_declined_message = 42;    
    string auth_fraud_message = 43;    
    string auth_error_message = 44;    
    string visual_theme_id = 45;
    string store_credit_account_enum_id = 46; // Enumeration    
    routines.Indicator use_primary_email_username = 47;    
    routines.Indicator require_customer_role = 48;    
    routines.Indicator auto_invoice_digital_items = 49;    
    routines.Indicator req_ship_addr_for_dig_items = 50;    
    routines.Indicator show_checkout_gift_options = 51;    
    routines.Indicator select_payment_type_per_item = 52;    
    routines.Indicator show_prices_with_vat_tax = 53;    
    routines.Indicator show_tax_is_exempt = 54;    
    string vat_tax_auth_geo_id = 55;    
    string vat_tax_auth_party_id = 56;    
    routines.Indicator enable_auto_suggestion_list = 57;    
    routines.Indicator enable_dig_prod_upload = 58;    
    routines.Indicator prod_search_exclude_variants = 59;    
    string dig_prod_upload_category_id = 60;    
    routines.Indicator auto_order_cc_try_exp = 61;    
    routines.Indicator auto_order_cc_try_other_cards = 62;    
    routines.Indicator auto_order_cc_try_later_nsf = 63;    
    int64 auto_order_cc_try_later_max = 64;    
    int64 store_credit_valid_days = 65;    
    routines.Indicator auto_approve_invoice = 66;    
    routines.Indicator auto_approve_order = 67;    
    routines.Indicator ship_if_capture_fails = 68;    
    routines.Indicator set_owner_upon_issuance = 69;    
    routines.Indicator req_return_inventory_receive = 70;    
    routines.Indicator add_to_cart_remove_incompat = 71;    
    routines.Indicator add_to_cart_replace_upsell = 72;    
    routines.Indicator split_pay_pref_per_shp_grp = 73;    
    routines.Indicator managed_by_lot = 74;    
    routines.Indicator show_out_of_stock_products = 75;    
    routines.Indicator order_decimal_quantity = 76;    
    routines.Indicator allow_comment = 77;    
    routines.Indicator allocate_inventory = 78;    
    google.protobuf.Timestamp last_updated_tx_stamp = 79;    
    google.protobuf.Timestamp created_tx_stamp = 80;  
}

// flat-ent: Party
message PartyFlatData {
    option (routines.entity_type) = "Party";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId
        
    string party_id = 1;    
    string party_type_id = 2;    
    string external_id = 3;
    string preferred_currency_uom_id = 4; // Uom    
    string description = 5;
    string status_id = 6; // StatusItem    
    google.protobuf.Timestamp created_date = 7;    
    string created_by_user_login = 8;    
    google.protobuf.Timestamp last_modified_date = 9;    
    string last_modified_by_user_login = 10;
    string data_source_id = 11; // DataSource    
    routines.Indicator is_unread = 12;    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;  
}

// flat-ent: Person
message PersonFlatData {
    option (routines.entity_type) = "Person";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId
        
    string party_id = 1;    
    string salutation = 2;    
    string first_name = 3;    
    string middle_name = 4;    
    string last_name = 5;    
    string personal_title = 6;    
    string suffix = 7;    
    string nickname = 8;    
    string first_name_local = 9;    
    string middle_name_local = 10;    
    string last_name_local = 11;    
    string other_local = 12;    
    string member_id = 13;    
    routines.Indicator gender = 14;    
    google.type.Date birth_date = 15;    
    google.type.Date deceased_date = 16;    
    double height = 17;    
    double weight = 18;    
    string mothers_maiden_name = 19;
    string marital_status_enum_id = 20; // Enumeration    
    string social_security_number = 21;    
    string passport_number = 22;    
    google.type.Date passport_expire_date = 23;    
    double total_years_work_experience = 24;    
    string comments = 25;
    string employment_status_enum_id = 26; // Enumeration
    string residence_status_enum_id = 27; // Enumeration    
    string occupation = 28;    
    int64 years_with_employer = 29;    
    int64 months_with_employer = 30;    
    routines.Indicator existing_customer = 31;    
    string card_id = 32;    
    google.protobuf.Timestamp last_updated_tx_stamp = 33;    
    google.protobuf.Timestamp created_tx_stamp = 34;  
}

// flat-ent: Party Group
message PartyGroupFlatData {
    option (routines.entity_type) = "PartyGroup";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId
        
    string party_id = 1;    
    string group_name = 2;    
    string group_name_local = 3;    
    string office_site_name = 4;    
    routines.Currency annual_revenue = 5;    
    int64 num_employees = 6;    
    string ticker_symbol = 7;    
    string comments = 8;    
    string logo_image_url = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;  
}

// flat-ent: UserLogin
message UserLoginFlatData {
    option (routines.entity_type) = "UserLogin";
    option (routines.keys).keys = "user_login_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: userLoginId
        
    string user_login_id = 1;    
    string current_password = 2;    
    string password_hint = 3;    
    routines.Indicator is_system = 4;    
    routines.Indicator enabled = 5;    
    routines.Indicator has_logged_out = 6;    
    routines.Indicator require_password_change = 7;    
    string last_currency_uom = 8;    
    string last_locale = 9;    
    string last_time_zone = 10;    
    google.protobuf.Timestamp disabled_date_time = 11;    
    int64 successive_failed_logins = 12;    
    string external_auth_id = 13;    
    string user_ldap_dn = 14;    
    string disabled_by = 15;    
    google.protobuf.Timestamp last_updated_tx_stamp = 16;    
    google.protobuf.Timestamp created_tx_stamp = 17;    
    string party_id = 18;  
}

// flat-ent: Product Category
message ProductCategoryFlatData {
    option (routines.entity_type) = "ProductCategory";
    option (routines.keys).keys = "product_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productCategoryId
        
    string product_category_id = 1;    
    string product_category_type_id = 2;    
    string primary_parent_category_id = 3;    
    string category_name = 4;    
    string description = 5;    
    string long_description = 6;    
    string category_image_url = 7;    
    string link_one_image_url = 8;    
    string link_two_image_url = 9;    
    string detail_screen = 10;    
    routines.Indicator show_in_select = 11;    
    google.protobuf.Timestamp last_updated_tx_stamp = 12;    
    google.protobuf.Timestamp created_tx_stamp = 13;  
}

// flat-ent: Catalog
message ProdCatalogFlatData {
    option (routines.entity_type) = "ProdCatalog";
    option (routines.keys).keys = "prod_catalog_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: prodCatalogId
        
    string prod_catalog_id = 1;    
    string catalog_name = 2;    
    routines.Indicator use_quick_add = 3;    
    string style_sheet = 4;    
    string header_logo = 5;    
    string content_path_prefix = 6;    
    string template_path_prefix = 7;    
    routines.Indicator view_allow_perm_reqd = 8;    
    routines.Indicator purchase_allow_perm_reqd = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;  
}

// flat-ent: Billing Account
message BillingAccountFlatData {
    option (routines.entity_type) = "BillingAccount";
    option (routines.keys).keys = "billing_account_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: billingAccountId
        
    string billing_account_id = 1;    
    routines.Currency account_limit = 2;
    string account_currency_uom_id = 3; // Uom    
    string contact_mech_id = 4;    
    google.protobuf.Timestamp from_date = 5;    
    google.protobuf.Timestamp thru_date = 6;    
    string description = 7;    
    string external_account_id = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;  
}

// flat-ent: Financial Account
message FinAccountFlatData {
    option (routines.entity_type) = "FinAccount";
    option (routines.keys).keys = "fin_account_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: finAccountId
        
    string fin_account_id = 1;    
    string fin_account_type_id = 2;    
    string status_id = 3;    
    string fin_account_name = 4;    
    string fin_account_code = 5;    
    string fin_account_pin = 6;
    string currency_uom_id = 7; // Uom    
    string organization_party_id = 8;    
    string owner_party_id = 9;    
    string post_to_gl_account_id = 10;    
    google.protobuf.Timestamp from_date = 11;    
    google.protobuf.Timestamp thru_date = 12;    
    routines.Indicator is_refundable = 13;    
    string replenish_payment_id = 14;    
    routines.Currency replenish_level = 15;    
    routines.Currency actual_balance = 16;    
    routines.Currency available_balance = 17;    
    google.protobuf.Timestamp last_updated_tx_stamp = 18;    
    google.protobuf.Timestamp created_tx_stamp = 19;  
}

// flat-ent: Quote
message QuoteFlatData {
    option (routines.entity_type) = "Quote";
    option (routines.keys).keys = "quote_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: quoteId
        
    string quote_id = 1;    
    string quote_type_id = 2;    
    string party_id = 3;    
    google.protobuf.Timestamp issue_date = 4;
    string status_id = 5; // StatusItem
    string currency_uom_id = 6; // Uom    
    string product_store_id = 7;
    string sales_channel_enum_id = 8; // Enumeration    
    google.protobuf.Timestamp valid_from_date = 9;    
    google.protobuf.Timestamp valid_thru_date = 10;    
    string quote_name = 11;    
    string description = 12;    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;  
}

// flat-ent: Fixed Asset
message FixedAssetFlatData {
    option (routines.entity_type) = "FixedAsset";
    option (routines.keys).keys = "fixed_asset_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fixedAssetId
        
    string fixed_asset_id = 1;    
    string fixed_asset_type_id = 2;    
    string parent_fixed_asset_id = 3;    
    string instance_of_product_id = 4;
    string class_enum_id = 5; // Enumeration    
    string party_id = 6;
    string role_type_id = 7; // RoleType    
    string fixed_asset_name = 8;    
    string acquire_order_id = 9;    
    string acquire_order_item_seq_id = 10;    
    google.protobuf.Timestamp date_acquired = 11;    
    google.protobuf.Timestamp date_last_serviced = 12;    
    google.protobuf.Timestamp date_next_service = 13;    
    google.type.Date expected_end_of_life = 14;    
    google.type.Date actual_end_of_life = 15;    
    routines.FixedPoint production_capacity = 16;
    string uom_id = 17; // Uom
    string calendar_id = 18; // TechDataCalendar    
    string serial_number = 19;    
    string located_at_facility_id = 20;    
    string located_at_location_seq_id = 21;    
    routines.Currency salvage_value = 22;    
    routines.Currency depreciation = 23;    
    routines.Currency purchase_cost = 24;    
    string purchase_cost_uom_id = 25;    
    google.protobuf.Timestamp last_updated_tx_stamp = 26;    
    google.protobuf.Timestamp created_tx_stamp = 27;  
}

// Shipment Route Segment
message ShipmentRouteSegmentData {
    option (routines.entity_type) = "ShipmentRouteSegment";
    option (routines.keys).keys = "shipment_id, shipment_route_segment_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentId, shipmentRouteSegmentId
    string id = 200; 
    // fields
        
    string shipment_id = 1;    
    string shipment_route_segment_id = 2;    
    string delivery_id = 3;    
    string origin_facility_id = 4;    
    string dest_facility_id = 5;    
    string origin_contact_mech_id = 6;    
    string origin_telecom_number_id = 7;    
    string dest_contact_mech_id = 8;    
    string dest_telecom_number_id = 9;    
    string carrier_party_id = 10;    
    string shipment_method_type_id = 11;
    string carrier_service_status_id = 12; // StatusItem    
    string carrier_delivery_zone = 13;    
    string carrier_restriction_codes = 14;    
    string carrier_restriction_desc = 15;    
    routines.FixedPoint billing_weight = 16;
    string billing_weight_uom_id = 17; // Uom    
    routines.Currency actual_transport_cost = 18;    
    routines.Currency actual_service_cost = 19;    
    routines.Currency actual_other_cost = 20;    
    routines.Currency actual_cost = 21;
    string currency_uom_id = 22; // Uom    
    google.protobuf.Timestamp actual_start_date = 23;    
    google.protobuf.Timestamp actual_arrival_date = 24;    
    google.protobuf.Timestamp estimated_start_date = 25;    
    google.protobuf.Timestamp estimated_arrival_date = 26;    
    string tracking_id_number = 27;    
    string tracking_digest = 28;    
    string updated_by_user_login_id = 29;    
    google.protobuf.Timestamp last_updated_date = 30;    
    string home_delivery_type = 31;    
    google.protobuf.Timestamp home_delivery_date = 32;    
    string third_party_account_number = 33;    
    string third_party_postal_code = 34;    
    string third_party_country_geo_code = 35;    
    bytes ups_high_value_report = 36;    
    google.protobuf.Timestamp last_updated_tx_stamp = 37;    
    google.protobuf.Timestamp created_tx_stamp = 38;
        
}

// Party Identification Type
message PartyIdentificationTypeData {
    option (routines.entity_type) = "PartyIdentificationType";
    option (routines.keys).keys = "party_identification_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyIdentificationTypeId
    
    // fields
        
    string party_identification_type_id = 1;    
    string parent_type_id = 2;    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Invoice
message InvoiceData {
    option (routines.entity_type) = "Invoice";
    option (routines.keys).keys = "invoice_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: invoiceId
    
    // fields
        
    string invoice_id = 1;    
    string invoice_type_id = 2;
    string role_type_id = 3; // RoleType
    string status_id = 4; // StatusItem    
    google.protobuf.Timestamp invoice_date = 5;    
    google.protobuf.Timestamp due_date = 6;    
    google.protobuf.Timestamp paid_date = 7;    
    string invoice_message = 8;    
    string reference_number = 9;    
    string description = 10;
    string currency_uom_id = 11; // Uom    
    google.protobuf.Timestamp last_updated_tx_stamp = 12;    
    google.protobuf.Timestamp created_tx_stamp = 13;
    
    // relations
    PartyData from_party = 14; // ref(FromParty): partyIdFrom
    PartyData party = 15; // ref(Party): partyId
    PartyRoleData party_role = 16; // ref(PartyRole): partyId + roleTypeId
    BillingAccountData billing_account = 17; // ref(BillingAccount): billingAccountId
    ContactMechData contact_mech = 18; // ref(ContactMech): contactMechId
    RecurrenceInfoData recurrence_info = 19; // ref(RecurrenceInfo): recurrenceInfoId
    repeated AcctgTransData acctg_trans = 20; // ref(AcctgTrans): invoiceId
    repeated InvoiceItemData invoice_item = 21; // ref(InvoiceItem): invoiceId
    repeated InvoiceRoleData invoice_role = 22; // ref(InvoiceRole): invoiceId
    repeated InvoiceStatusData invoice_status = 23; // ref(InvoiceStatus): invoiceId
    repeated OrderAdjustmentBillingData order_adjustment_billing = 24; // ref(OrderAdjustmentBilling): invoiceId
    repeated OrderItemBillingData order_item_billing = 25; // ref(OrderItemBilling): invoiceId
    repeated PaymentApplicationData payment_application = 26; // ref(PaymentApplication): invoiceId
    repeated ShipmentItemBillingData shipment_item_billing = 27; // ref(ShipmentItemBilling): invoiceId
    
        
}

// Order Adjustment
message OrderAdjustmentData {
    option (routines.entity_type) = "OrderAdjustment";
    option (routines.keys).keys = "order_adjustment_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderAdjustmentId
    
    // fields
        
    string order_adjustment_id = 1;    
    string order_adjustment_type_id = 2;    
    string order_id = 3;    
    string order_item_seq_id = 4;    
    string ship_group_seq_id = 5;    
    string comments = 6;    
    string description = 7;    
    routines.Currency amount = 8;    
    routines.Currency recurring_amount = 9;    
    routines.Currency amount_already_included = 10;    
    string product_promo_id = 11;    
    string product_promo_rule_id = 12;    
    string product_promo_action_seq_id = 13;    
    string product_feature_id = 14;    
    string corresponding_product_id = 15;    
    string tax_authority_rate_seq_id = 16;    
    string source_reference_id = 17;    
    routines.FixedPoint source_percentage = 18;    
    string customer_reference_id = 19;
    string primary_geo_id = 20; // Geo
    string secondary_geo_id = 21; // Geo    
    routines.Currency exempt_amount = 22;    
    string tax_auth_geo_id = 23;    
    string tax_auth_party_id = 24;    
    string override_gl_account_id = 25;    
    routines.Indicator include_in_tax = 26;    
    routines.Indicator include_in_shipping = 27;    
    routines.Indicator is_manual = 28;    
    google.protobuf.Timestamp created_date = 29;    
    string created_by_user_login = 30;    
    google.protobuf.Timestamp last_modified_date = 31;    
    string last_modified_by_user_login = 32;    
    string original_adjustment_id = 33;    
    google.protobuf.Timestamp last_updated_tx_stamp = 34;    
    google.protobuf.Timestamp created_tx_stamp = 35;
        
}

// Product
message ProductData {
    option (routines.entity_type) = "Product";
    option (routines.keys).keys = "product_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productId
    
    // fields
        
    string product_id = 1;    
    string product_type_id = 2;    
    string facility_id = 3;    
    google.protobuf.Timestamp introduction_date = 4;    
    google.protobuf.Timestamp release_date = 5;    
    google.protobuf.Timestamp support_discontinuation_date = 6;    
    google.protobuf.Timestamp sales_discontinuation_date = 7;    
    routines.Indicator sales_disc_when_not_avail = 8;    
    string internal_name = 9;    
    string brand_name = 10;    
    string comments = 11;    
    string product_name = 12;    
    string description = 13;    
    string long_description = 14;    
    string price_detail_text = 15;    
    string small_image_url = 16;    
    string medium_image_url = 17;    
    string large_image_url = 18;    
    string detail_image_url = 19;    
    string original_image_url = 20;    
    string detail_screen = 21;    
    string inventory_message = 22;
    string inventory_item_type_id = 23; // InventoryItemType    
    routines.Indicator require_inventory = 24;
    string quantity_uom_id = 25; // Uom    
    routines.FixedPoint quantity_included = 26;    
    int64 pieces_included = 27;    
    routines.Indicator require_amount = 28;    
    routines.Currency fixed_amount = 29;
    string amount_uom_type_id = 30; // UomType
    string weight_uom_id = 31; // Uom    
    routines.FixedPoint shipping_weight = 32;    
    routines.FixedPoint product_weight = 33;
    string height_uom_id = 34; // Uom    
    routines.FixedPoint product_height = 35;    
    routines.FixedPoint shipping_height = 36;
    string width_uom_id = 37; // Uom    
    routines.FixedPoint product_width = 38;    
    routines.FixedPoint shipping_width = 39;
    string depth_uom_id = 40; // Uom    
    routines.FixedPoint product_depth = 41;    
    routines.FixedPoint shipping_depth = 42;
    string diameter_uom_id = 43; // Uom    
    routines.FixedPoint product_diameter = 44;    
    routines.FixedPoint product_rating = 45;
    string rating_type_enum = 46; // Enumeration    
    routines.Indicator returnable = 47;    
    routines.Indicator taxable = 48;    
    routines.Indicator charge_shipping = 49;    
    routines.Indicator auto_create_keywords = 50;    
    routines.Indicator include_in_promotions = 51;    
    routines.Indicator is_virtual = 52;    
    routines.Indicator is_variant = 53;
    string virtual_variant_method_enum = 54; // Enumeration
    string origin_geo_id = 55; // Geo
    string requirement_method_enum_id = 56; // Enumeration    
    int64 bill_of_material_level = 57;    
    routines.FixedPoint reserv_max_persons = 58;    
    routines.FixedPoint reserv_2nd_p_p_perc = 59;    
    routines.FixedPoint reserv_nth_p_p_perc = 60;    
    string config_id = 61;    
    google.protobuf.Timestamp created_date = 62;    
    google.protobuf.Timestamp last_modified_date = 63;    
    routines.Indicator in_shipping_box = 64;    
    string lot_id_filled_in = 65;    
    routines.Indicator order_decimal_quantity = 66;    
    google.protobuf.Timestamp last_updated_tx_stamp = 67;    
    google.protobuf.Timestamp created_tx_stamp = 68;
    
    // relations
    ProductCategoryData primary_product_category = 69; // ref(PrimaryProductCategory): primaryProductCategoryId
    UserLoginData created_by_user_login = 70; // ref(CreatedByUserLogin): createdByUserLogin
    UserLoginData last_modified_by_user_login = 71; // ref(LastModifiedByUserLogin): lastModifiedByUserLogin
    ShipmentBoxTypeData default_shipment_box_type = 72; // ref(DefaultShipmentBoxType): defaultShipmentBoxTypeId
    repeated AgreementData agreement = 73; // ref(Agreement): productId
    repeated AgreementProductApplData agreement_product_appl = 74; // ref(AgreementProductAppl): productId
    repeated CustRequestItemData cust_request_item = 75; // ref(CustRequestItem): productId
    repeated FixedAssetData instance_of_fixed_asset = 76; // ref(InstanceOfFixedAsset): productId
    repeated FixedAssetProductData fixed_asset_product = 77; // ref(FixedAssetProduct): productId
    repeated InventoryItemData inventory_item = 78; // ref(InventoryItem): productId
    repeated InvoiceItemData invoice_item = 79; // ref(InvoiceItem): productId
    repeated OrderItemData order_item = 80; // ref(OrderItem): productId
    repeated ProductAssocData main_product_assoc = 81; // ref(MainProductAssoc): productId
    repeated ProductAssocData assoc_product_assoc = 82; // ref(AssocProductAssoc): productId
    repeated ProductCategoryMemberData product_category_member = 83; // ref(ProductCategoryMember): productId
    repeated ProductConfigData product_product_config = 84; // ref(ProductProductConfig): productId
    repeated ProductConfigProductData product_product_config_product = 85; // ref(ProductProductConfigProduct): productId
    repeated ProductContentData product_content = 86; // ref(ProductContent): productId
    repeated ProductFacilityData product_facility = 87; // ref(ProductFacility): productId
    repeated ProductFacilityAssocData product_facility_assoc = 88; // ref(ProductFacilityAssoc): productId
    repeated ProductFacilityLocationData product_facility_location = 89; // ref(ProductFacilityLocation): productId
    repeated ProductFeatureApplData product_feature_appl = 90; // ref(ProductFeatureAppl): productId
    repeated ProductKeywordData product_keyword = 91; // ref(ProductKeyword): productId
    repeated ProductPriceData product_price = 92; // ref(ProductPrice): productId
    repeated ProductPromoProductData product_promo_product = 93; // ref(ProductPromoProduct): productId
    repeated ProductReviewData product_review = 94; // ref(ProductReview): productId
    repeated ProductStoreSurveyApplData product_store_survey_appl = 95; // ref(ProductStoreSurveyAppl): productId
    repeated ProductSubscriptionResourceData product_subscription_resource = 96; // ref(ProductSubscriptionResource): productId
    repeated QuoteItemData quote_item = 97; // ref(QuoteItem): productId
    repeated ShipmentItemData shipment_item = 98; // ref(ShipmentItem): productId
    repeated ShipmentPackageContentData sub_shipment_package_content = 99; // ref(SubShipmentPackageContent): productId
    repeated ShipmentReceiptData shipment_receipt = 100; // ref(ShipmentReceipt): productId
    repeated SupplierProductData supplier_product = 101; // ref(SupplierProduct): productId
    repeated WorkEffortGoodStandardData work_effort_good_standard = 102; // ref(WorkEffortGoodStandard): productId
    
        
}

// Carrier Shipment Method
message CarrierShipmentBoxTypeData {
    option (routines.entity_type) = "CarrierShipmentBoxType";
    option (routines.keys).keys = "shipment_box_type_id, party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentBoxTypeId, partyId
    string id = 200; 
    // fields
        
    string shipment_box_type_id = 1;    
    string party_id = 2;    
    string packaging_type_code = 3;    
    string oversize_code = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Fixed Asset
message FixedAssetData {
    option (routines.entity_type) = "FixedAsset";
    option (routines.keys).keys = "fixed_asset_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: fixedAssetId
    
    // fields
        
    string fixed_asset_id = 1;    
    string fixed_asset_type_id = 2;
    string class_enum_id = 3; // Enumeration
    string role_type_id = 4; // RoleType    
    string fixed_asset_name = 5;    
    string acquire_order_item_seq_id = 6;    
    google.protobuf.Timestamp date_acquired = 7;    
    google.protobuf.Timestamp date_last_serviced = 8;    
    google.protobuf.Timestamp date_next_service = 9;    
    google.type.Date expected_end_of_life = 10;    
    google.type.Date actual_end_of_life = 11;    
    routines.FixedPoint production_capacity = 12;
    string uom_id = 13; // Uom
    string calendar_id = 14; // TechDataCalendar    
    string serial_number = 15;    
    string located_at_location_seq_id = 16;    
    routines.Currency salvage_value = 17;    
    routines.Currency depreciation = 18;    
    routines.Currency purchase_cost = 19;    
    string purchase_cost_uom_id = 20;    
    google.protobuf.Timestamp last_updated_tx_stamp = 21;    
    google.protobuf.Timestamp created_tx_stamp = 22;
    
    // relations
    FixedAssetData parent_fixed_asset = 23; // ref(ParentFixedAsset): parentFixedAssetId
    ProductData instance_of_product = 24; // ref(InstanceOfProduct): instanceOfProductId
    PartyData party = 25; // ref(Party): partyId
    PartyRoleData party_role = 26; // ref(PartyRole): partyId + roleTypeId
    OrderHeaderData acquire_order_header = 27; // ref(AcquireOrderHeader): acquireOrderId
    OrderItemData acquire_order_item = 28; // ref(AcquireOrderItem): acquireOrderId + acquireOrderItemSeqId
    FacilityLocationData located_at_facility_location = 29; // ref(LocatedAtFacilityLocation): locatedAtFacilityId + locatedAtLocationSeqId
    repeated AcctgTransData acctg_trans = 30; // ref(AcctgTrans): fixedAssetId
    repeated FixedAssetData child_fixed_asset = 31; // ref(ChildFixedAsset): fixedAssetId
    repeated FixedAssetGeoPointData fixed_asset_geo_point = 32; // ref(FixedAssetGeoPoint): fixedAssetId
    repeated FixedAssetProductData fixed_asset_product = 33; // ref(FixedAssetProduct): fixedAssetId
    repeated InventoryItemData fixed_asset_inventory_item = 34; // ref(FixedAssetInventoryItem): fixedAssetId
    repeated WorkEffortData work_effort = 35; // ref(WorkEffort): fixedAssetId
    
        
}

// Web Analytics Configuration
message WebAnalyticsConfigData {
    option (routines.entity_type) = "WebAnalyticsConfig";
    option (routines.keys).keys = "web_site_id, web_analytics_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: webSiteId, webAnalyticsTypeId
    string id = 200; 
    // fields
        
    string web_site_id = 1;
    string web_analytics_type_id = 2; // WebAnalyticsType    
    string web_analytics_code = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Product Category Rollup
message ProductCategoryRollupData {
    option (routines.entity_type) = "ProductCategoryRollup";
    option (routines.keys).keys = "product_category_id, parent_product_category_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productCategoryId, parentProductCategoryId, fromDate
    string id = 200; 
    // fields
        
    string product_category_id = 1;    
    string parent_product_category_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    int64 sequence_num = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Payment Gateway Response
message PaymentGatewayResponseData {
    option (routines.entity_type) = "PaymentGatewayResponse";
    option (routines.keys).keys = "payment_gateway_response_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: paymentGatewayResponseId
    
    // fields
        
    string payment_gateway_response_id = 1;
    string payment_service_type_enum_id = 2; // Enumeration    
    string order_payment_preference_id = 3;
    string payment_method_type_id = 4; // PaymentMethodType    
    string payment_method_id = 5;
    string trans_code_enum_id = 6; // Enumeration    
    routines.Currency amount = 7;
    string currency_uom_id = 8; // Uom    
    string reference_num = 9;    
    string alt_reference = 10;    
    string sub_reference = 11;    
    string gateway_code = 12;    
    string gateway_flag = 13;    
    string gateway_avs_result = 14;    
    string gateway_cv_result = 15;    
    string gateway_score_result = 16;    
    string gateway_message = 17;    
    google.protobuf.Timestamp transaction_date = 18;    
    routines.Indicator result_declined = 19;    
    routines.Indicator result_nsf = 20;    
    routines.Indicator result_bad_expire = 21;    
    routines.Indicator result_bad_card_number = 22;    
    google.protobuf.Timestamp last_updated_tx_stamp = 23;    
    google.protobuf.Timestamp created_tx_stamp = 24;
        
}

// Shipment Item Billing
message ShipmentItemBillingData {
    option (routines.entity_type) = "ShipmentItemBilling";
    option (routines.keys).keys = "shipment_id, shipment_item_seq_id, invoice_id, invoice_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentId, shipmentItemSeqId, invoiceId, invoiceItemSeqId
    string id = 200; 
    // fields
        
    string shipment_id = 1;    
    string shipment_item_seq_id = 2;    
    string invoice_id = 3;    
    string invoice_item_seq_id = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Product Promotion Action
message ProductPromoActionData {
    option (routines.entity_type) = "ProductPromoAction";
    option (routines.keys).keys = "product_promo_id, product_promo_rule_id, product_promo_action_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPromoId, productPromoRuleId, productPromoActionSeqId
    string id = 200; 
    // fields
        
    string product_promo_id = 1;    
    string product_promo_rule_id = 2;    
    string product_promo_action_seq_id = 3;
    string product_promo_action_enum_id = 4; // Enumeration
    string custom_method_id = 5; // CustomMethod
    string order_adjustment_type_id = 6; // OrderAdjustmentType    
    string service_name = 7;    
    routines.FixedPoint quantity = 8;    
    routines.FixedPoint amount = 9;    
    string product_id = 10;    
    string party_id = 11;    
    routines.Indicator use_cart_quantity = 12;    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;
        
}

// Shipment Cost Estimate
message ShipmentCostEstimateData {
    option (routines.entity_type) = "ShipmentCostEstimate";
    option (routines.keys).keys = "shipment_cost_estimate_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentCostEstimateId
    
    // fields
        
    string shipment_cost_estimate_id = 1;    
    string shipment_method_type_id = 2;    
    string carrier_party_id = 3;    
    string carrier_role_type_id = 4;    
    string product_store_ship_meth_id = 5;    
    string product_store_id = 6;    
    string party_id = 7;
    string role_type_id = 8; // RoleType
    string geo_id_to = 9; // Geo
    string geo_id_from = 10; // Geo    
    string weight_break_id = 11;
    string weight_uom_id = 12; // Uom    
    routines.Currency weight_unit_price = 13;    
    string quantity_break_id = 14;
    string quantity_uom_id = 15; // Uom    
    routines.Currency quantity_unit_price = 16;    
    string price_break_id = 17;
    string price_uom_id = 18; // Uom    
    routines.Currency price_unit_price = 19;    
    routines.Currency order_flat_price = 20;    
    routines.FixedPoint order_price_percent = 21;    
    routines.Currency order_item_flat_price = 22;    
    routines.FixedPoint shipping_price_percent = 23;    
    string product_feature_group_id = 24;    
    routines.FixedPoint oversize_unit = 25;    
    routines.Currency oversize_price = 26;    
    routines.FixedPoint feature_percent = 27;    
    routines.Currency feature_price = 28;    
    google.protobuf.Timestamp last_updated_tx_stamp = 29;    
    google.protobuf.Timestamp created_tx_stamp = 30;
        
}

// Supplier-specific product feature information
message SupplierProductFeatureData {
    option (routines.entity_type) = "SupplierProductFeature";
    option (routines.keys).keys = "party_id, product_feature_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, productFeatureId
    string id = 200; 
    // fields
        
    string party_id = 1;    
    string product_feature_id = 2;    
    string description = 3;
    string uom_id = 4; // Uom    
    string id_code = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Security Component - Security Group Permission
message SecurityGroupPermissionData {
    option (routines.entity_type) = "SecurityGroupPermission";
    option (routines.keys).keys = "group_id, permission_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: groupId, permissionId, fromDate
    string id = 200; 
    // fields
        
    string group_id = 1;
    string permission_id = 2; // SecurityPermission    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Survey Multi-Response Group Column/Category
message SurveyMultiRespColumnData {
    option (routines.entity_type) = "SurveyMultiRespColumn";
    option (routines.keys).keys = "survey_id, survey_multi_resp_id, survey_multi_resp_col_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId, surveyMultiRespId, surveyMultiRespColId
    string id = 200; 
    // fields
        
    string survey_id = 1;    
    string survey_multi_resp_id = 2;    
    string survey_multi_resp_col_id = 3;    
    string column_title = 4;    
    int64 sequence_num = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Product Store Inventory Facility Applicability
message ProductStoreKeywordOvrdData {
    option (routines.entity_type) = "ProductStoreKeywordOvrd";
    option (routines.keys).keys = "product_store_id, keyword, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, keyword, fromDate
    string id = 200; 
    // fields
        
    string product_store_id = 1;    
    string keyword = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    string target = 5;
    string target_type_enum_id = 6; // Enumeration    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Product Association
message ProductAssocData {
    option (routines.entity_type) = "ProductAssoc";
    option (routines.keys).keys = "product_id, product_id_to, product_assoc_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, productIdTo, productAssocTypeId, fromDate
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string product_id_to = 2;
    string product_assoc_type_id = 3; // ProductAssocType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    int64 sequence_num = 6;    
    string reason = 7;    
    routines.FixedPoint quantity = 8;    
    routines.FixedPoint scrap_factor = 9;    
    string instruction = 10;    
    string routing_work_effort_id = 11;
    string estimate_calc_method = 12; // CustomMethod    
    string recurrence_info_id = 13;    
    google.protobuf.Timestamp last_updated_tx_stamp = 14;    
    google.protobuf.Timestamp created_tx_stamp = 15;
        
}

// Survey Application Type
message SurveyApplTypeData {
    option (routines.entity_type) = "SurveyApplType";
    option (routines.keys).keys = "survey_appl_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyApplTypeId
    
    // fields
        
    string survey_appl_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;
        
}

// Fixed Asset Product Representation
message FixedAssetProductData {
    option (routines.entity_type) = "FixedAssetProduct";
    option (routines.keys).keys = "fixed_asset_id, product_id, fixed_asset_product_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fixedAssetId, productId, fixedAssetProductTypeId, fromDate
    string id = 200; 
    // fields
        
    string fixed_asset_id = 1;    
    string product_id = 2;
    string fixed_asset_product_type_id = 3; // FixedAssetProductType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    string comments = 6;    
    int64 sequence_num = 7;    
    routines.FixedPoint quantity = 8;
    string quantity_uom_id = 9; // Uom    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

// Payment Application
message PaymentApplicationData {
    option (routines.entity_type) = "PaymentApplication";
    option (routines.keys).keys = "payment_application_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: paymentApplicationId
    
    // fields
        
    string payment_application_id = 1;    
    string payment_id = 2;    
    string invoice_id = 3;    
    string invoice_item_seq_id = 4;    
    string billing_account_id = 5;    
    string override_gl_account_id = 6;    
    string to_payment_id = 7;
    string tax_auth_geo_id = 8; // Geo    
    routines.Currency amount_applied = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

// Invoice Role
message InvoiceRoleData {
    option (routines.entity_type) = "InvoiceRole";
    option (routines.keys).keys = "invoice_id, party_id, role_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: invoiceId, partyId, roleTypeId
    string id = 200; 
    // fields
        
    string invoice_id = 1;    
    string party_id = 2;
    string role_type_id = 3; // RoleType    
    google.protobuf.Timestamp datetime_performed = 4;    
    routines.FixedPoint percentage = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// CustRequest
message CustRequestData {
    option (routines.entity_type) = "CustRequest";
    option (routines.keys).keys = "cust_request_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: custRequestId
    
    // fields
        
    string cust_request_id = 1;    
    string cust_request_type_id = 2;    
    string cust_request_category_id = 3;
    string status_id = 4; // StatusItem    
    string from_party_id = 5;    
    int64 priority = 6;    
    google.protobuf.Timestamp cust_request_date = 7;    
    google.protobuf.Timestamp response_required_date = 8;    
    string cust_request_name = 9;    
    string description = 10;
    string maximum_amount_uom_id = 11; // Uom    
    string product_store_id = 12;
    string sales_channel_enum_id = 13; // Enumeration    
    string fulfill_contact_mech_id = 14;
    string currency_uom_id = 15; // Uom    
    google.protobuf.Timestamp open_date_time = 16;    
    google.protobuf.Timestamp closed_date_time = 17;    
    string internal_comment = 18;    
    string reason = 19;    
    google.protobuf.Timestamp created_date = 20;    
    string created_by_user_login = 21;    
    google.protobuf.Timestamp last_modified_date = 22;    
    string last_modified_by_user_login = 23;    
    google.protobuf.Timestamp last_updated_tx_stamp = 24;    
    google.protobuf.Timestamp created_tx_stamp = 25;    
    double cust_estimated_milli_seconds = 26;    
    int64 cust_sequence_num = 27;    
    string parent_cust_request_id = 28;    
    routines.Indicator billed = 29;
        
}

// Shipment Receipt
message ShipmentReceiptData {
    option (routines.entity_type) = "ShipmentReceipt";
    option (routines.keys).keys = "receipt_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: receiptId
    
    // fields
        
    string receipt_id = 1;    
    string inventory_item_id = 2;    
    string product_id = 3;    
    string shipment_id = 4;    
    string shipment_item_seq_id = 5;    
    string shipment_package_seq_id = 6;    
    string order_id = 7;    
    string order_item_seq_id = 8;    
    string return_id = 9;    
    string return_item_seq_id = 10;
    string rejection_id = 11; // RejectionReason    
    string received_by_user_login_id = 12;    
    google.protobuf.Timestamp datetime_received = 13;    
    string item_description = 14;    
    routines.FixedPoint quantity_accepted = 15;    
    routines.FixedPoint quantity_rejected = 16;    
    google.protobuf.Timestamp last_updated_tx_stamp = 17;    
    google.protobuf.Timestamp created_tx_stamp = 18;
        
}

// Inventory Item Detail
message InventoryItemDetailData {
    option (routines.entity_type) = "InventoryItemDetail";
    option (routines.keys).keys = "inventory_item_id, inventory_item_detail_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: inventoryItemId, inventoryItemDetailSeqId
    string id = 200; 
    // fields
        
    string inventory_item_id = 1;    
    string inventory_item_detail_seq_id = 2;    
    google.protobuf.Timestamp effective_date = 3;    
    routines.FixedPoint quantity_on_hand_diff = 4;    
    routines.FixedPoint available_to_promise_diff = 5;    
    routines.FixedPoint accounting_quantity_diff = 6;    
    routines.FixedPoint unit_cost = 7;    
    string order_id = 8;    
    string order_item_seq_id = 9;    
    string ship_group_seq_id = 10;    
    string shipment_id = 11;    
    string shipment_item_seq_id = 12;    
    string return_id = 13;    
    string return_item_seq_id = 14;    
    string work_effort_id = 15;    
    string fixed_asset_id = 16;    
    string maint_hist_seq_id = 17;    
    string item_issuance_id = 18;    
    string receipt_id = 19;    
    string physical_inventory_id = 20;
    string reason_enum_id = 21; // Enumeration    
    string description = 22;    
    google.protobuf.Timestamp last_updated_tx_stamp = 23;    
    google.protobuf.Timestamp created_tx_stamp = 24;
        
}

// Order Adjustment Billing
message OrderAdjustmentBillingData {
    option (routines.entity_type) = "OrderAdjustmentBilling";
    option (routines.keys).keys = "order_adjustment_id, invoice_id, invoice_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderAdjustmentId, invoiceId, invoiceItemSeqId
    string id = 200; 
    // fields
        
    string order_adjustment_id = 1;    
    string invoice_id = 2;    
    string invoice_item_seq_id = 3;    
    routines.Currency amount = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Product Feature Price
message ProductFeaturePriceData {
    option (routines.entity_type) = "ProductFeaturePrice";
    option (routines.keys).keys = "product_feature_id, product_price_type_id, currency_uom_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productFeatureId, productPriceTypeId, currencyUomId, fromDate
    string id = 200; 
    // fields
        
    string product_feature_id = 1;
    string product_price_type_id = 2; // ProductPriceType
    string currency_uom_id = 3; // Uom    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    routines.Currency price = 6;    
    google.protobuf.Timestamp created_date = 7;    
    string created_by_user_login = 8;    
    google.protobuf.Timestamp last_modified_date = 9;    
    string last_modified_by_user_login = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
        
}

// Product Configuration Options
message ProductConfigOptionData {
    option (routines.entity_type) = "ProductConfigOption";
    option (routines.keys).keys = "config_item_id, config_option_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: configItemId, configOptionId
    string id = 200; 
    // fields
        
    string config_item_id = 1;    
    string config_option_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    string config_option_name = 5;    
    string description = 6;    
    int64 sequence_num = 7;    
    google.protobuf.Timestamp last_updated_tx_stamp = 8;    
    google.protobuf.Timestamp created_tx_stamp = 9;
        
}

// Postal Address
message PostalAddressData {
    option (routines.entity_type) = "PostalAddress";
    option (routines.keys).keys = "contact_mech_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contactMechId
    
    // fields
        
    string contact_mech_id = 1;    
    string to_name = 2;    
    string attn_name = 3;    
    string address1 = 4;    
    string address2 = 5;    
    int64 house_number = 6;    
    string house_number_ext = 7;    
    string directions = 8;    
    string city = 9;
    string city_geo_id = 10; // Geo    
    string postal_code = 11;    
    string postal_code_ext = 12;
    string country_geo_id = 13; // Geo
    string state_province_geo_id = 14; // Geo
    string county_geo_id = 15; // Geo
    string municipality_geo_id = 16; // Geo
    string postal_code_geo_id = 17; // Geo    
    string geo_point_id = 18;    
    google.protobuf.Timestamp last_updated_tx_stamp = 19;    
    google.protobuf.Timestamp created_tx_stamp = 20;
        
}

// Allows financial account, such as gift certificate or calling cards, to be configured at store level
message ProductStoreFinActSettingData {
    option (routines.entity_type) = "ProductStoreFinActSetting";
    option (routines.keys).keys = "product_store_id, fin_account_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, finAccountTypeId
    string id = 200; 
    // fields
        
    string product_store_id = 1;
    string fin_account_type_id = 2; // FinAccountType    
    routines.Indicator require_pin_code = 3;    
    routines.Indicator validate_g_c_fin_acct = 4;    
    int64 account_code_length = 5;    
    int64 pin_code_length = 6;    
    int64 account_valid_days = 7;    
    int64 auth_valid_days = 8;    
    string purchase_survey_id = 9;    
    string purch_survey_send_to = 10;    
    string purch_survey_copy_me = 11;    
    routines.Indicator allow_auth_to_negative = 12;    
    routines.Currency min_balance = 13;    
    routines.Currency replenish_threshold = 14;
    string replenish_method_enum_id = 15; // Enumeration    
    google.protobuf.Timestamp last_updated_tx_stamp = 16;    
    google.protobuf.Timestamp created_tx_stamp = 17;
        
}

// Financial Account
message FinAccountData {
    option (routines.entity_type) = "FinAccount";
    option (routines.keys).keys = "fin_account_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: finAccountId
    
    // fields
        
    string fin_account_id = 1;    
    string fin_account_type_id = 2;    
    string status_id = 3;    
    string fin_account_name = 4;    
    string fin_account_code = 5;    
    string fin_account_pin = 6;
    string currency_uom_id = 7; // Uom    
    string post_to_gl_account_id = 8;    
    google.protobuf.Timestamp from_date = 9;    
    google.protobuf.Timestamp thru_date = 10;    
    routines.Indicator is_refundable = 11;    
    routines.Currency replenish_level = 12;    
    routines.Currency actual_balance = 13;    
    routines.Currency available_balance = 14;    
    google.protobuf.Timestamp last_updated_tx_stamp = 15;    
    google.protobuf.Timestamp created_tx_stamp = 16;
    
    // relations
    PartyData organization_party = 17; // ref(OrganizationParty): organizationPartyId
    PartyData owner_party = 18; // ref(OwnerParty): ownerPartyId
    PaymentMethodData replenish_payment_method = 19; // ref(ReplenishPaymentMethod): replenishPaymentId
    repeated FinAccountStatusData fin_account_status = 20; // ref(FinAccountStatus): finAccountId
    repeated OrderPaymentPreferenceData order_payment_preference = 21; // ref(OrderPaymentPreference): finAccountId
    repeated PaymentMethodData payment_method = 22; // ref(PaymentMethod): finAccountId
    
        
}

// Email Template Setting
message EmailTemplateSettingData {
    option (routines.entity_type) = "EmailTemplateSetting";
    option (routines.keys).keys = "email_template_setting_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: emailTemplateSettingId
    
    // fields
        
    string email_template_setting_id = 1;
    string email_type = 2; // Enumeration    
    string description = 3;    
    string body_screen_location = 4;    
    string xslfo_attach_screen_location = 5;    
    string from_address = 6;    
    string cc_address = 7;    
    string bcc_address = 8;    
    string subject = 9;    
    string content_type = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
        
}

// Survey
message SurveyData {
    option (routines.entity_type) = "Survey";
    option (routines.keys).keys = "survey_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId
    
    // fields
        
    string survey_id = 1;    
    string survey_name = 2;    
    string description = 3;    
    string comments = 4;    
    string submit_caption = 5;    
    string response_service = 6;    
    routines.Indicator is_anonymous = 7;    
    routines.Indicator allow_multiple = 8;    
    routines.Indicator allow_update = 9;    
    string acro_form_content_id = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
        
}

// Define associations between Product facilities
message ProductFacilityAssocData {
    option (routines.entity_type) = "ProductFacilityAssoc";
    option (routines.keys).keys = "product_id, facility_id, facility_id_to, facility_assoc_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, facilityId, facilityIdTo, facilityAssocTypeId, fromDate
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string facility_id = 2;    
    string facility_id_to = 3;
    string facility_assoc_type_id = 4; // FacilityAssocType    
    google.protobuf.Timestamp from_date = 5;    
    google.protobuf.Timestamp thru_date = 6;    
    int64 sequence_num = 7;    
    int64 transit_time = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Order Item Price Info
message OrderItemPriceInfoData {
    option (routines.entity_type) = "OrderItemPriceInfo";
    option (routines.keys).keys = "order_item_price_info_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderItemPriceInfoId
    
    // fields
        
    string order_item_price_info_id = 1;    
    string order_id = 2;    
    string order_item_seq_id = 3;    
    string product_price_rule_id = 4;    
    string product_price_action_seq_id = 5;    
    routines.Currency modify_amount = 6;    
    string description = 7;    
    string rate_code = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Work Effort Good Standard
message WorkEffortGoodStandardData {
    option (routines.entity_type) = "WorkEffortGoodStandard";
    option (routines.keys).keys = "work_effort_id, product_id, work_effort_good_std_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: workEffortId, productId, workEffortGoodStdTypeId, fromDate
    string id = 200; 
    // fields
        
    string work_effort_id = 1;    
    string product_id = 2;
    string work_effort_good_std_type_id = 3; // WorkEffortGoodStandardType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;
    string status_id = 6; // StatusItem    
    double estimated_quantity = 7;    
    routines.Currency estimated_cost = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Person
message PersonData {
    option (routines.entity_type) = "Person";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: partyId
    
    // fields
        
    string party_id = 1;    
    string salutation = 2;    
    string first_name = 3;    
    string middle_name = 4;    
    string last_name = 5;    
    string personal_title = 6;    
    string suffix = 7;    
    string nickname = 8;    
    string first_name_local = 9;    
    string middle_name_local = 10;    
    string last_name_local = 11;    
    string other_local = 12;    
    string member_id = 13;    
    routines.Indicator gender = 14;    
    google.type.Date birth_date = 15;    
    google.type.Date deceased_date = 16;    
    double height = 17;    
    double weight = 18;    
    string mothers_maiden_name = 19;
    string marital_status_enum_id = 20; // Enumeration    
    string social_security_number = 21;    
    string passport_number = 22;    
    google.type.Date passport_expire_date = 23;    
    double total_years_work_experience = 24;    
    string comments = 25;
    string employment_status_enum_id = 26; // Enumeration
    string residence_status_enum_id = 27; // Enumeration    
    string occupation = 28;    
    int64 years_with_employer = 29;    
    int64 months_with_employer = 30;    
    routines.Indicator existing_customer = 31;    
    string card_id = 32;    
    google.protobuf.Timestamp last_updated_tx_stamp = 33;    
    google.protobuf.Timestamp created_tx_stamp = 34;
    
    // relations
    PartyData party = 35; // ref(Party): partyId
    repeated PartyContactMechData party_contact_mech = 36; // ref(PartyContactMech): partyId
    repeated PartyContactMechPurposeData party_contact_mech_purpose = 37; // ref(PartyContactMechPurpose): partyId
    repeated ProductStoreRoleData product_store_role = 38; // ref(ProductStoreRole): partyId
    repeated ShipmentData to_shipment = 39; // ref(ToShipment): partyId
    repeated ShipmentData from_shipment = 40; // ref(FromShipment): partyId
    repeated ShipmentRouteSegmentData carrier_shipment_route_segment = 41; // ref(CarrierShipmentRouteSegment): partyId
    repeated UserLoginData user_login = 42; // ref(UserLogin): partyId
    
        
}

// Tax Authority
message TaxAuthorityData {
    option (routines.entity_type) = "TaxAuthority";
    option (routines.keys).keys = "tax_auth_geo_id, tax_auth_party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: taxAuthGeoId, taxAuthPartyId
    string id = 200; 
    // fields
        
    string tax_auth_geo_id = 1;    
    string tax_auth_party_id = 2;    
    routines.Indicator require_tax_id_for_exemption = 3;    
    string tax_id_format_pattern = 4;    
    routines.Indicator include_tax_in_price = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Product Store Role Association
message ProductStoreRoleData {
    option (routines.entity_type) = "ProductStoreRole";
    option (routines.keys).keys = "party_id, role_type_id, product_store_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, roleTypeId, productStoreId, fromDate
    string id = 200; 
    // fields
        
    string party_id = 1;
    string role_type_id = 2; // RoleType    
    string product_store_id = 3;    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    int64 sequence_num = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Party Contact Mechanism
message PartyContactMechData {
    option (routines.entity_type) = "PartyContactMech";
    option (routines.keys).keys = "party_id, contact_mech_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, contactMechId, fromDate
    string id = 200; 
    // fields
        
    string party_id = 1;    
    string contact_mech_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;
    string role_type_id = 5; // RoleType    
    routines.Indicator allow_solicitation = 6;    
    string extension = 7;    
    routines.Indicator verified = 8;    
    string comments = 9;    
    int64 years_with_contact_mech = 10;    
    int64 months_with_contact_mech = 11;    
    google.protobuf.Timestamp last_updated_tx_stamp = 12;    
    google.protobuf.Timestamp created_tx_stamp = 13;
        
}

// Product Store Email Settings
message ProductStoreEmailSettingData {
    option (routines.entity_type) = "ProductStoreEmailSetting";
    option (routines.keys).keys = "product_store_id, email_type";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, emailType
    string id = 200; 
    // fields
        
    string product_store_id = 1;
    string email_type = 2; // Enumeration    
    string body_screen_location = 3;    
    string xslfo_attach_screen_location = 4;    
    string from_address = 5;    
    string cc_address = 6;    
    string bcc_address = 7;    
    string subject = 8;    
    string content_type = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

// Electronic Text
message ElectronicTextData {
    option (routines.entity_type) = "ElectronicText";
    option (routines.keys).keys = "data_resource_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: dataResourceId
    
    // fields
        
    string data_resource_id = 1;    
    string text_data = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;
        
}

// Tax Authority Association
message TaxAuthorityAssocData {
    option (routines.entity_type) = "TaxAuthorityAssoc";
    option (routines.keys).keys = "tax_auth_geo_id, tax_auth_party_id, to_tax_auth_geo_id, to_tax_auth_party_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: taxAuthGeoId, taxAuthPartyId, toTaxAuthGeoId, toTaxAuthPartyId, fromDate
    string id = 200; 
    // fields
        
    string tax_auth_geo_id = 1;    
    string tax_auth_party_id = 2;    
    string to_tax_auth_geo_id = 3;    
    string to_tax_auth_party_id = 4;    
    google.protobuf.Timestamp from_date = 5;    
    google.protobuf.Timestamp thru_date = 6;
    string tax_authority_assoc_type_id = 7; // TaxAuthorityAssocType    
    google.protobuf.Timestamp last_updated_tx_stamp = 8;    
    google.protobuf.Timestamp created_tx_stamp = 9;
        
}

// Item Issuance
message ItemIssuanceData {
    option (routines.entity_type) = "ItemIssuance";
    option (routines.keys).keys = "item_issuance_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: itemIssuanceId
    
    // fields
        
    string item_issuance_id = 1;    
    string order_id = 2;    
    string order_item_seq_id = 3;    
    string ship_group_seq_id = 4;    
    string inventory_item_id = 5;    
    string shipment_id = 6;    
    string shipment_item_seq_id = 7;    
    string fixed_asset_id = 8;    
    string maint_hist_seq_id = 9;    
    google.protobuf.Timestamp issued_date_time = 10;    
    string issued_by_user_login_id = 11;    
    routines.FixedPoint quantity = 12;    
    routines.FixedPoint cancel_quantity = 13;    
    google.protobuf.Timestamp last_updated_tx_stamp = 14;    
    google.protobuf.Timestamp created_tx_stamp = 15;
        
}

// Party Group
message PartyGroupData {
    option (routines.entity_type) = "PartyGroup";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: partyId
    
    // fields
        
    string party_id = 1;    
    string group_name = 2;    
    string group_name_local = 3;    
    string office_site_name = 4;    
    routines.Currency annual_revenue = 5;    
    int64 num_employees = 6;    
    string ticker_symbol = 7;    
    string comments = 8;    
    string logo_image_url = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
    
    // relations
    PartyData party = 12; // ref(Party): partyId
    repeated PartyContactMechData party_contact_mech = 13; // ref(PartyContactMech): partyId
    repeated PartyContactMechPurposeData party_contact_mech_purpose = 14; // ref(PartyContactMechPurpose): partyId
    repeated ProductStoreRoleData product_store_role = 15; // ref(ProductStoreRole): partyId
    repeated ShipmentData to_shipment = 16; // ref(ToShipment): partyId
    repeated ShipmentData from_shipment = 17; // ref(FromShipment): partyId
    repeated ShipmentRouteSegmentData carrier_shipment_route_segment = 18; // ref(CarrierShipmentRouteSegment): partyId
    repeated UserLoginData user_login = 19; // ref(UserLogin): partyId
    
        
}

// Product Promotion Category
message ProductPromoProductData {
    option (routines.entity_type) = "ProductPromoProduct";
    option (routines.keys).keys = "product_promo_id, product_promo_rule_id, product_promo_action_seq_id, product_promo_cond_seq_id, product_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPromoId, productPromoRuleId, productPromoActionSeqId, productPromoCondSeqId, productId
    string id = 200; 
    // fields
        
    string product_promo_id = 1;    
    string product_promo_rule_id = 2;    
    string product_promo_action_seq_id = 3;    
    string product_promo_cond_seq_id = 4;    
    string product_id = 5;
    string product_promo_appl_enum_id = 6; // Enumeration    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Defines a System Property
message SystemPropertyData {
    option (routines.entity_type) = "SystemProperty";
    option (routines.keys).keys = "system_resource_id, system_property_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: systemResourceId, systemPropertyId
    string id = 200; 
    // fields
        
    string system_resource_id = 1;    
    string system_property_id = 2;    
    string system_property_value = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Product Review
message ProductReviewData {
    option (routines.entity_type) = "ProductReview";
    option (routines.keys).keys = "product_review_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productReviewId
    
    // fields
        
    string product_review_id = 1;    
    string product_store_id = 2;    
    string product_id = 3;    
    string user_login_id = 4;
    string status_id = 5; // StatusItem    
    routines.Indicator posted_anonymous = 6;    
    google.protobuf.Timestamp posted_date_time = 7;    
    routines.FixedPoint product_rating = 8;    
    string product_review = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

// The Order Payment Preference
message OrderPaymentPreferenceData {
    option (routines.entity_type) = "OrderPaymentPreference";
    option (routines.keys).keys = "order_payment_preference_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderPaymentPreferenceId
    
    // fields
        
    string order_payment_preference_id = 1;    
    string order_id = 2;    
    string order_item_seq_id = 3;    
    string ship_group_seq_id = 4;
    string product_price_purpose_id = 5; // ProductPricePurpose
    string payment_method_type_id = 6; // PaymentMethodType    
    string payment_method_id = 7;    
    string fin_account_id = 8;    
    string security_code = 9;    
    string track2 = 10;    
    routines.Indicator present_flag = 11;    
    routines.Indicator swiped_flag = 12;    
    routines.Indicator overflow_flag = 13;    
    routines.Currency max_amount = 14;    
    int64 process_attempt = 15;    
    string billing_postal_code = 16;    
    string manual_auth_code = 17;    
    string manual_ref_num = 18;
    string status_id = 19; // StatusItem    
    routines.Indicator needs_nsf_retry = 20;    
    google.protobuf.Timestamp created_date = 21;    
    string created_by_user_login = 22;    
    google.protobuf.Timestamp last_modified_date = 23;    
    string last_modified_by_user_login = 24;    
    google.protobuf.Timestamp last_updated_tx_stamp = 25;    
    google.protobuf.Timestamp created_tx_stamp = 26;
        
}

// Supplier Product
message SupplierProductData {
    option (routines.entity_type) = "SupplierProduct";
    option (routines.keys).keys = "product_id, party_id, available_from_date, minimum_order_quantity, currency_uom_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, partyId, currencyUomId, minimumOrderQuantity, availableFromDate
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string party_id = 2;    
    google.protobuf.Timestamp available_from_date = 3;    
    google.protobuf.Timestamp available_thru_date = 4;
    string supplier_pref_order_id = 5; // SupplierPrefOrder    
    string supplier_rating_type_id = 6;    
    routines.FixedPoint standard_lead_time_days = 7;    
    routines.FixedPoint minimum_order_quantity = 8;    
    routines.FixedPoint order_qty_increments = 9;    
    routines.FixedPoint units_included = 10;
    string quantity_uom_id = 11; // Uom    
    string agreement_id = 12;    
    string agreement_item_seq_id = 13;    
    routines.Currency last_price = 14;    
    routines.Currency shipping_price = 15;
    string currency_uom_id = 16; // Uom    
    string supplier_product_name = 17;    
    string supplier_product_id = 18;    
    routines.Indicator can_drop_ship = 19;    
    string comments = 20;    
    google.protobuf.Timestamp last_updated_tx_stamp = 21;    
    google.protobuf.Timestamp created_tx_stamp = 22;
        
}

// Order Status
message OrderStatusData {
    option (routines.entity_type) = "OrderStatus";
    option (routines.keys).keys = "order_status_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderStatusId
    
    // fields
        
    string order_status_id = 1;
    string status_id = 2; // StatusItem    
    string order_id = 3;    
    string order_item_seq_id = 4;    
    string order_payment_preference_id = 5;    
    google.protobuf.Timestamp status_datetime = 6;    
    string status_user_login = 7;    
    string change_reason = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Party
message PartyData {
    option (routines.entity_type) = "Party";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: partyId
    
    // fields
        
    string party_id = 1;    
    string party_type_id = 2;    
    string external_id = 3;
    string preferred_currency_uom_id = 4; // Uom    
    string description = 5;
    string status_id = 6; // StatusItem    
    google.protobuf.Timestamp created_date = 7;    
    google.protobuf.Timestamp last_modified_date = 8;
    string data_source_id = 9; // DataSource    
    routines.Indicator is_unread = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
    
    // relations
    UserLoginData created_by_user_login = 13; // ref(CreatedByUserLogin): createdByUserLogin
    UserLoginData last_modified_by_user_login = 14; // ref(LastModifiedByUserLogin): lastModifiedByUserLogin
    repeated AcctgTransData acctg_trans = 15; // ref(AcctgTrans): partyId
    repeated AcctgTransEntryData acctg_trans_entry = 16; // ref(AcctgTransEntry): partyId
    repeated AgreementData from_agreement = 17; // ref(FromAgreement): partyId
    repeated AgreementData to_agreement = 18; // ref(ToAgreement): partyId
    repeated BillingAccountRoleData billing_account_role = 19; // ref(BillingAccountRole): partyId
    repeated CarrierShipmentBoxTypeData carrier_shipment_box_type = 20; // ref(CarrierShipmentBoxType): partyId
    repeated CarrierShipmentMethodData carrier_shipment_method = 21; // ref(CarrierShipmentMethod): partyId
    repeated CommunicationEventData to_communication_event = 22; // ref(ToCommunicationEvent): partyId
    repeated CommunicationEventData from_communication_event = 23; // ref(FromCommunicationEvent): partyId
    repeated CommunicationEventRoleData communication_event_role = 24; // ref(CommunicationEventRole): partyId
    repeated ContentRoleData content_role = 25; // ref(ContentRole): partyId
    repeated CustRequestData from_cust_request = 26; // ref(FromCustRequest): partyId
    repeated CustRequestTypeData cust_request_type = 27; // ref(CustRequestType): partyId
    repeated FinAccountData organization_fin_account = 28; // ref(OrganizationFinAccount): partyId
    repeated FinAccountData owner_fin_account = 29; // ref(OwnerFinAccount): partyId
    repeated FixedAssetData fixed_asset = 30; // ref(FixedAsset): partyId
    repeated InventoryItemData inventory_item = 31; // ref(InventoryItem): partyId
    repeated InventoryItemData owner_inventory_item = 32; // ref(OwnerInventoryItem): partyId
    repeated InvoiceData from_invoice = 33; // ref(FromInvoice): partyId
    repeated InvoiceData invoice = 34; // ref(Invoice): partyId
    repeated InvoiceItemData tax_authority_invoice_item = 35; // ref(TaxAuthorityInvoiceItem): partyId
    repeated InvoiceItemData override_org_invoice_item = 36; // ref(OverrideOrgInvoiceItem): partyId
    repeated InvoiceRoleData invoice_role = 37; // ref(InvoiceRole): partyId
    repeated OrderItemShipGroupData supplier_order_item_ship_group = 38; // ref(SupplierOrderItemShipGroup): partyId
    repeated OrderItemShipGroupData vendor_order_item_ship_group = 39; // ref(VendorOrderItemShipGroup): partyId
    repeated OrderItemShipGroupData carrier_order_item_ship_group = 40; // ref(CarrierOrderItemShipGroup): partyId
    repeated OrderRoleData order_role = 41; // ref(OrderRole): partyId
    repeated PartyContactMechData party_contact_mech = 42; // ref(PartyContactMech): partyId
    repeated PartyContactMechPurposeData party_contact_mech_purpose = 43; // ref(PartyContactMechPurpose): partyId
    repeated PartyGeoPointData party_geo_point = 44; // ref(PartyGeoPoint): partyId
    PartyGroupData party_group = 45; // ref(PartyGroup): partyId
    repeated PartyIdentificationData party_identification = 46; // ref(PartyIdentification): partyId
    repeated PartyRelationshipData from_party_relationship = 47; // ref(FromPartyRelationship): partyId
    repeated PartyRelationshipData to_party_relationship = 48; // ref(ToPartyRelationship): partyId
    repeated PartyRoleData party_role = 49; // ref(PartyRole): partyId
    repeated PartyStatusData party_status = 50; // ref(PartyStatus): partyId
    repeated PartyTaxAuthInfoData party_tax_auth_info = 51; // ref(PartyTaxAuthInfo): partyId
    repeated PaymentData from_payment = 52; // ref(FromPayment): partyId
    repeated PaymentData to_payment = 53; // ref(ToPayment): partyId
    repeated PaymentMethodData payment_method = 54; // ref(PaymentMethod): partyId
    PersonData person = 55; // ref(Person): partyId
    repeated ProductCategoryRoleData product_category_role = 56; // ref(ProductCategoryRole): partyId
    repeated ProductPriceData tax_authority_product_price = 57; // ref(TaxAuthorityProductPrice): partyId
    repeated ProductPromoData product_promo = 58; // ref(ProductPromo): partyId
    repeated ProductStoreData product_store = 59; // ref(ProductStore): partyId
    repeated ProductStoreRoleData product_store_role = 60; // ref(ProductStoreRole): partyId
    repeated ProductStoreShipmentMethData product_store_shipment_meth = 61; // ref(ProductStoreShipmentMeth): partyId
    repeated QuoteData quote = 62; // ref(Quote): partyId
    repeated QuoteRoleData quote_role = 63; // ref(QuoteRole): partyId
    repeated ShipmentData to_shipment = 64; // ref(ToShipment): partyId
    repeated ShipmentData from_shipment = 65; // ref(FromShipment): partyId
    repeated ShipmentCostEstimateData shipment_cost_estimate = 66; // ref(ShipmentCostEstimate): partyId
    repeated ShipmentRouteSegmentData carrier_shipment_route_segment = 67; // ref(CarrierShipmentRouteSegment): partyId
    repeated SupplierProductData supplier_product = 68; // ref(SupplierProduct): partyId
    repeated SupplierProductFeatureData supplier_product_feature = 69; // ref(SupplierProductFeature): partyId
    repeated TaxAuthorityData tax_auth_tax_authority = 70; // ref(TaxAuthTaxAuthority): partyId
    repeated TaxAuthorityGlAccountData organization_tax_authority_gl_account = 71; // ref(OrganizationTaxAuthorityGlAccount): partyId
    repeated UserLoginData user_login = 72; // ref(UserLogin): partyId
    
        
}

// Content Role
message ContentRoleData {
    option (routines.entity_type) = "ContentRole";
    option (routines.keys).keys = "content_id, party_id, role_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentId, partyId, roleTypeId, fromDate
    string id = 200; 
    // fields
        
    string content_id = 1;    
    string party_id = 2;    
    string role_type_id = 3;    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Agreement Item
message AgreementItemData {
    option (routines.entity_type) = "AgreementItem";
    option (routines.keys).keys = "agreement_id, agreement_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: agreementId, agreementItemSeqId
    string id = 200; 
    // fields
        
    string agreement_id = 1;    
    string agreement_item_seq_id = 2;    
    string agreement_item_type_id = 3;    
    string currency_uom_id = 4;    
    string agreement_text = 5;    
    bytes agreement_image = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Party Tax Information
message PartyTaxAuthInfoData {
    option (routines.entity_type) = "PartyTaxAuthInfo";
    option (routines.keys).keys = "party_id, tax_auth_geo_id, tax_auth_party_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, taxAuthGeoId, taxAuthPartyId, fromDate
    string id = 200; 
    // fields
        
    string party_id = 1;    
    string tax_auth_geo_id = 2;    
    string tax_auth_party_id = 3;    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    string party_tax_id = 6;    
    routines.Indicator is_exempt = 7;    
    routines.Indicator is_nexus = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Survey Multi-Response Group
message SurveyMultiRespData {
    option (routines.entity_type) = "SurveyMultiResp";
    option (routines.keys).keys = "survey_id, survey_multi_resp_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId, surveyMultiRespId
    string id = 200; 
    // fields
        
    string survey_id = 1;    
    string survey_multi_resp_id = 2;    
    string multi_resp_title = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Accounting Transaction
message AcctgTransData {
    option (routines.entity_type) = "AcctgTrans";
    option (routines.keys).keys = "acctg_trans_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: acctgTransId
    
    // fields
        
    string acctg_trans_id = 1;    
    string acctg_trans_type_id = 2;    
    string description = 3;    
    google.protobuf.Timestamp transaction_date = 4;    
    routines.Indicator is_posted = 5;    
    google.protobuf.Timestamp posted_date = 6;    
    google.protobuf.Timestamp scheduled_posting_date = 7;
    string gl_journal_id = 8; // GlJournal
    string gl_fiscal_type_id = 9; // GlFiscalType    
    string voucher_ref = 10;    
    google.protobuf.Timestamp voucher_date = 11;
    string group_status_id = 12; // StatusItem    
    string fixed_asset_id = 13;    
    string inventory_item_id = 14;    
    string physical_inventory_id = 15;    
    string party_id = 16;
    string role_type_id = 17; // RoleType    
    string invoice_id = 18;    
    string payment_id = 19;    
    string fin_account_trans_id = 20;    
    string shipment_id = 21;    
    string receipt_id = 22;    
    string work_effort_id = 23;    
    string their_acctg_trans_id = 24;    
    google.protobuf.Timestamp created_date = 25;    
    string created_by_user_login = 26;    
    google.protobuf.Timestamp last_modified_date = 27;    
    string last_modified_by_user_login = 28;    
    google.protobuf.Timestamp last_updated_tx_stamp = 29;    
    google.protobuf.Timestamp created_tx_stamp = 30;
        
}

// Data Object
message DataResourceData {
    option (routines.entity_type) = "DataResource";
    option (routines.keys).keys = "data_resource_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: dataResourceId
    
    // fields
        
    string data_resource_id = 1;    
    string data_resource_type_id = 2;
    string data_template_type_id = 3; // DataTemplateType
    string data_category_id = 4; // DataCategory
    string data_source_id = 5; // DataSource
    string status_id = 6; // StatusItem    
    string data_resource_name = 7;    
    string locale_string = 8;
    string mime_type_id = 9; // MimeType
    string character_set_id = 10; // CharacterSet    
    string object_info = 11;    
    string survey_id = 12;    
    string survey_response_id = 13;    
    string related_detail_id = 14;    
    routines.Indicator is_public = 15;    
    google.protobuf.Timestamp created_date = 16;    
    string created_by_user_login = 17;    
    google.protobuf.Timestamp last_modified_date = 18;    
    string last_modified_by_user_login = 19;    
    google.protobuf.Timestamp last_updated_tx_stamp = 20;    
    google.protobuf.Timestamp created_tx_stamp = 21;
        
}

// Shipment Item
message ShipmentItemData {
    option (routines.entity_type) = "ShipmentItem";
    option (routines.keys).keys = "shipment_id, shipment_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentId, shipmentItemSeqId
    string id = 200; 
    // fields
        
    string shipment_id = 1;    
    string shipment_item_seq_id = 2;    
    string product_id = 3;    
    routines.FixedPoint quantity = 4;    
    string shipment_content_description = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Facility Contact Mechanism
message FacilityContactMechData {
    option (routines.entity_type) = "FacilityContactMech";
    option (routines.keys).keys = "facility_id, contact_mech_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: facilityId, contactMechId, fromDate
    string id = 200; 
    // fields
        
    string facility_id = 1;    
    string contact_mech_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    string extension = 5;    
    string comments = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Party Identification
message PartyIdentificationData {
    option (routines.entity_type) = "PartyIdentification";
    option (routines.keys).keys = "party_id, party_identification_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, partyIdentificationTypeId
    string id = 200; 
    // fields
        
    string party_id = 1;    
    string party_identification_type_id = 2;    
    string id_value = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Agreement
message AgreementData {
    option (routines.entity_type) = "Agreement";
    option (routines.keys).keys = "agreement_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: agreementId
    
    // fields
        
    string agreement_id = 1;    
    string product_id = 2;    
    string party_id_from = 3;    
    string party_id_to = 4;    
    string role_type_id_from = 5;
    string role_type_id_to = 6; // RoleType    
    string agreement_type_id = 7;    
    google.protobuf.Timestamp agreement_date = 8;    
    google.protobuf.Timestamp from_date = 9;    
    google.protobuf.Timestamp thru_date = 10;    
    string description = 11;    
    string text_data = 12;    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;
        
}

// Communication Event Role Entity showing all participants of the communication event.
message CommunicationEventRoleData {
    option (routines.entity_type) = "CommunicationEventRole";
    option (routines.keys).keys = "communication_event_id, party_id, role_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: communicationEventId, partyId, roleTypeId
    string id = 200; 
    // fields
        
    string communication_event_id = 1;    
    string party_id = 2;
    string role_type_id = 3; // RoleType    
    string contact_mech_id = 4;
    string status_id = 5; // StatusItem    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Survey Question Category
message SurveyQuestionCategoryData {
    option (routines.entity_type) = "SurveyQuestionCategory";
    option (routines.keys).keys = "survey_question_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyQuestionCategoryId
    
    // fields
        
    string survey_question_category_id = 1;    
    string parent_category_id = 2;    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Catalog Category Association
message ProdCatalogCategoryData {
    option (routines.entity_type) = "ProdCatalogCategory";
    option (routines.keys).keys = "prod_catalog_id, product_category_id, prod_catalog_category_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: prodCatalogId, productCategoryId, prodCatalogCategoryTypeId, fromDate
    string id = 200; 
    // fields
        
    string prod_catalog_id = 1;    
    string product_category_id = 2;
    string prod_catalog_category_type_id = 3; // ProdCatalogCategoryType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    int64 sequence_num = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Tax Authority GL Account
message TaxAuthorityGlAccountData {
    option (routines.entity_type) = "TaxAuthorityGlAccount";
    option (routines.keys).keys = "tax_auth_geo_id, tax_auth_party_id, organization_party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: taxAuthGeoId, taxAuthPartyId, organizationPartyId
    string id = 200; 
    // fields
        
    string tax_auth_geo_id = 1;    
    string tax_auth_party_id = 2;    
    string organization_party_id = 3;    
    string gl_account_id = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Product Category Role
message ProductCategoryRoleData {
    option (routines.entity_type) = "ProductCategoryRole";
    option (routines.keys).keys = "product_category_id, party_id, role_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productCategoryId, partyId, roleTypeId, fromDate
    string id = 200; 
    // fields
        
    string product_category_id = 1;    
    string party_id = 2;
    string role_type_id = 3; // RoleType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    string comments = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Order Item
message OrderItemData {
    option (routines.entity_type) = "OrderItem";
    option (routines.keys).keys = "order_id, order_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: orderId, orderItemSeqId
    string id = 200; 
    // fields
        
    string order_id = 1;    
    string order_item_seq_id = 2;    
    string external_id = 3;    
    string order_item_type_id = 4;    
    string order_item_group_seq_id = 5;    
    routines.Indicator is_item_group_primary = 6;    
    string budget_id = 7;    
    string budget_item_seq_id = 8;    
    string supplier_product_id = 9;    
    string product_feature_id = 10;    
    string prod_catalog_id = 11;    
    string product_category_id = 12;    
    routines.Indicator is_promo = 13;    
    string quote_item_seq_id = 14;    
    string shopping_list_id = 15;    
    string shopping_list_item_seq_id = 16;    
    string subscription_id = 17;    
    string deployment_id = 18;    
    routines.FixedPoint quantity = 19;    
    routines.FixedPoint cancel_quantity = 20;    
    routines.FixedPoint selected_amount = 21;    
    routines.Currency unit_price = 22;    
    routines.Currency unit_list_price = 23;    
    routines.Currency unit_average_cost = 24;    
    routines.Currency unit_recurring_price = 25;    
    routines.Indicator is_modified_price = 26;
    string recurring_freq_uom_id = 27; // Uom    
    string item_description = 28;    
    string comments = 29;    
    string corresponding_po_id = 30;
    string status_id = 31; // StatusValidChange
    string sync_status_id = 32; // StatusItem    
    google.protobuf.Timestamp estimated_ship_date = 33;    
    google.protobuf.Timestamp estimated_delivery_date = 34;    
    google.protobuf.Timestamp auto_cancel_date = 35;    
    google.protobuf.Timestamp dont_cancel_set_date = 36;    
    google.protobuf.Timestamp ship_before_date = 37;    
    google.protobuf.Timestamp ship_after_date = 38;    
    google.protobuf.Timestamp reserve_after_date = 39;    
    google.protobuf.Timestamp cancel_back_order_date = 40;    
    string override_gl_account_id = 41;    
    string sales_opportunity_id = 42;    
    google.protobuf.Timestamp last_updated_tx_stamp = 43;    
    google.protobuf.Timestamp created_tx_stamp = 44;
    
    // relations
    OrderHeaderData order_header = 45; // ref(OrderHeader): orderId
    ProductData product = 46; // ref(Product): productId
    InventoryItemData from_inventory_item = 47; // ref(FromInventoryItem): fromInventoryItemId
    repeated ProductFacilityLocationData product_facility_location = 48; // ref(ProductFacilityLocation): productId
    UserLoginData dont_cancel_set_user_login = 49; // ref(DontCancelSetUserLogin): dontCancelSetUserLogin
    QuoteItemData quote_item = 50; // ref(QuoteItem): quoteId + quoteItemSeqId
    UserLoginData change_by_user_login = 51; // ref(ChangeByUserLogin): changeByUserLoginId
    repeated FixedAssetData acquire_fixed_asset = 52; // ref(AcquireFixedAsset): orderId + orderItemSeqId
    repeated ItemIssuanceData item_issuance = 53; // ref(ItemIssuance): orderId + orderItemSeqId
    repeated OrderAdjustmentData order_adjustment = 54; // ref(OrderAdjustment): orderId + orderItemSeqId
    repeated OrderItemBillingData order_item_billing = 55; // ref(OrderItemBilling): orderId + orderItemSeqId
    repeated OrderItemPriceInfoData order_item_price_info = 56; // ref(OrderItemPriceInfo): orderId + orderItemSeqId
    repeated OrderItemShipGroupAssocData order_item_ship_group_assoc = 57; // ref(OrderItemShipGroupAssoc): orderId + orderItemSeqId
    repeated OrderItemShipGrpInvResData order_item_ship_grp_inv_res = 58; // ref(OrderItemShipGrpInvRes): orderId + orderItemSeqId
    repeated OrderPaymentPreferenceData order_payment_preference = 59; // ref(OrderPaymentPreference): orderId + orderItemSeqId
    repeated OrderStatusData order_status = 60; // ref(OrderStatus): orderId + orderItemSeqId
    repeated ShipmentReceiptData shipment_receipt = 61; // ref(ShipmentReceipt): orderId + orderItemSeqId
    
        
}

// Shipment Time Estimation Entity
message ShipmentTimeEstimateData {
    option (routines.entity_type) = "ShipmentTimeEstimate";
    option (routines.keys).keys = "shipment_method_type_id, party_id, role_type_id, geo_id_to, geo_id_from, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentMethodTypeId, partyId, roleTypeId, geoIdTo, geoIdFrom, fromDate
    string id = 200; 
    // fields
        
    string shipment_method_type_id = 1;    
    string party_id = 2;    
    string role_type_id = 3;
    string geo_id_to = 4; // Geo
    string geo_id_from = 5; // Geo    
    google.protobuf.Timestamp from_date = 6;    
    google.protobuf.Timestamp thru_date = 7;    
    routines.FixedPoint lead_time = 8;
    string lead_time_uom_id = 9; // Uom    
    int64 sequence_number = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
        
}

// Tax Authority Rate
message TaxAuthorityRateProductData {
    option (routines.entity_type) = "TaxAuthorityRateProduct";
    option (routines.keys).keys = "tax_authority_rate_seq_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: taxAuthorityRateSeqId
    
    // fields
        
    string tax_authority_rate_seq_id = 1;    
    string tax_auth_geo_id = 2;    
    string tax_auth_party_id = 3;
    string tax_authority_rate_type_id = 4; // TaxAuthorityRateType    
    string product_store_id = 5;    
    string product_category_id = 6;    
    string title_transfer_enum_id = 7;    
    routines.Currency min_item_price = 8;    
    routines.Currency min_purchase = 9;    
    routines.Indicator tax_shipping = 10;    
    routines.FixedPoint tax_percentage = 11;    
    routines.Indicator tax_promotions = 12;    
    google.protobuf.Timestamp from_date = 13;    
    google.protobuf.Timestamp thru_date = 14;    
    string description = 15;    
    routines.Indicator is_tax_in_shipping_price = 16;    
    google.protobuf.Timestamp last_updated_tx_stamp = 17;    
    google.protobuf.Timestamp created_tx_stamp = 18;
        
}

// Product Category Data Object
message ProductCategoryContentData {
    option (routines.entity_type) = "ProductCategoryContent";
    option (routines.keys).keys = "product_category_id, content_id, prod_cat_content_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productCategoryId, contentId, prodCatContentTypeId, fromDate
    string id = 200; 
    // fields
        
    string product_category_id = 1;    
    string content_id = 2;
    string prod_cat_content_type_id = 3; // ProductCategoryContentType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp purchase_from_date = 6;    
    google.protobuf.Timestamp purchase_thru_date = 7;    
    int64 use_count_limit = 8;    
    routines.FixedPoint use_days_limit = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

// Order Item Package Association
message OrderItemShipGroupAssocData {
    option (routines.entity_type) = "OrderItemShipGroupAssoc";
    option (routines.keys).keys = "order_id, order_item_seq_id, ship_group_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderId, orderItemSeqId, shipGroupSeqId
    string id = 200; 
    // fields
        
    string order_id = 1;    
    string order_item_seq_id = 2;    
    string ship_group_seq_id = 3;    
    routines.FixedPoint quantity = 4;    
    routines.FixedPoint cancel_quantity = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Invoice Status
message InvoiceStatusData {
    option (routines.entity_type) = "InvoiceStatus";
    option (routines.keys).keys = "status_id, invoice_id, status_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: statusId, invoiceId, statusDate
    string id = 200; 
    // fields
    
    string status_id = 1; // StatusItem    
    string invoice_id = 2;    
    google.protobuf.Timestamp status_date = 3;    
    string change_by_user_login_id = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Web Site Content Associations
message WebSiteContentData {
    option (routines.entity_type) = "WebSiteContent";
    option (routines.keys).keys = "web_site_id, content_id, web_site_content_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: webSiteId, contentId, webSiteContentTypeId, fromDate
    string id = 200; 
    // fields
        
    string web_site_id = 1;    
    string content_id = 2;
    string web_site_content_type_id = 3; // WebSiteContentType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Survey Question
message SurveyQuestionData {
    option (routines.entity_type) = "SurveyQuestion";
    option (routines.keys).keys = "survey_question_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyQuestionId
    
    // fields
        
    string survey_question_id = 1;    
    string survey_question_category_id = 2;
    string survey_question_type_id = 3; // SurveyQuestionType    
    string description = 4;    
    string question = 5;    
    string hint = 6;
    string enum_type_id = 7; // Enumeration
    string geo_id = 8; // Geo    
    string format_string = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

// Content Association
message ContentAssocData {
    option (routines.entity_type) = "ContentAssoc";
    option (routines.keys).keys = "content_id, content_id_to, content_assoc_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentId, contentIdTo, contentAssocTypeId, fromDate
    string id = 200; 
    // fields
        
    string content_id = 1;    
    string content_id_to = 2;
    string content_assoc_type_id = 3; // ContentAssocType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;
    string content_assoc_predicate_id = 6; // ContentAssocPredicate
    string data_source_id = 7; // DataSource    
    int64 sequence_num = 8;    
    string map_key = 9;    
    int64 upper_coordinate = 10;    
    int64 left_coordinate = 11;    
    google.protobuf.Timestamp created_date = 12;    
    string created_by_user_login = 13;    
    google.protobuf.Timestamp last_modified_date = 14;    
    string last_modified_by_user_login = 15;    
    google.protobuf.Timestamp last_updated_tx_stamp = 16;    
    google.protobuf.Timestamp created_tx_stamp = 17;
        
}

// Tax Authority Product Category
message TaxAuthorityCategoryData {
    option (routines.entity_type) = "TaxAuthorityCategory";
    option (routines.keys).keys = "tax_auth_geo_id, tax_auth_party_id, product_category_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: taxAuthGeoId, taxAuthPartyId, productCategoryId
    string id = 200; 
    // fields
        
    string tax_auth_geo_id = 1;    
    string tax_auth_party_id = 2;    
    string product_category_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Quote Item
message QuoteItemData {
    option (routines.entity_type) = "QuoteItem";
    option (routines.keys).keys = "quote_id, quote_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: quoteId, quoteItemSeqId
    string id = 200; 
    // fields
        
    string quote_id = 1;    
    string quote_item_seq_id = 2;    
    string product_id = 3;    
    string product_feature_id = 4;    
    string deliverable_type_id = 5;    
    string skill_type_id = 6;
    string uom_id = 7; // Uom    
    string work_effort_id = 8;    
    string cust_request_id = 9;    
    string cust_request_item_seq_id = 10;    
    routines.FixedPoint quantity = 11;    
    routines.FixedPoint selected_amount = 12;    
    routines.Currency quote_unit_price = 13;    
    google.protobuf.Timestamp reserv_start = 14;    
    routines.FixedPoint reserv_length = 15;    
    routines.FixedPoint reserv_persons = 16;    
    string config_id = 17;    
    google.protobuf.Timestamp estimated_delivery_date = 18;    
    string comments = 19;    
    routines.Indicator is_promo = 20;    
    int64 lead_time_days = 21;    
    google.protobuf.Timestamp last_updated_tx_stamp = 22;    
    google.protobuf.Timestamp created_tx_stamp = 23;
        
}

// Catalog
message ProdCatalogData {
    option (routines.entity_type) = "ProdCatalog";
    option (routines.keys).keys = "prod_catalog_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: prodCatalogId
    
    // fields
        
    string prod_catalog_id = 1;    
    string catalog_name = 2;    
    routines.Indicator use_quick_add = 3;    
    string style_sheet = 4;    
    string header_logo = 5;    
    string content_path_prefix = 6;    
    string template_path_prefix = 7;    
    routines.Indicator view_allow_perm_reqd = 8;    
    routines.Indicator purchase_allow_perm_reqd = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
    
    // relations
    repeated ProdCatalogCategoryData prod_catalog_category = 12; // ref(ProdCatalogCategory): prodCatalogId
    repeated ProductStoreCatalogData product_store_catalog = 13; // ref(ProductStoreCatalog): prodCatalogId
    
        
}

// Product Promotion Condition
message ProductPromoCondData {
    option (routines.entity_type) = "ProductPromoCond";
    option (routines.keys).keys = "product_promo_id, product_promo_rule_id, product_promo_cond_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPromoId, productPromoRuleId, productPromoCondSeqId
    string id = 200; 
    // fields
        
    string product_promo_id = 1;    
    string product_promo_rule_id = 2;    
    string product_promo_cond_seq_id = 3;
    string custom_method_id = 4; // CustomMethod
    string input_param_enum_id = 5; // Enumeration
    string operator_enum_id = 6; // Enumeration    
    string cond_value = 7;    
    string other_value = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Facility Location
message FacilityLocationData {
    option (routines.entity_type) = "FacilityLocation";
    option (routines.keys).keys = "facility_id, location_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: facilityId, locationSeqId
    string id = 200; 
    // fields
        
    string facility_id = 1;    
    string location_seq_id = 2;
    string location_type_enum_id = 3; // Enumeration    
    string area_id = 4;    
    string aisle_id = 5;    
    string section_id = 6;    
    string level_id = 7;    
    string position_id = 8;    
    string geo_point_id = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

// Product Promotion Category
message ProductPromoCategoryData {
    option (routines.entity_type) = "ProductPromoCategory";
    option (routines.keys).keys = "product_promo_id, product_promo_rule_id, product_promo_action_seq_id, product_promo_cond_seq_id, product_category_id, and_group_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPromoId, productPromoRuleId, productPromoActionSeqId, productPromoCondSeqId, productCategoryId, andGroupId
    string id = 200; 
    // fields
        
    string product_promo_id = 1;    
    string product_promo_rule_id = 2;    
    string product_promo_action_seq_id = 3;    
    string product_promo_cond_seq_id = 4;    
    string product_category_id = 5;    
    string and_group_id = 6;
    string product_promo_appl_enum_id = 7; // Enumeration    
    routines.Indicator include_sub_categories = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Tracks a history of the status of a Party
message PartyStatusData {
    option (routines.entity_type) = "PartyStatus";
    option (routines.keys).keys = "status_id, party_id, status_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: statusId, partyId, statusDate
    string id = 200; 
    // fields
    
    string status_id = 1; // StatusItem    
    string party_id = 2;    
    google.protobuf.Timestamp status_date = 3;    
    string change_by_user_login_id = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Product Facility
message ProductFacilityLocationData {
    option (routines.entity_type) = "ProductFacilityLocation";
    option (routines.keys).keys = "product_id, facility_id, location_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, facilityId, locationSeqId
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string facility_id = 2;    
    string location_seq_id = 3;    
    routines.FixedPoint minimum_stock = 4;    
    routines.FixedPoint move_quantity = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Survey Page Type
message SurveyPageData {
    option (routines.entity_type) = "SurveyPage";
    option (routines.keys).keys = "survey_id, survey_page_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId, surveyPageSeqId
    string id = 200; 
    // fields
        
    string survey_id = 1;    
    string survey_page_seq_id = 2;    
    string page_name = 3;    
    int64 sequence_num = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Shipment Contact Mechanism Type
message ShipmentBoxTypeData {
    option (routines.entity_type) = "ShipmentBoxType";
    option (routines.keys).keys = "shipment_box_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentBoxTypeId
    
    // fields
        
    string shipment_box_type_id = 1;    
    string description = 2;
    string dimension_uom_id = 3; // Uom    
    routines.FixedPoint box_length = 4;    
    routines.FixedPoint box_width = 5;    
    routines.FixedPoint box_height = 6;
    string weight_uom_id = 7; // Uom    
    routines.FixedPoint box_weight = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Shipment Package Route Segment
message ShipmentPackageRouteSegData {
    option (routines.entity_type) = "ShipmentPackageRouteSeg";
    option (routines.keys).keys = "shipment_id, shipment_package_seq_id, shipment_route_segment_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentId, shipmentPackageSeqId, shipmentRouteSegmentId
    string id = 200; 
    // fields
        
    string shipment_id = 1;    
    string shipment_package_seq_id = 2;    
    string shipment_route_segment_id = 3;    
    string tracking_code = 4;    
    string box_number = 5;    
    bytes label_image = 6;    
    bytes label_intl_sign_image = 7;    
    string label_html = 8;    
    routines.Indicator label_printed = 9;    
    bytes international_invoice = 10;    
    routines.Currency package_transport_cost = 11;    
    routines.Currency package_service_cost = 12;    
    routines.Currency package_other_cost = 13;    
    routines.Currency cod_amount = 14;    
    routines.Currency insured_amount = 15;
    string currency_uom_id = 16; // Uom    
    google.protobuf.Timestamp last_updated_tx_stamp = 17;    
    google.protobuf.Timestamp created_tx_stamp = 18;
        
}

// Geographic Location
message GeoPointData {
    option (routines.entity_type) = "GeoPoint";
    option (routines.keys).keys = "geo_point_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: geoPointId
    
    // fields
        
    string geo_point_id = 1;
    string geo_point_type_enum_id = 2; // Enumeration    
    string description = 3;
    string data_source_id = 4; // DataSource    
    string latitude = 5;    
    string longitude = 6;    
    routines.FixedPoint elevation = 7;
    string elevation_uom_id = 8; // Uom    
    string information = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

// eBay Configuration
message EbayConfigData {
    option (routines.entity_type) = "EbayConfig";
    option (routines.keys).keys = "product_store_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId
    
    // fields
        
    string product_store_id = 1;    
    string dev_id = 2;    
    string app_id = 3;    
    string cert_id = 4;    
    string token = 5;    
    string compatibility_level = 6;    
    string site_id = 7;    
    string xml_gateway_uri = 8;    
    string custom_xml = 9;    
    string web_site_id = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
        
}

// Subscription Resource
message SubscriptionResourceData {
    option (routines.entity_type) = "SubscriptionResource";
    option (routines.keys).keys = "subscription_resource_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: subscriptionResourceId
    
    // fields
        
    string subscription_resource_id = 1;    
    string parent_resource_id = 2;    
    string description = 3;    
    string content_id = 4;    
    string web_site_id = 5;    
    string service_name_on_expiry = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Product Feature Applicability
message ProductFeatureApplData {
    option (routines.entity_type) = "ProductFeatureAppl";
    option (routines.keys).keys = "product_id, product_feature_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, productFeatureId, fromDate
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string product_feature_id = 2;
    string product_feature_appl_type_id = 3; // ProductFeatureApplType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    int64 sequence_num = 6;    
    routines.Currency amount = 7;    
    routines.Currency recurring_amount = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Content Attribute
message ContentAttributeData {
    option (routines.entity_type) = "ContentAttribute";
    option (routines.keys).keys = "content_id, attr_name";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentId, attrName
    string id = 200; 
    // fields
        
    string content_id = 1;    
    string attr_name = 2;    
    string attr_value = 3;    
    string attr_description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Party Contact Mechanism Purpose
message PartyContactMechPurposeData {
    option (routines.entity_type) = "PartyContactMechPurpose";
    option (routines.keys).keys = "party_id, contact_mech_id, contact_mech_purpose_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, contactMechId, contactMechPurposeTypeId, fromDate
    string id = 200; 
    // fields
        
    string party_id = 1;    
    string contact_mech_id = 2;
    string contact_mech_purpose_type_id = 3; // ContactMechPurposeType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Recurrence Info
message RecurrenceInfoData {
    option (routines.entity_type) = "RecurrenceInfo";
    option (routines.keys).keys = "recurrence_info_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: recurrenceInfoId
    
    // fields
        
    string recurrence_info_id = 1;    
    google.protobuf.Timestamp start_date_time = 2;    
    string exception_date_times = 3;    
    string recurrence_date_times = 4;    
    string exception_rule_id = 5;    
    string recurrence_rule_id = 6;    
    int64 recurrence_count = 7;    
    google.protobuf.Timestamp last_updated_tx_stamp = 8;    
    google.protobuf.Timestamp created_tx_stamp = 9;
        
}

// Communication Event
message CommunicationEventData {
    option (routines.entity_type) = "CommunicationEvent";
    option (routines.keys).keys = "communication_event_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: communicationEventId
    
    // fields
        
    string communication_event_id = 1;
    string communication_event_type_id = 2; // CommunicationEventType    
    string orig_comm_event_id = 3;    
    string parent_comm_event_id = 4;
    string status_id = 5; // StatusItem
    string contact_mech_type_id = 6; // ContactMechType    
    string contact_mech_id_from = 7;    
    string contact_mech_id_to = 8;
    string role_type_id_from = 9; // RoleType
    string role_type_id_to = 10; // RoleType    
    string party_id_from = 11;    
    string party_id_to = 12;    
    google.protobuf.Timestamp entry_date = 13;    
    google.protobuf.Timestamp datetime_started = 14;    
    google.protobuf.Timestamp datetime_ended = 15;    
    string subject = 16;
    string content_mime_type_id = 17; // MimeType    
    string content = 18;    
    string note = 19;
    string reason_enum_id = 20; // Enumeration    
    string contact_list_id = 21;    
    string header_string = 22;    
    string from_text = 23;    
    string to_text = 24;    
    string cc_string = 25;    
    string bcc_string = 26;    
    string message_id = 27;    
    google.protobuf.Timestamp last_updated_tx_stamp = 28;    
    google.protobuf.Timestamp created_tx_stamp = 29;
        
}

// Product Feature Category
message ProductFeatureCategoryData {
    option (routines.entity_type) = "ProductFeatureCategory";
    option (routines.keys).keys = "product_feature_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productFeatureCategoryId
    
    // fields
        
    string product_feature_category_id = 1;    
    string parent_category_id = 2;    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Facility Location Geo Location with history
message FacilityLocationGeoPointData {
    option (routines.entity_type) = "FacilityLocationGeoPoint";
    option (routines.keys).keys = "facility_id, location_seq_id, geo_point_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: facilityId, locationSeqId, geoPointId, fromDate
    string id = 200; 
    // fields
        
    string facility_id = 1;    
    string location_seq_id = 2;    
    string geo_point_id = 3;    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Security Component - User Login Security Group
message UserLoginSecurityGroupData {
    option (routines.entity_type) = "UserLoginSecurityGroup";
    option (routines.keys).keys = "user_login_id, group_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: userLoginId, groupId, fromDate
    string id = 200; 
    // fields
        
    string user_login_id = 1;    
    string group_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Product Store Catalog Association
message ProductStoreCatalogData {
    option (routines.entity_type) = "ProductStoreCatalog";
    option (routines.keys).keys = "product_store_id, prod_catalog_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, prodCatalogId, fromDate
    string id = 200; 
    // fields
        
    string product_store_id = 1;    
    string prod_catalog_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    int64 sequence_num = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// UserLogin
message UserLoginData {
    option (routines.entity_type) = "UserLogin";
    option (routines.keys).keys = "user_login_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: userLoginId
    
    // fields
        
    string user_login_id = 1;    
    string current_password = 2;    
    string password_hint = 3;    
    routines.Indicator is_system = 4;    
    routines.Indicator enabled = 5;    
    routines.Indicator has_logged_out = 6;    
    routines.Indicator require_password_change = 7;    
    string last_currency_uom = 8;    
    string last_locale = 9;    
    string last_time_zone = 10;    
    google.protobuf.Timestamp disabled_date_time = 11;    
    int64 successive_failed_logins = 12;    
    string external_auth_id = 13;    
    string user_ldap_dn = 14;    
    string disabled_by = 15;    
    google.protobuf.Timestamp last_updated_tx_stamp = 16;    
    google.protobuf.Timestamp created_tx_stamp = 17;
    
    // relations
    PartyData party = 18; // ref(Party): partyId
    PersonData person = 19; // ref(Person): partyId
    PartyGroupData party_group = 20; // ref(PartyGroup): partyId
    repeated ContentData created_by_content = 21; // ref(CreatedByContent): userLoginId
    repeated ContentData last_modified_by_content = 22; // ref(LastModifiedByContent): userLoginId
    repeated ContentAssocData created_by_content_assoc = 23; // ref(CreatedByContentAssoc): userLoginId
    repeated ContentAssocData last_modified_by_content_assoc = 24; // ref(LastModifiedByContentAssoc): userLoginId
    repeated DataResourceData created_by_data_resource = 25; // ref(CreatedByDataResource): userLoginId
    repeated DataResourceData last_modified_by_data_resource = 26; // ref(LastModifiedByDataResource): userLoginId
    repeated FinAccountStatusData fin_account_status = 27; // ref(FinAccountStatus): userLoginId
    repeated InvoiceStatusData change_by_invoice_status = 28; // ref(ChangeByInvoiceStatus): userLoginId
    repeated ItemIssuanceData issued_by_item_issuance = 29; // ref(IssuedByItemIssuance): userLoginId
    repeated OrderAdjustmentData order_adjustment = 30; // ref(OrderAdjustment): userLoginId
    repeated OrderHeaderData created_by_order_header = 31; // ref(CreatedByOrderHeader): userLoginId
    repeated OrderItemData dont_cancel_set_order_item = 32; // ref(DontCancelSetOrderItem): userLoginId
    repeated OrderItemData change_by_order_item = 33; // ref(ChangeByOrderItem): userLoginId
    repeated OrderPaymentPreferenceData order_payment_preference = 34; // ref(OrderPaymentPreference): userLoginId
    repeated OrderStatusData order_status = 35; // ref(OrderStatus): userLoginId
    repeated PartyData created_by_party = 36; // ref(CreatedByParty): userLoginId
    repeated PartyData last_modified_by_party = 37; // ref(LastModifiedByParty): userLoginId
    repeated PartyStatusData change_by_party_status = 38; // ref(ChangeByPartyStatus): userLoginId
    repeated ProductData created_by_product = 39; // ref(CreatedByProduct): userLoginId
    repeated ProductData last_modified_by_product = 40; // ref(LastModifiedByProduct): userLoginId
    repeated ProductFeaturePriceData created_by_product_feature_price = 41; // ref(CreatedByProductFeaturePrice): userLoginId
    repeated ProductFeaturePriceData last_modified_by_product_feature_price = 42; // ref(LastModifiedByProductFeaturePrice): userLoginId
    repeated ProductPriceData created_by_product_price = 43; // ref(CreatedByProductPrice): userLoginId
    repeated ProductPriceData last_modified_by_product_price = 44; // ref(LastModifiedByProductPrice): userLoginId
    repeated ProductPromoData created_by_product_promo = 45; // ref(CreatedByProductPromo): userLoginId
    repeated ProductPromoData last_modified_by_product_promo = 46; // ref(LastModifiedByProductPromo): userLoginId
    repeated ProductPromoCodeData created_by_product_promo_code = 47; // ref(CreatedByProductPromoCode): userLoginId
    repeated ProductPromoCodeData last_modified_by_product_promo_code = 48; // ref(LastModifiedByProductPromoCode): userLoginId
    repeated ProductReviewData product_review = 49; // ref(ProductReview): userLoginId
    repeated ShipmentReceiptData shipment_receipt = 50; // ref(ShipmentReceipt): userLoginId
    repeated ShipmentStatusData change_by_shipment_status = 51; // ref(ChangeByShipmentStatus): userLoginId
    repeated UserLoginSecurityGroupData user_login_security_group = 52; // ref(UserLoginSecurityGroup): userLoginId
    
        
}

// Product Pice Rule
message ProductPriceRuleData {
    option (routines.entity_type) = "ProductPriceRule";
    option (routines.keys).keys = "product_price_rule_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPriceRuleId
    
    // fields
        
    string product_price_rule_id = 1;    
    string rule_name = 2;    
    string description = 3;    
    routines.Indicator is_sale = 4;    
    google.protobuf.Timestamp from_date = 5;    
    google.protobuf.Timestamp thru_date = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Party Role
message PartyRoleData {
    option (routines.entity_type) = "PartyRole";
    option (routines.keys).keys = "party_id, role_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, roleTypeId
    string id = 200; 
    // fields
        
    string party_id = 1;    
    string role_type_id = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;
        
}

// Product Facility
message ProductFacilityData {
    option (routines.entity_type) = "ProductFacility";
    option (routines.keys).keys = "product_id, facility_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, facilityId
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string facility_id = 2;    
    routines.FixedPoint minimum_stock = 3;    
    routines.FixedPoint reorder_quantity = 4;    
    int64 days_to_ship = 5;
    string replenish_method_enum_id = 6; // Enumeration    
    routines.FixedPoint last_inventory_count = 7;
    string requirement_method_enum_id = 8; // Enumeration    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Party Geo Location with history
message PartyGeoPointData {
    option (routines.entity_type) = "PartyGeoPoint";
    option (routines.keys).keys = "party_id, geo_point_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, geoPointId, fromDate
    string id = 200; 
    // fields
        
    string party_id = 1;    
    string geo_point_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Order Header
message OrderHeaderData {
    option (routines.entity_type) = "OrderHeader";
    option (routines.keys).keys = "order_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: orderId
    
    // fields
        
    string order_id = 1;    
    string order_type_id = 2;    
    string order_name = 3;    
    string external_id = 4;
    string sales_channel_enum_id = 5; // Enumeration    
    google.protobuf.Timestamp order_date = 6;    
    routines.Indicator priority = 7;    
    google.protobuf.Timestamp entry_date = 8;    
    google.protobuf.Timestamp pick_sheet_printed_date = 9;    
    string visit_id = 10;
    string status_id = 11; // StatusItem    
    string first_attempt_order_id = 12;
    string currency_uom = 13; // Uom
    string sync_status_id = 14; // StatusItem    
    string origin_facility_id = 15;    
    string agreement_id = 16;    
    string terminal_id = 17;    
    string transaction_id = 18;    
    string auto_order_shopping_list_id = 19;    
    routines.Indicator needs_inventory_issuance = 20;    
    routines.Indicator is_rush_order = 21;    
    string internal_code = 22;    
    routines.Currency remaining_sub_total = 23;    
    routines.Currency grand_total = 24;    
    routines.Indicator is_viewed = 25;    
    routines.Indicator invoice_per_shipment = 26;    
    google.protobuf.Timestamp last_updated_tx_stamp = 27;    
    google.protobuf.Timestamp created_tx_stamp = 28;
    
    // relations
    BillingAccountData billing_account = 29; // ref(BillingAccount): billingAccountId
    ProductStoreData product_store = 30; // ref(ProductStore): productStoreId
    UserLoginData created_by_user_login = 31; // ref(CreatedByUserLogin): createdBy
    WebSiteData web_site = 32; // ref(WebSite): webSiteId
    repeated FixedAssetData acquire_fixed_asset = 33; // ref(AcquireFixedAsset): orderId
    repeated ItemIssuanceData item_issuance = 34; // ref(ItemIssuance): orderId
    repeated OrderAdjustmentData order_adjustment = 35; // ref(OrderAdjustment): orderId
    repeated OrderContactMechData order_contact_mech = 36; // ref(OrderContactMech): orderId
    repeated OrderItemData order_item = 37; // ref(OrderItem): orderId
    repeated OrderItemBillingData order_item_billing = 38; // ref(OrderItemBilling): orderId
    repeated OrderItemPriceInfoData order_item_price_info = 39; // ref(OrderItemPriceInfo): orderId
    repeated OrderItemShipGroupData order_item_ship_group = 40; // ref(OrderItemShipGroup): orderId
    repeated OrderItemShipGroupAssocData order_item_ship_group_assoc = 41; // ref(OrderItemShipGroupAssoc): orderId
    repeated OrderItemShipGrpInvResData order_item_ship_grp_inv_res = 42; // ref(OrderItemShipGrpInvRes): orderId
    repeated OrderPaymentPreferenceData order_payment_preference = 43; // ref(OrderPaymentPreference): orderId
    repeated OrderRoleData order_role = 44; // ref(OrderRole): orderId
    repeated OrderStatusData order_status = 45; // ref(OrderStatus): orderId
    repeated ShipmentData primary_shipment = 46; // ref(PrimaryShipment): orderId
    repeated ShipmentReceiptData shipment_receipt = 47; // ref(ShipmentReceipt): orderId
    
        
}

// Carrier Shipment Method
message CarrierShipmentMethodData {
    option (routines.entity_type) = "CarrierShipmentMethod";
    option (routines.keys).keys = "shipment_method_type_id, party_id, role_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentMethodTypeId, partyId, roleTypeId
    string id = 200; 
    // fields
        
    string shipment_method_type_id = 1;    
    string party_id = 2;    
    string role_type_id = 3;    
    int64 sequence_number = 4;    
    string carrier_service_code = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Financial Account Status
message FinAccountStatusData {
    option (routines.entity_type) = "FinAccountStatus";
    option (routines.keys).keys = "fin_account_id, status_id, status_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: finAccountId, statusId, statusDate
    string id = 200; 
    // fields
        
    string fin_account_id = 1;
    string status_id = 2; // StatusItem    
    google.protobuf.Timestamp status_date = 3;    
    google.protobuf.Timestamp status_end_date = 4;    
    string change_by_user_login_id = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Shipment
message ShipmentData {
    option (routines.entity_type) = "Shipment";
    option (routines.keys).keys = "shipment_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: shipmentId
    
    // fields
        
    string shipment_id = 1;    
    string shipment_type_id = 2;
    string status_id = 3; // StatusItem    
    string primary_return_id = 4;    
    string primary_ship_group_seq_id = 5;    
    string picklist_bin_id = 6;    
    google.protobuf.Timestamp estimated_ready_date = 7;    
    google.protobuf.Timestamp estimated_ship_date = 8;    
    google.protobuf.Timestamp estimated_arrival_date = 9;    
    google.protobuf.Timestamp latest_cancel_date = 10;    
    routines.Currency estimated_ship_cost = 11;
    string currency_uom_id = 12; // Uom    
    string handling_instructions = 13;    
    string origin_facility_id = 14;    
    string destination_facility_id = 15;    
    routines.Currency additional_shipping_charge = 16;    
    string addtl_shipping_charge_desc = 17;    
    google.protobuf.Timestamp created_date = 18;    
    string created_by_user_login = 19;    
    google.protobuf.Timestamp last_modified_date = 20;    
    string last_modified_by_user_login = 21;    
    google.protobuf.Timestamp last_updated_tx_stamp = 22;    
    google.protobuf.Timestamp created_tx_stamp = 23;
    
    // relations
    WorkEffortData estimated_ship_work_effort = 24; // ref(EstimatedShipWorkEffort): estimatedShipWorkEffId
    WorkEffortData estimated_arrival_work_effort = 25; // ref(EstimatedArrivalWorkEffort): estimatedArrivalWorkEffId
    ContactMechData origin_contact_mech = 26; // ref(OriginContactMech): originContactMechId
    ContactMechData dest_contact_mech = 27; // ref(DestContactMech): destinationContactMechId
    PostalAddressData origin_postal_address = 28; // ref(OriginPostalAddress): originContactMechId
    TelecomNumberData origin_telecom_number = 29; // ref(OriginTelecomNumber): originTelecomNumberId
    PostalAddressData destination_postal_address = 30; // ref(DestinationPostalAddress): destinationContactMechId
    TelecomNumberData destination_telecom_number = 31; // ref(DestinationTelecomNumber): destinationTelecomNumberId
    OrderHeaderData primary_order_header = 32; // ref(PrimaryOrderHeader): primaryOrderId
    OrderItemShipGroupData primary_order_item_ship_group = 33; // ref(PrimaryOrderItemShipGroup): primaryOrderId + primaryShipGroupSeqId
    PartyData to_party = 34; // ref(ToParty): partyIdTo
    PersonData to_person = 35; // ref(ToPerson): partyIdTo
    PartyGroupData to_party_group = 36; // ref(ToPartyGroup): partyIdTo
    PartyData from_party = 37; // ref(FromParty): partyIdFrom
    PersonData from_person = 38; // ref(FromPerson): partyIdFrom
    PartyGroupData from_party_group = 39; // ref(FromPartyGroup): partyIdFrom
    repeated AcctgTransData acctg_trans = 40; // ref(AcctgTrans): shipmentId
    repeated ItemIssuanceData item_issuance = 41; // ref(ItemIssuance): shipmentId
    repeated ShipmentItemData shipment_item = 42; // ref(ShipmentItem): shipmentId
    repeated ShipmentItemBillingData shipment_item_billing = 43; // ref(ShipmentItemBilling): shipmentId
    repeated ShipmentPackageData shipment_package = 44; // ref(ShipmentPackage): shipmentId
    repeated ShipmentPackageContentData shipment_package_content = 45; // ref(ShipmentPackageContent): shipmentId
    repeated ShipmentPackageRouteSegData shipment_package_route_seg = 46; // ref(ShipmentPackageRouteSeg): shipmentId
    repeated ShipmentReceiptData shipment_receipt = 47; // ref(ShipmentReceipt): shipmentId
    repeated ShipmentRouteSegmentData shipment_route_segment = 48; // ref(ShipmentRouteSegment): shipmentId
    repeated ShipmentStatusData shipment_status = 49; // ref(ShipmentStatus): shipmentId
    
        
}

// Shipment Package Content
message ShipmentPackageContentData {
    option (routines.entity_type) = "ShipmentPackageContent";
    option (routines.keys).keys = "shipment_id, shipment_package_seq_id, shipment_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentId, shipmentPackageSeqId, shipmentItemSeqId
    string id = 200; 
    // fields
        
    string shipment_id = 1;    
    string shipment_package_seq_id = 2;    
    string shipment_item_seq_id = 3;    
    routines.FixedPoint quantity = 4;    
    string sub_product_id = 5;    
    routines.FixedPoint sub_product_quantity = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Product Store Survey Application
message ProductStoreSurveyApplData {
    option (routines.entity_type) = "ProductStoreSurveyAppl";
    option (routines.keys).keys = "product_store_survey_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreSurveyId
    
    // fields
        
    string product_store_survey_id = 1;    
    string product_store_id = 2;    
    string survey_appl_type_id = 3;    
    string group_name = 4;    
    string survey_id = 5;    
    string product_id = 6;    
    string product_category_id = 7;    
    google.protobuf.Timestamp from_date = 8;    
    google.protobuf.Timestamp thru_date = 9;    
    string survey_template = 10;    
    string result_template = 11;    
    int64 sequence_num = 12;    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;
        
}

// Security Component - Security Group
message SecurityGroupData {
    option (routines.entity_type) = "SecurityGroup";
    option (routines.keys).keys = "group_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: groupId
    
    // fields
        
    string group_id = 1;    
    string group_name = 2;    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Product Data Object
message ProductContentData {
    option (routines.entity_type) = "ProductContent";
    option (routines.keys).keys = "product_id, content_id, product_content_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, contentId, productContentTypeId, fromDate
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string content_id = 2;
    string product_content_type_id = 3; // ProductContentType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp purchase_from_date = 6;    
    google.protobuf.Timestamp purchase_thru_date = 7;    
    int64 use_count_limit = 8;    
    int64 use_time = 9;
    string use_time_uom_id = 10; // Uom
    string use_role_type_id = 11; // RoleType    
    int64 sequence_num = 12;    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;
        
}

// Party Relationship
message PartyRelationshipData {
    option (routines.entity_type) = "PartyRelationship";
    option (routines.keys).keys = "party_id_from, party_id_to, role_type_id_from, role_type_id_to, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyIdFrom, partyIdTo, roleTypeIdFrom, roleTypeIdTo, fromDate
    string id = 200; 
    // fields
        
    string party_id_from = 1;    
    string party_id_to = 2;
    string role_type_id_from = 3; // RoleType
    string role_type_id_to = 4; // RoleType    
    google.protobuf.Timestamp from_date = 5;    
    google.protobuf.Timestamp thru_date = 6;
    string status_id = 7; // StatusItem    
    string relationship_name = 8;    
    string security_group_id = 9;    
    string priority_type_id = 10;
    string party_relationship_type_id = 11; // PartyRelationshipType    
    string permissions_enum_id = 12;    
    string position_title = 13;    
    string comments = 14;    
    google.protobuf.Timestamp last_updated_tx_stamp = 15;    
    google.protobuf.Timestamp created_tx_stamp = 16;
        
}

// Product Store Carrier Shipment Method
message ProductStoreShipmentMethData {
    option (routines.entity_type) = "ProductStoreShipmentMeth";
    option (routines.keys).keys = "product_store_ship_meth_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreShipMethId
    
    // fields
        
    string product_store_ship_meth_id = 1;    
    string product_store_id = 2;    
    string shipment_method_type_id = 3;    
    string party_id = 4;    
    string role_type_id = 5;    
    string company_party_id = 6;    
    routines.FixedPoint min_weight = 7;    
    routines.FixedPoint max_weight = 8;    
    routines.FixedPoint min_size = 9;    
    routines.FixedPoint max_size = 10;    
    routines.Currency min_total = 11;    
    routines.Currency max_total = 12;    
    routines.Indicator allow_usps_addr = 13;    
    routines.Indicator require_usps_addr = 14;    
    routines.Indicator allow_company_addr = 15;    
    routines.Indicator require_company_addr = 16;    
    routines.Indicator include_no_charge_items = 17;    
    string include_feature_group = 18;    
    string exclude_feature_group = 19;
    string include_geo_id = 20; // Geo
    string exclude_geo_id = 21; // Geo    
    string service_name = 22;    
    string config_props = 23;
    string shipment_custom_method_id = 24; // CustomMethod
    string shipment_gateway_config_id = 25; // ShipmentGatewayConfig    
    int64 sequence_number = 26;    
    routines.FixedPoint allowance_percent = 27;    
    routines.Currency minimum_price = 28;    
    google.protobuf.Timestamp last_updated_tx_stamp = 29;    
    google.protobuf.Timestamp created_tx_stamp = 30;
        
}

// Payment
message PaymentData {
    option (routines.entity_type) = "Payment";
    option (routines.keys).keys = "payment_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: paymentId
    
    // fields
        
    string payment_id = 1;    
    string payment_type_id = 2;
    string payment_method_type_id = 3; // PaymentMethodType
    string role_type_id_to = 4; // RoleType
    string status_id = 5; // StatusItem    
    google.protobuf.Timestamp effective_date = 6;    
    string payment_ref_num = 7;    
    routines.Currency amount = 8;
    string currency_uom_id = 9; // Uom    
    string comments = 10;    
    string fin_account_trans_id = 11;    
    string override_gl_account_id = 12;    
    routines.Currency actual_currency_amount = 13;
    string actual_currency_uom_id = 14; // Uom    
    google.protobuf.Timestamp last_updated_tx_stamp = 15;    
    google.protobuf.Timestamp created_tx_stamp = 16;
    
    // relations
    PaymentMethodData payment_method = 17; // ref(PaymentMethod): paymentMethodId
    CreditCardData credit_card = 18; // ref(CreditCard): paymentMethodId
    EftAccountData eft_account = 19; // ref(EftAccount): paymentMethodId
    OrderPaymentPreferenceData order_payment_preference = 20; // ref(OrderPaymentPreference): paymentPreferenceId
    PaymentGatewayResponseData payment_gateway_response = 21; // ref(PaymentGatewayResponse): paymentGatewayResponseId
    PartyData from_party = 22; // ref(FromParty): partyIdFrom
    PartyData to_party = 23; // ref(ToParty): partyIdTo
    PartyRoleData to_party_role = 24; // ref(ToPartyRole): partyIdTo + roleTypeIdTo
    repeated AcctgTransData acctg_trans = 25; // ref(AcctgTrans): paymentId
    repeated PaymentApplicationData payment_application = 26; // ref(PaymentApplication): paymentId
    repeated PaymentApplicationData to_payment_application = 27; // ref(ToPaymentApplication): paymentId
    
        
}

// Content
message ContentData {
    option (routines.entity_type) = "Content";
    option (routines.keys).keys = "content_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contentId
    
    // fields
        
    string content_id = 1;    
    string content_type_id = 2;    
    string owner_content_id = 3;    
    string decorator_content_id = 4;    
    string instance_of_content_id = 5;    
    string data_resource_id = 6;    
    string template_data_resource_id = 7;
    string data_source_id = 8; // DataSource
    string status_id = 9; // StatusItem
    string privilege_enum_id = 10; // Enumeration    
    string service_name = 11;
    string custom_method_id = 12; // CustomMethod    
    string content_name = 13;    
    string description = 14;    
    string locale_string = 15;
    string mime_type_id = 16; // MimeType
    string character_set_id = 17; // CharacterSet    
    int64 child_leaf_count = 18;    
    int64 child_branch_count = 19;    
    google.protobuf.Timestamp created_date = 20;    
    string created_by_user_login = 21;    
    google.protobuf.Timestamp last_modified_date = 22;    
    string last_modified_by_user_login = 23;    
    google.protobuf.Timestamp last_updated_tx_stamp = 24;    
    google.protobuf.Timestamp created_tx_stamp = 25;
        
}

// Shipment Package
message ShipmentPackageData {
    option (routines.entity_type) = "ShipmentPackage";
    option (routines.keys).keys = "shipment_id, shipment_package_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentId, shipmentPackageSeqId
    string id = 200; 
    // fields
        
    string shipment_id = 1;    
    string shipment_package_seq_id = 2;    
    string shipment_box_type_id = 3;    
    google.protobuf.Timestamp date_created = 4;    
    routines.FixedPoint box_length = 5;    
    routines.FixedPoint box_height = 6;    
    routines.FixedPoint box_width = 7;
    string dimension_uom_id = 8; // Uom    
    routines.FixedPoint weight = 9;
    string weight_uom_id = 10; // Uom    
    routines.Currency insured_value = 11;    
    google.protobuf.Timestamp last_updated_tx_stamp = 12;    
    google.protobuf.Timestamp created_tx_stamp = 13;
        
}

// Product Store Inventory Facility Applicability
message ProductStoreFacilityData {
    option (routines.entity_type) = "ProductStoreFacility";
    option (routines.keys).keys = "product_store_id, facility_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, facilityId, fromDate
    string id = 200; 
    // fields
        
    string product_store_id = 1;    
    string facility_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    int64 sequence_num = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// WebSite
message WebSiteData {
    option (routines.entity_type) = "WebSite";
    option (routines.keys).keys = "web_site_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: webSiteId
    
    // fields
        
    string web_site_id = 1;    
    string site_name = 2;    
    string http_host = 3;    
    string http_port = 4;    
    string https_host = 5;    
    string https_port = 6;    
    routines.Indicator enable_https = 7;    
    string webapp_path = 8;    
    string standard_content_prefix = 9;    
    string secure_content_prefix = 10;    
    string cookie_domain = 11;
    string visual_theme_set_id = 12; // VisualThemeSet    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;    
    string product_store_id = 15;    
    routines.Indicator allow_product_store_change = 16;    
    string hosted_path_alias = 17;    
    routines.Indicator is_default = 18;    
    routines.Indicator display_maintenance_page = 19;
        
}

// Product Category
message ProductCategoryData {
    option (routines.entity_type) = "ProductCategory";
    option (routines.keys).keys = "product_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productCategoryId
    
    // fields
        
    string product_category_id = 1;    
    string product_category_type_id = 2;    
    string category_name = 3;    
    string description = 4;    
    string long_description = 5;    
    string category_image_url = 6;    
    string link_one_image_url = 7;    
    string link_two_image_url = 8;    
    string detail_screen = 9;    
    routines.Indicator show_in_select = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
    
    // relations
    ProductCategoryData primary_parent_product_category = 13; // ref(PrimaryParentProductCategory): primaryParentCategoryId
    repeated ProductCategoryData primary_child_product_category = 14; // ref(PrimaryChildProductCategory): productCategoryId
    repeated ProdCatalogCategoryData prod_catalog_category = 15; // ref(ProdCatalogCategory): productCategoryId
    repeated ProductData primary_product = 16; // ref(PrimaryProduct): productCategoryId
    repeated ProductCategoryContentData product_category_content = 17; // ref(ProductCategoryContent): productCategoryId
    repeated ProductCategoryLinkData product_category_link = 18; // ref(ProductCategoryLink): productCategoryId
    repeated ProductCategoryMemberData product_category_member = 19; // ref(ProductCategoryMember): productCategoryId
    repeated ProductCategoryRoleData product_category_role = 20; // ref(ProductCategoryRole): productCategoryId
    repeated ProductCategoryRollupData current_product_category_rollup = 21; // ref(CurrentProductCategoryRollup): productCategoryId
    repeated ProductCategoryRollupData parent_product_category_rollup = 22; // ref(ParentProductCategoryRollup): productCategoryId
    repeated ProductFeatureCategoryApplData product_feature_category_appl = 23; // ref(ProductFeatureCategoryAppl): productCategoryId
    repeated ProductPromoCategoryData product_promo_category = 24; // ref(ProductPromoCategory): productCategoryId
    repeated ProductStoreSurveyApplData product_store_survey_appl = 25; // ref(ProductStoreSurveyAppl): productCategoryId
    repeated TaxAuthorityCategoryData tax_authority_category = 26; // ref(TaxAuthorityCategory): productCategoryId
    repeated TaxAuthorityRateProductData tax_authority_rate_product = 27; // ref(TaxAuthorityRateProduct): productCategoryId
    
        
}

// Product Store Payment Settings
message ProductStorePaymentSettingData {
    option (routines.entity_type) = "ProductStorePaymentSetting";
    option (routines.keys).keys = "product_store_id, payment_method_type_id, payment_service_type_enum_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, paymentMethodTypeId, paymentServiceTypeEnumId
    string id = 200; 
    // fields
        
    string product_store_id = 1;
    string payment_method_type_id = 2; // PaymentMethodType
    string payment_service_type_enum_id = 3; // Enumeration    
    string payment_service = 4;
    string payment_custom_method_id = 5; // CustomMethod    
    string payment_gateway_config_id = 6;    
    string payment_properties_path = 7;    
    routines.Indicator apply_to_all_products = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Payment Method
message PaymentMethodData {
    option (routines.entity_type) = "PaymentMethod";
    option (routines.keys).keys = "payment_method_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: paymentMethodId
    
    // fields
        
    string payment_method_id = 1;
    string payment_method_type_id = 2; // PaymentMethodType    
    string party_id = 3;    
    string gl_account_id = 4;    
    string fin_account_id = 5;    
    string description = 6;    
    google.protobuf.Timestamp from_date = 7;    
    google.protobuf.Timestamp thru_date = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Product Price Condition
message ProductPriceCondData {
    option (routines.entity_type) = "ProductPriceCond";
    option (routines.keys).keys = "product_price_rule_id, product_price_cond_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPriceRuleId, productPriceCondSeqId
    string id = 200; 
    // fields
        
    string product_price_rule_id = 1;    
    string product_price_cond_seq_id = 2;
    string input_param_enum_id = 3; // Enumeration
    string operator_enum_id = 4; // Enumeration    
    string cond_value = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Survey Question Option
message SurveyQuestionOptionData {
    option (routines.entity_type) = "SurveyQuestionOption";
    option (routines.keys).keys = "survey_question_id, survey_option_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyQuestionId, surveyOptionSeqId
    string id = 200; 
    // fields
        
    string survey_question_id = 1;    
    string survey_option_seq_id = 2;    
    string description = 3;    
    int64 sequence_num = 4;    
    routines.Currency amount_base = 5;    
    string amount_base_uom_id = 6;    
    double weight_factor = 7;    
    int64 duration = 8;    
    string duration_uom_id = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

// Inventory Item
message InventoryItemData {
    option (routines.entity_type) = "InventoryItem";
    option (routines.keys).keys = "inventory_item_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: inventoryItemId
    
    // fields
        
    string inventory_item_id = 1;    
    string inventory_item_type_id = 2;
    string status_id = 3; // StatusItem    
    google.protobuf.Timestamp datetime_received = 4;    
    google.protobuf.Timestamp datetime_manufactured = 5;    
    google.protobuf.Timestamp expire_date = 6;    
    string container_id = 7;    
    string lot_id = 8;
    string uom_id = 9; // Uom    
    string bin_number = 10;    
    string location_seq_id = 11;    
    string comments = 12;    
    routines.FixedPoint quantity_on_hand_total = 13;    
    routines.FixedPoint available_to_promise_total = 14;    
    routines.FixedPoint accounting_quantity_total = 15;    
    string serial_number = 16;    
    string soft_identifier = 17;    
    string activation_number = 18;    
    google.protobuf.Timestamp activation_valid_thru = 19;    
    routines.FixedPoint unit_cost = 20;
    string currency_uom_id = 21; // Uom    
    google.protobuf.Timestamp last_updated_tx_stamp = 22;    
    google.protobuf.Timestamp created_tx_stamp = 23;
    
    // relations
    ProductData product = 24; // ref(Product): productId
    PartyData party = 25; // ref(Party): partyId
    PartyData owner_party = 26; // ref(OwnerParty): ownerPartyId
    ProductFacilityData product_facility = 27; // ref(ProductFacility): productId + facilityId
    FacilityLocationData facility_location = 28; // ref(FacilityLocation): facilityId + locationSeqId
    ProductFacilityLocationData product_facility_location = 29; // ref(ProductFacilityLocation): productId + facilityId + locationSeqId
    FixedAssetData fixed_asset_fixed_asset = 30; // ref(FixedAssetFixedAsset): fixedAssetId
    repeated AcctgTransData acctg_trans = 31; // ref(AcctgTrans): inventoryItemId
    repeated AcctgTransEntryData acctg_trans_entry = 32; // ref(AcctgTransEntry): inventoryItemId
    repeated InventoryItemDetailData inventory_item_detail = 33; // ref(InventoryItemDetail): inventoryItemId
    repeated InvoiceItemData invoice_item = 34; // ref(InvoiceItem): inventoryItemId
    repeated ItemIssuanceData item_issuance = 35; // ref(ItemIssuance): inventoryItemId
    repeated OrderItemData from_order_item = 36; // ref(FromOrderItem): inventoryItemId
    repeated OrderItemShipGrpInvResData order_item_ship_grp_inv_res = 37; // ref(OrderItemShipGrpInvRes): inventoryItemId
    repeated ShipmentReceiptData shipment_receipt = 38; // ref(ShipmentReceipt): inventoryItemId
    
        
}

// Billing Account Role
message BillingAccountRoleData {
    option (routines.entity_type) = "BillingAccountRole";
    option (routines.keys).keys = "billing_account_id, party_id, role_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: billingAccountId, partyId, roleTypeId, fromDate
    string id = 200; 
    // fields
        
    string billing_account_id = 1;    
    string party_id = 2;
    string role_type_id = 3; // RoleType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Invoice Item
message InvoiceItemData {
    option (routines.entity_type) = "InvoiceItem";
    option (routines.keys).keys = "invoice_id, invoice_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: invoiceId, invoiceItemSeqId
    string id = 200; 
    // fields
        
    string invoice_id = 1;    
    string invoice_item_seq_id = 2;    
    string invoice_item_type_id = 3;    
    string override_gl_account_id = 4;    
    string parent_invoice_item_seq_id = 5;
    string uom_id = 6; // Uom    
    routines.Indicator taxable_flag = 7;    
    routines.FixedPoint quantity = 8;    
    routines.Currency amount = 9;    
    string description = 10;
    string tax_auth_geo_id = 11; // Geo    
    string sales_opportunity_id = 12;    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;
    
    // relations
    InvoiceData invoice = 15; // ref(Invoice): invoiceId
    InventoryItemData inventory_item = 16; // ref(InventoryItem): inventoryItemId
    ProductData product = 17; // ref(Product): productId
    ProductFeatureData product_feature = 18; // ref(ProductFeature): productFeatureId
    InvoiceItemData invoice_item = 19; // ref(InvoiceItem): parentInvoiceId + parentInvoiceItemSeqId
    repeated InvoiceItemData children_invoice_item = 20; // ref(ChildrenInvoiceItem): invoiceId + invoiceItemSeqId
    PartyData tax_authority_party = 21; // ref(TaxAuthorityParty): taxAuthPartyId
    TaxAuthorityRateProductData tax_authority_rate_product = 22; // ref(TaxAuthorityRateProduct): taxAuthorityRateSeqId
    PartyData override_org_party = 23; // ref(OverrideOrgParty): overrideOrgPartyId
    repeated OrderAdjustmentBillingData order_adjustment_billing = 24; // ref(OrderAdjustmentBilling): invoiceId + invoiceItemSeqId
    repeated OrderItemBillingData order_item_billing = 25; // ref(OrderItemBilling): invoiceId + invoiceItemSeqId
    repeated PaymentApplicationData payment_application = 26; // ref(PaymentApplication): invoiceId + invoiceItemSeqId
    repeated ShipmentItemBillingData shipment_item_billing = 27; // ref(ShipmentItemBilling): invoiceId + invoiceItemSeqId
    
        
}

// Product Feature Category Application
message ProductFeatureCategoryApplData {
    option (routines.entity_type) = "ProductFeatureCategoryAppl";
    option (routines.keys).keys = "product_category_id, product_feature_category_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productCategoryId, productFeatureCategoryId, fromDate
    string id = 200; 
    // fields
        
    string product_category_id = 1;    
    string product_feature_category_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Product Configuration Question
message ProductConfigItemData {
    option (routines.entity_type) = "ProductConfigItem";
    option (routines.keys).keys = "config_item_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: configItemId
    
    // fields
        
    string config_item_id = 1;    
    string config_item_type_id = 2;    
    string config_item_name = 3;    
    string description = 4;    
    string long_description = 5;    
    string image_url = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Telecommunications Number
message TelecomNumberData {
    option (routines.entity_type) = "TelecomNumber";
    option (routines.keys).keys = "contact_mech_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contactMechId
    
    // fields
        
    string contact_mech_id = 1;    
    string country_code = 2;    
    string area_code = 3;    
    string contact_number = 4;    
    string ask_for_name = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Product Feature
message ProductFeatureData {
    option (routines.entity_type) = "ProductFeature";
    option (routines.keys).keys = "product_feature_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productFeatureId
    
    // fields
        
    string product_feature_id = 1;
    string product_feature_type_id = 2; // ProductFeatureType    
    string product_feature_category_id = 3;    
    string description = 4;
    string uom_id = 5; // Uom    
    routines.FixedPoint number_specified = 6;    
    routines.Currency default_amount = 7;    
    int64 default_sequence_num = 8;    
    string abbrev = 9;    
    string id_code = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
        
}

// Product Configuration Templates
message ProductConfigData {
    option (routines.entity_type) = "ProductConfig";
    option (routines.keys).keys = "product_id, config_item_id, sequence_num, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, configItemId, sequenceNum, fromDate
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string config_item_id = 2;    
    int64 sequence_num = 3;    
    google.protobuf.Timestamp from_date = 4;    
    string description = 5;    
    string long_description = 6;    
    string config_type_id = 7;    
    string default_config_option_id = 8;    
    google.protobuf.Timestamp thru_date = 9;    
    routines.Indicator is_mandatory = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
        
}

// Product Promotion
message ProductPromoCodeData {
    option (routines.entity_type) = "ProductPromoCode";
    option (routines.keys).keys = "product_promo_code_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPromoCodeId
    
    // fields
        
    string product_promo_code_id = 1;    
    string product_promo_id = 2;    
    routines.Indicator user_entered = 3;    
    routines.Indicator require_email_or_party = 4;    
    int64 use_limit_per_code = 5;    
    int64 use_limit_per_customer = 6;    
    google.protobuf.Timestamp from_date = 7;    
    google.protobuf.Timestamp thru_date = 8;    
    google.protobuf.Timestamp created_date = 9;    
    string created_by_user_login = 10;    
    google.protobuf.Timestamp last_modified_date = 11;    
    string last_modified_by_user_login = 12;    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;
        
}

// Product Store
message ProductStoreData {
    option (routines.entity_type) = "ProductStore";
    option (routines.keys).keys = "product_store_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productStoreId
    
    // fields
        
    string product_store_id = 1;
    string primary_store_group_id = 2; // ProductStoreGroup    
    string store_name = 3;    
    string company_name = 4;    
    string title = 5;    
    string subtitle = 6;    
    int64 days_to_cancel_non_pay = 7;    
    routines.Indicator manual_auth_is_capture = 8;    
    routines.Indicator prorate_shipping = 9;    
    routines.Indicator prorate_taxes = 10;    
    routines.Indicator view_cart_on_add = 11;    
    routines.Indicator auto_save_cart = 12;    
    routines.Indicator auto_approve_reviews = 13;    
    routines.Indicator is_demo_store = 14;    
    routines.Indicator is_immediately_fulfilled = 15;    
    string inventory_facility_id = 16;    
    routines.Indicator one_inventory_facility = 17;    
    routines.Indicator check_inventory = 18;    
    routines.Indicator reserve_inventory = 19;
    string reserve_order_enum_id = 20; // Enumeration    
    routines.Indicator require_inventory = 21;    
    routines.Indicator balance_res_on_order_creation = 22;
    string requirement_method_enum_id = 23; // Enumeration    
    string order_number_prefix = 24;    
    string default_locale_string = 25;
    string default_currency_uom_id = 26; // Uom    
    string default_time_zone_string = 27;
    string default_sales_channel_enum_id = 28; // Enumeration    
    routines.Indicator allow_password = 29;    
    string default_password = 30;    
    routines.Indicator explode_order_items = 31;    
    routines.Indicator check_gc_balance = 32;    
    routines.Indicator retry_failed_auths = 33;
    string header_approved_status = 34; // StatusItem
    string item_approved_status = 35; // StatusItem
    string digital_item_approved_status = 36; // StatusItem
    string header_declined_status = 37; // StatusItem
    string item_declined_status = 38; // StatusItem
    string header_cancel_status = 39; // StatusItem
    string item_cancel_status = 40; // StatusItem    
    string auth_declined_message = 41;    
    string auth_fraud_message = 42;    
    string auth_error_message = 43;    
    string visual_theme_id = 44;
    string store_credit_account_enum_id = 45; // Enumeration    
    routines.Indicator use_primary_email_username = 46;    
    routines.Indicator require_customer_role = 47;    
    routines.Indicator auto_invoice_digital_items = 48;    
    routines.Indicator req_ship_addr_for_dig_items = 49;    
    routines.Indicator show_checkout_gift_options = 50;    
    routines.Indicator select_payment_type_per_item = 51;    
    routines.Indicator show_prices_with_vat_tax = 52;    
    routines.Indicator show_tax_is_exempt = 53;    
    string vat_tax_auth_party_id = 54;    
    routines.Indicator enable_auto_suggestion_list = 55;    
    routines.Indicator enable_dig_prod_upload = 56;    
    routines.Indicator prod_search_exclude_variants = 57;    
    string dig_prod_upload_category_id = 58;    
    routines.Indicator auto_order_cc_try_exp = 59;    
    routines.Indicator auto_order_cc_try_other_cards = 60;    
    routines.Indicator auto_order_cc_try_later_nsf = 61;    
    int64 auto_order_cc_try_later_max = 62;    
    int64 store_credit_valid_days = 63;    
    routines.Indicator auto_approve_invoice = 64;    
    routines.Indicator auto_approve_order = 65;    
    routines.Indicator ship_if_capture_fails = 66;    
    routines.Indicator set_owner_upon_issuance = 67;    
    routines.Indicator req_return_inventory_receive = 68;    
    routines.Indicator add_to_cart_remove_incompat = 69;    
    routines.Indicator add_to_cart_replace_upsell = 70;    
    routines.Indicator split_pay_pref_per_shp_grp = 71;    
    routines.Indicator managed_by_lot = 72;    
    routines.Indicator show_out_of_stock_products = 73;    
    routines.Indicator order_decimal_quantity = 74;    
    routines.Indicator allow_comment = 75;    
    routines.Indicator allocate_inventory = 76;    
    google.protobuf.Timestamp last_updated_tx_stamp = 77;    
    google.protobuf.Timestamp created_tx_stamp = 78;
    
    // relations
    PartyData party = 79; // ref(Party): payToPartyId
    TaxAuthorityData vat_tax_authority = 80; // ref(VatTaxAuthority): vatTaxAuthGeoId + vatTaxAuthPartyId
    repeated CustRequestData cust_request = 81; // ref(CustRequest): productStoreId
    EbayConfigData ebay_config = 82; // ref(EbayConfig): productStoreId
    repeated OrderHeaderData order_header = 83; // ref(OrderHeader): productStoreId
    repeated ProductReviewData product_review = 84; // ref(ProductReview): productStoreId
    repeated ProductStoreCatalogData product_store_catalog = 85; // ref(ProductStoreCatalog): productStoreId
    repeated ProductStoreEmailSettingData product_store_email_setting = 86; // ref(ProductStoreEmailSetting): productStoreId
    repeated ProductStoreFacilityData product_store_facility = 87; // ref(ProductStoreFacility): productStoreId
    repeated ProductStoreFinActSettingData product_store_fin_act_setting = 88; // ref(ProductStoreFinActSetting): productStoreId
    repeated ProductStoreKeywordOvrdData product_store_keyword_ovrd = 89; // ref(ProductStoreKeywordOvrd): productStoreId
    repeated ProductStorePaymentSettingData product_store_payment_setting = 90; // ref(ProductStorePaymentSetting): productStoreId
    repeated ProductStorePromoApplData product_store_promo_appl = 91; // ref(ProductStorePromoAppl): productStoreId
    repeated ProductStoreRoleData product_store_role = 92; // ref(ProductStoreRole): productStoreId
    repeated ProductStoreSurveyApplData product_store_survey_appl = 93; // ref(ProductStoreSurveyAppl): productStoreId
    repeated QuoteData quote = 94; // ref(Quote): productStoreId
    repeated TaxAuthorityRateProductData tax_authority_rate_product = 95; // ref(TaxAuthorityRateProduct): productStoreId
    repeated WebSiteData web_site = 96; // ref(WebSite): productStoreId
    
        
}

// Product Price
message ProductPriceData {
    option (routines.entity_type) = "ProductPrice";
    option (routines.keys).keys = "product_id, product_price_type_id, product_price_purpose_id, currency_uom_id, product_store_group_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, productPriceTypeId, productPricePurposeId, currencyUomId, productStoreGroupId, fromDate
    string id = 200; 
    // fields
        
    string product_id = 1;
    string product_price_type_id = 2; // ProductPriceType
    string product_price_purpose_id = 3; // ProductPricePurpose
    string currency_uom_id = 4; // Uom
    string product_store_group_id = 5; // ProductStoreGroup    
    google.protobuf.Timestamp from_date = 6;    
    google.protobuf.Timestamp thru_date = 7;    
    routines.Currency price = 8;
    string term_uom_id = 9; // Uom
    string custom_price_calc_service = 10; // CustomMethod    
    routines.Currency price_without_tax = 11;    
    routines.Currency price_with_tax = 12;    
    routines.Currency tax_amount = 13;    
    routines.FixedPoint tax_percentage = 14;    
    string tax_auth_party_id = 15;
    string tax_auth_geo_id = 16; // Geo    
    routines.Indicator tax_in_price = 17;    
    google.protobuf.Timestamp created_date = 18;    
    string created_by_user_login = 19;    
    google.protobuf.Timestamp last_modified_date = 20;    
    string last_modified_by_user_login = 21;    
    google.protobuf.Timestamp last_updated_tx_stamp = 22;    
    google.protobuf.Timestamp created_tx_stamp = 23;
        
}

// Quantity Break
message QuantityBreakData {
    option (routines.entity_type) = "QuantityBreak";
    option (routines.keys).keys = "quantity_break_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: quantityBreakId
    
    // fields
        
    string quantity_break_id = 1;
    string quantity_break_type_id = 2; // QuantityBreakType    
    routines.FixedPoint from_quantity = 3;    
    routines.FixedPoint thru_quantity = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Contact Mechanism
message ContactMechData {
    option (routines.entity_type) = "ContactMech";
    option (routines.keys).keys = "contact_mech_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contactMechId
    
    // fields
        
    string contact_mech_id = 1;    
    string contact_mech_type_id = 2;    
    string info_string = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Order Item Inventory Reservation
message OrderItemShipGrpInvResData {
    option (routines.entity_type) = "OrderItemShipGrpInvRes";
    option (routines.keys).keys = "order_id, ship_group_seq_id, order_item_seq_id, inventory_item_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderId, shipGroupSeqId, orderItemSeqId, inventoryItemId
    string id = 200; 
    // fields
        
    string order_id = 1;    
    string ship_group_seq_id = 2;    
    string order_item_seq_id = 3;    
    string inventory_item_id = 4;    
    string reserve_order_enum_id = 5;    
    routines.FixedPoint quantity = 6;    
    routines.FixedPoint quantity_not_available = 7;    
    google.protobuf.Timestamp reserved_datetime = 8;    
    google.protobuf.Timestamp created_datetime = 9;    
    google.protobuf.Timestamp promised_datetime = 10;    
    google.protobuf.Timestamp current_promised_date = 11;    
    routines.Indicator priority = 12;    
    int64 sequence_id = 13;    
    google.protobuf.Timestamp last_updated_tx_stamp = 14;    
    google.protobuf.Timestamp created_tx_stamp = 15;
        
}

// TenantDataSource
message TenantDataSourceData {
    option (routines.entity_type) = "TenantDataSource";
    option (routines.keys).keys = "tenant_id, entity_group_name";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: tenantId, entityGroupName
    string id = 200; 
    // fields
        
    string tenant_id = 1;    
    string entity_group_name = 2;    
    string jdbc_uri = 3;    
    string jdbc_username = 4;    
    string jdbc_password = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Product Promotion Rule
message ProductPromoRuleData {
    option (routines.entity_type) = "ProductPromoRule";
    option (routines.keys).keys = "product_promo_id, product_promo_rule_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPromoId, productPromoRuleId
    string id = 200; 
    // fields
        
    string product_promo_id = 1;    
    string product_promo_rule_id = 2;    
    string rule_name = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Order Contact Mechanism
message OrderContactMechData {
    option (routines.entity_type) = "OrderContactMech";
    option (routines.keys).keys = "order_id, contact_mech_purpose_type_id, contact_mech_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderId, contactMechPurposeTypeId, contactMechId
    string id = 200; 
    // fields
        
    string order_id = 1;
    string contact_mech_purpose_type_id = 2; // ContactMechPurposeType    
    string contact_mech_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// WorkEffort
message WorkEffortData {
    option (routines.entity_type) = "WorkEffort";
    option (routines.keys).keys = "work_effort_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: workEffortId
    
    // fields
        
    string work_effort_id = 1;    
    string work_effort_type_id = 2;
    string current_status_id = 3; // StatusItem    
    google.protobuf.Timestamp last_status_update = 4;
    string work_effort_purpose_type_id = 5; // WorkEffortPurposeType    
    string work_effort_parent_id = 6;
    string scope_enum_id = 7; // Enumeration    
    int64 priority = 8;    
    int64 percent_complete = 9;    
    string work_effort_name = 10;    
    string show_as_enum_id = 11;    
    routines.Indicator send_notification_email = 12;    
    string description = 13;    
    string location_desc = 14;    
    google.protobuf.Timestamp estimated_start_date = 15;    
    google.protobuf.Timestamp estimated_completion_date = 16;    
    google.protobuf.Timestamp actual_start_date = 17;    
    google.protobuf.Timestamp actual_completion_date = 18;    
    double estimated_milli_seconds = 19;    
    double estimated_setup_millis = 20;
    string estimate_calc_method = 21; // CustomMethod    
    double actual_milli_seconds = 22;    
    double actual_setup_millis = 23;    
    double total_milli_seconds_allowed = 24;    
    routines.Currency total_money_allowed = 25;
    string money_uom_id = 26; // Uom    
    string special_terms = 27;    
    int64 time_transparency = 28;    
    string universal_id = 29;    
    string source_reference_id = 30;    
    string fixed_asset_id = 31;    
    string facility_id = 32;    
    string info_url = 33;    
    string recurrence_info_id = 34;    
    string temp_expr_id = 35;    
    string runtime_data_id = 36;    
    string note_id = 37;    
    string service_loader_name = 38;    
    routines.FixedPoint quantity_to_produce = 39;    
    routines.FixedPoint quantity_produced = 40;    
    routines.FixedPoint quantity_rejected = 41;    
    routines.FixedPoint reserv_persons = 42;    
    routines.FixedPoint reserv_2nd_p_p_perc = 43;    
    routines.FixedPoint reserv_nth_p_p_perc = 44;    
    string accommodation_map_id = 45;    
    string accommodation_spot_id = 46;    
    int64 revision_number = 47;    
    google.protobuf.Timestamp created_date = 48;    
    string created_by_user_login = 49;    
    google.protobuf.Timestamp last_modified_date = 50;    
    string last_modified_by_user_login = 51;    
    google.protobuf.Timestamp last_updated_tx_stamp = 52;    
    google.protobuf.Timestamp created_tx_stamp = 53;    
    int64 sequence_num = 54;
        
}

// Tenant
message TenantData {
    option (routines.entity_type) = "Tenant";
    option (routines.keys).keys = "tenant_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: tenantId
    
    // fields
        
    string tenant_id = 1;    
    string tenant_name = 2;    
    string initial_path = 3;    
    routines.Indicator disabled = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Shipment Status
message ShipmentStatusData {
    option (routines.entity_type) = "ShipmentStatus";
    option (routines.keys).keys = "status_id, shipment_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: statusId, shipmentId
    string id = 200; 
    // fields
    
    string status_id = 1; // StatusItem    
    string shipment_id = 2;    
    google.protobuf.Timestamp status_date = 3;    
    string change_by_user_login_id = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Billing Account
message BillingAccountData {
    option (routines.entity_type) = "BillingAccount";
    option (routines.keys).keys = "billing_account_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: billingAccountId
    
    // fields
        
    string billing_account_id = 1;    
    routines.Currency account_limit = 2;
    string account_currency_uom_id = 3; // Uom    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    string description = 6;    
    string external_account_id = 7;    
    google.protobuf.Timestamp last_updated_tx_stamp = 8;    
    google.protobuf.Timestamp created_tx_stamp = 9;
    
    // relations
    ContactMechData contact_mech = 10; // ref(ContactMech): contactMechId
    PostalAddressData postal_address = 11; // ref(PostalAddress): contactMechId
    repeated BillingAccountRoleData billing_account_role = 12; // ref(BillingAccountRole): billingAccountId
    repeated InvoiceData invoice = 13; // ref(Invoice): billingAccountId
    repeated OrderHeaderData order_header = 14; // ref(OrderHeader): billingAccountId
    repeated PaymentApplicationData payment_application = 15; // ref(PaymentApplication): billingAccountId
    
        
}

// Facility Contact Mechanism Purpose
message FacilityContactMechPurposeData {
    option (routines.entity_type) = "FacilityContactMechPurpose";
    option (routines.keys).keys = "facility_id, contact_mech_id, contact_mech_purpose_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: facilityId, contactMechId, contactMechPurposeTypeId, fromDate
    string id = 200; 
    // fields
        
    string facility_id = 1;    
    string contact_mech_id = 2;
    string contact_mech_purpose_type_id = 3; // ContactMechPurposeType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Product Keyword
message ProductKeywordData {
    option (routines.entity_type) = "ProductKeyword";
    option (routines.keys).keys = "product_id, keyword, keyword_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, keyword, keywordTypeId
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string keyword = 2;
    string keyword_type_id = 3; // Enumeration    
    int64 relevancy_weight = 4;
    string status_id = 5; // StatusItem    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Customer Request Item
message CustRequestItemData {
    option (routines.entity_type) = "CustRequestItem";
    option (routines.keys).keys = "cust_request_id, cust_request_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: custRequestId, custRequestItemSeqId
    string id = 200; 
    // fields
        
    string cust_request_id = 1;    
    string cust_request_item_seq_id = 2;
    string cust_request_resolution_id = 3; // CustRequestResolution
    string status_id = 4; // StatusItem    
    int64 priority = 5;    
    int64 sequence_num = 6;    
    google.protobuf.Timestamp required_by_date = 7;    
    string product_id = 8;    
    routines.FixedPoint quantity = 9;    
    routines.FixedPoint selected_amount = 10;    
    routines.Currency maximum_amount = 11;    
    google.protobuf.Timestamp reserv_start = 12;    
    routines.FixedPoint reserv_length = 13;    
    routines.FixedPoint reserv_persons = 14;    
    string config_id = 15;    
    string description = 16;    
    string story = 17;    
    google.protobuf.Timestamp last_updated_tx_stamp = 18;    
    google.protobuf.Timestamp created_tx_stamp = 19;
        
}

// Tenant and its Domain Name
message TenantDomainNameData {
    option (routines.entity_type) = "TenantDomainName";
    option (routines.keys).keys = "domain_name";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: domainName
    
    // fields
        
    string tenant_id = 1;    
    string domain_name = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;
        
}

// Order Role
message OrderRoleData {
    option (routines.entity_type) = "OrderRole";
    option (routines.keys).keys = "order_id, party_id, role_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderId, partyId, roleTypeId
    string id = 200; 
    // fields
        
    string order_id = 1;    
    string party_id = 2;
    string role_type_id = 3; // RoleType    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Fixed Asset Geo Location with history
message FixedAssetGeoPointData {
    option (routines.entity_type) = "FixedAssetGeoPoint";
    option (routines.keys).keys = "fixed_asset_id, geo_point_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fixedAssetId, geoPointId, fromDate
    string id = 200; 
    // fields
        
    string fixed_asset_id = 1;    
    string geo_point_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Recurrence Rule
message RecurrenceRuleData {
    option (routines.entity_type) = "RecurrenceRule";
    option (routines.keys).keys = "recurrence_rule_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: recurrenceRuleId
    
    // fields
        
    string recurrence_rule_id = 1;    
    string frequency = 2;    
    google.protobuf.Timestamp until_date_time = 3;    
    int64 count_number = 4;    
    int64 interval_number = 5;    
    string by_second_list = 6;    
    string by_minute_list = 7;    
    string by_hour_list = 8;    
    string by_day_list = 9;    
    string by_month_day_list = 10;    
    string by_year_day_list = 11;    
    string by_week_no_list = 12;    
    string by_month_list = 13;    
    string by_set_pos_list = 14;    
    string week_start = 15;    
    string x_name = 16;    
    google.protobuf.Timestamp last_updated_tx_stamp = 17;    
    google.protobuf.Timestamp created_tx_stamp = 18;
        
}

// Product Store Promotion Applicability
message ProductStorePromoApplData {
    option (routines.entity_type) = "ProductStorePromoAppl";
    option (routines.keys).keys = "product_store_id, product_promo_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productStoreId, productPromoId, fromDate
    string id = 200; 
    // fields
        
    string product_store_id = 1;    
    string product_promo_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    int64 sequence_num = 5;    
    routines.Indicator manual_only = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Product Configuration Option to Products
message ProductConfigProductData {
    option (routines.entity_type) = "ProductConfigProduct";
    option (routines.keys).keys = "config_item_id, config_option_id, product_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: configItemId, configOptionId, productId
    string id = 200; 
    // fields
        
    string config_item_id = 1;    
    string config_option_id = 2;    
    string product_id = 3;    
    routines.FixedPoint quantity = 4;    
    int64 sequence_num = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Product Price Action
message ProductPriceActionData {
    option (routines.entity_type) = "ProductPriceAction";
    option (routines.keys).keys = "product_price_rule_id, product_price_action_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPriceRuleId, productPriceActionSeqId
    string id = 200; 
    // fields
        
    string product_price_rule_id = 1;    
    string product_price_action_seq_id = 2;
    string product_price_action_type_id = 3; // ProductPriceActionType    
    routines.FixedPoint amount = 4;    
    string rate_code = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Shipment Method Type
message ShipmentMethodTypeData {
    option (routines.entity_type) = "ShipmentMethodType";
    option (routines.keys).keys = "shipment_method_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: shipmentMethodTypeId
    
    // fields
        
    string shipment_method_type_id = 1;    
    string description = 2;    
    int64 sequence_num = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;
        
}

// Quote Term
message QuoteTermData {
    option (routines.entity_type) = "QuoteTerm";
    option (routines.keys).keys = "term_type_id, quote_id, quote_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: termTypeId, quoteId, quoteItemSeqId
    string id = 200; 
    // fields
        
    string term_type_id = 1;    
    string quote_id = 2;    
    string quote_item_seq_id = 3;    
    int64 term_value = 4;    
    string uom_id = 5;    
    int64 term_days = 6;    
    string text_value = 7;    
    string description = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Transaction Entry
message AcctgTransEntryData {
    option (routines.entity_type) = "AcctgTransEntry";
    option (routines.keys).keys = "acctg_trans_id, acctg_trans_entry_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: acctgTransId, acctgTransEntrySeqId
    string id = 200; 
    // fields
        
    string acctg_trans_id = 1;    
    string acctg_trans_entry_seq_id = 2;
    string acctg_trans_entry_type_id = 3; // AcctgTransEntryType    
    string description = 4;    
    string voucher_ref = 5;    
    string party_id = 6;
    string role_type_id = 7; // RoleType    
    string their_party_id = 8;    
    string product_id = 9;    
    string their_product_id = 10;    
    string inventory_item_id = 11;
    string gl_account_type_id = 12; // GlAccountType    
    string gl_account_id = 13;    
    string organization_party_id = 14;    
    routines.Currency amount = 15;
    string currency_uom_id = 16; // Uom    
    routines.Currency orig_amount = 17;
    string orig_currency_uom_id = 18; // Uom    
    routines.Indicator debit_credit_flag = 19;    
    google.type.Date due_date = 20;    
    string group_id = 21;    
    string tax_id = 22;
    string reconcile_status_id = 23; // StatusItem
    string settlement_term_id = 24; // SettlementTerm    
    routines.Indicator is_summary = 25;    
    google.protobuf.Timestamp last_updated_tx_stamp = 26;    
    google.protobuf.Timestamp created_tx_stamp = 27;
        
}

// Order Item Billing
message OrderItemBillingData {
    option (routines.entity_type) = "OrderItemBilling";
    option (routines.keys).keys = "order_id, order_item_seq_id, invoice_id, invoice_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderId, orderItemSeqId, invoiceId, invoiceItemSeqId
    string id = 200; 
    // fields
        
    string order_id = 1;    
    string order_item_seq_id = 2;    
    string invoice_id = 3;    
    string invoice_item_seq_id = 4;    
    string item_issuance_id = 5;    
    string shipment_receipt_id = 6;    
    routines.FixedPoint quantity = 7;    
    routines.Currency amount = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;
        
}

// Order Item Ship Group
message OrderItemShipGroupData {
    option (routines.entity_type) = "OrderItemShipGroup";
    option (routines.keys).keys = "order_id, ship_group_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: orderId, shipGroupSeqId
    string id = 200; 
    // fields
        
    string order_id = 1;    
    string ship_group_seq_id = 2;    
    string shipment_method_type_id = 3;    
    string supplier_party_id = 4;    
    string supplier_agreement_id = 5;    
    string vendor_party_id = 6;    
    string carrier_party_id = 7;    
    string carrier_role_type_id = 8;    
    string facility_id = 9;    
    string contact_mech_id = 10;    
    string telecom_contact_mech_id = 11;    
    string tracking_number = 12;    
    string shipping_instructions = 13;    
    routines.Indicator may_split = 14;    
    string gift_message = 15;    
    routines.Indicator is_gift = 16;    
    google.protobuf.Timestamp ship_after_date = 17;    
    google.protobuf.Timestamp ship_by_date = 18;    
    google.protobuf.Timestamp estimated_ship_date = 19;    
    google.protobuf.Timestamp estimated_delivery_date = 20;    
    google.protobuf.Timestamp last_updated_tx_stamp = 21;    
    google.protobuf.Timestamp created_tx_stamp = 22;
        
}

// Customer Request Type
message CustRequestTypeData {
    option (routines.entity_type) = "CustRequestType";
    option (routines.keys).keys = "cust_request_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: custRequestTypeId
    
    // fields
        
    string cust_request_type_id = 1;    
    string parent_type_id = 2;    
    routines.Indicator has_table = 3;    
    string description = 4;    
    string party_id = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Agreement Product Application
message AgreementProductApplData {
    option (routines.entity_type) = "AgreementProductAppl";
    option (routines.keys).keys = "agreement_id, agreement_item_seq_id, product_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: agreementId, agreementItemSeqId, productId
    string id = 200; 
    // fields
        
    string agreement_id = 1;    
    string agreement_item_seq_id = 2;    
    string product_id = 3;    
    routines.Currency price = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Product Subscription Resource
message ProductSubscriptionResourceData {
    option (routines.entity_type) = "ProductSubscriptionResource";
    option (routines.keys).keys = "product_id, subscription_resource_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, subscriptionResourceId, fromDate
    string id = 200; 
    // fields
        
    string product_id = 1;    
    string subscription_resource_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    google.protobuf.Timestamp purchase_from_date = 5;    
    google.protobuf.Timestamp purchase_thru_date = 6;    
    int64 max_life_time = 7;
    string max_life_time_uom_id = 8; // Uom    
    int64 available_time = 9;
    string available_time_uom_id = 10; // Uom    
    int64 use_count_limit = 11;    
    int64 use_time = 12;
    string use_time_uom_id = 13; // Uom
    string use_role_type_id = 14; // RoleType    
    routines.Indicator automatic_extend = 15;    
    int64 cancl_autm_ext_time = 16;
    string cancl_autm_ext_time_uom_id = 17; // Uom    
    int64 grace_period_on_expiry = 18;
    string grace_period_on_expiry_uom_id = 19; // Uom    
    google.protobuf.Timestamp last_updated_tx_stamp = 20;    
    google.protobuf.Timestamp created_tx_stamp = 21;
        
}

// Credit Card Information
message CreditCardData {
    option (routines.entity_type) = "CreditCard";
    option (routines.keys).keys = "payment_method_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: paymentMethodId
    
    // fields
        
    string payment_method_id = 1;    
    string card_type = 2;    
    string card_number = 3;    
    string valid_from_date = 4;    
    string expire_date = 5;    
    string issue_number = 6;    
    string company_name_on_card = 7;    
    string title_on_card = 8;    
    string first_name_on_card = 9;    
    string middle_name_on_card = 10;    
    string last_name_on_card = 11;    
    string suffix_on_card = 12;    
    string contact_mech_id = 13;    
    int64 consecutive_failed_auths = 14;    
    google.protobuf.Timestamp last_failed_auth_date = 15;    
    int64 consecutive_failed_nsf = 16;    
    google.protobuf.Timestamp last_failed_nsf_date = 17;    
    google.protobuf.Timestamp last_updated_tx_stamp = 18;    
    google.protobuf.Timestamp created_tx_stamp = 19;
        
}

// Quote
message QuoteData {
    option (routines.entity_type) = "Quote";
    option (routines.keys).keys = "quote_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: quoteId
    
    // fields
        
    string quote_id = 1;    
    string quote_type_id = 2;    
    google.protobuf.Timestamp issue_date = 3;
    string status_id = 4; // StatusItem
    string currency_uom_id = 5; // Uom
    string sales_channel_enum_id = 6; // Enumeration    
    google.protobuf.Timestamp valid_from_date = 7;    
    google.protobuf.Timestamp valid_thru_date = 8;    
    string quote_name = 9;    
    string description = 10;    
    google.protobuf.Timestamp last_updated_tx_stamp = 11;    
    google.protobuf.Timestamp created_tx_stamp = 12;
    
    // relations
    PartyData party = 13; // ref(Party): partyId
    ProductStoreData product_store = 14; // ref(ProductStore): productStoreId
    repeated QuoteItemData quote_item = 15; // ref(QuoteItem): quoteId
    repeated QuoteRoleData quote_role = 16; // ref(QuoteRole): quoteId
    repeated QuoteTermData quote_term = 17; // ref(QuoteTerm): quoteId
    
        
}

// Product Promotion
message ProductPromoData {
    option (routines.entity_type) = "ProductPromo";
    option (routines.keys).keys = "product_promo_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productPromoId
    
    // fields
        
    string product_promo_id = 1;    
    string promo_name = 2;    
    string promo_text = 3;    
    routines.Indicator user_entered = 4;    
    routines.Indicator show_to_customer = 5;    
    routines.Indicator require_code = 6;    
    int64 use_limit_per_order = 7;    
    int64 use_limit_per_customer = 8;    
    int64 use_limit_per_promotion = 9;    
    routines.FixedPoint billback_factor = 10;    
    string override_org_party_id = 11;    
    google.protobuf.Timestamp created_date = 12;    
    string created_by_user_login = 13;    
    google.protobuf.Timestamp last_modified_date = 14;    
    string last_modified_by_user_login = 15;    
    google.protobuf.Timestamp last_updated_tx_stamp = 16;    
    google.protobuf.Timestamp created_tx_stamp = 17;
        
}

// Product Category Member
message ProductCategoryMemberData {
    option (routines.entity_type) = "ProductCategoryMember";
    option (routines.keys).keys = "product_category_id, product_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productCategoryId, productId, fromDate
    string id = 200; 
    // fields
        
    string product_category_id = 1;    
    string product_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    string comments = 5;    
    int64 sequence_num = 6;    
    routines.FixedPoint quantity = 7;    
    google.protobuf.Timestamp last_updated_tx_stamp = 8;    
    google.protobuf.Timestamp created_tx_stamp = 9;
        
}

// Agreement Term
message AgreementTermData {
    option (routines.entity_type) = "AgreementTerm";
    option (routines.keys).keys = "agreement_term_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: agreementTermId
    
    // fields
        
    string agreement_term_id = 1;
    string term_type_id = 2; // TermType    
    string agreement_id = 3;    
    string agreement_item_seq_id = 4;
    string invoice_item_type_id = 5; // InvoiceItemType    
    google.protobuf.Timestamp from_date = 6;    
    google.protobuf.Timestamp thru_date = 7;    
    routines.Currency term_value = 8;    
    int64 term_days = 9;    
    string text_value = 10;    
    double min_quantity = 11;    
    double max_quantity = 12;    
    string description = 13;    
    google.protobuf.Timestamp last_updated_tx_stamp = 14;    
    google.protobuf.Timestamp created_tx_stamp = 15;
        
}

// Product Category Link
message ProductCategoryLinkData {
    option (routines.entity_type) = "ProductCategoryLink";
    option (routines.keys).keys = "product_category_id, link_seq_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productCategoryId, linkSeqId, fromDate
    string id = 200; 
    // fields
        
    string product_category_id = 1;    
    string link_seq_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    string comments = 5;    
    int64 sequence_num = 6;    
    string title_text = 7;    
    string detail_text = 8;    
    string image_url = 9;    
    string image_two_url = 10;
    string link_type_enum_id = 11; // Enumeration    
    string link_info = 12;    
    string detail_sub_screen = 13;    
    google.protobuf.Timestamp last_updated_tx_stamp = 14;    
    google.protobuf.Timestamp created_tx_stamp = 15;
        
}

// Product Feature Interaction
message ProductFeatureIactnData {
    option (routines.entity_type) = "ProductFeatureIactn";
    option (routines.keys).keys = "product_feature_id, product_feature_id_to";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productFeatureId, productFeatureIdTo
    string id = 200; 
    // fields
        
    string product_feature_id = 1;    
    string product_feature_id_to = 2;
    string product_feature_iactn_type_id = 3; // ProductFeatureIactnType    
    string product_id = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;
        
}

// Work Effort Association
message WorkEffortAssocData {
    option (routines.entity_type) = "WorkEffortAssoc";
    option (routines.keys).keys = "work_effort_id_from, work_effort_id_to, work_effort_assoc_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: workEffortIdFrom, workEffortIdTo, workEffortAssocTypeId, fromDate
    string id = 200; 
    // fields
        
    string work_effort_id_from = 1;    
    string work_effort_id_to = 2;    
    string work_effort_assoc_type_id = 3;    
    int64 sequence_num = 4;    
    google.protobuf.Timestamp from_date = 5;    
    google.protobuf.Timestamp thru_date = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;
        
}

// Quote Role
message QuoteRoleData {
    option (routines.entity_type) = "QuoteRole";
    option (routines.keys).keys = "quote_id, party_id, role_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: quoteId, partyId, roleTypeId
    string id = 200; 
    // fields
        
    string quote_id = 1;    
    string party_id = 2;
    string role_type_id = 3; // RoleType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;
        
}

// Survey Question Application
message SurveyQuestionApplData {
    option (routines.entity_type) = "SurveyQuestionAppl";
    option (routines.keys).keys = "survey_id, survey_question_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId, surveyQuestionId, fromDate
    string id = 200; 
    // fields
        
    string survey_id = 1;    
    string survey_question_id = 2;    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    string survey_page_seq_id = 5;    
    string survey_multi_resp_id = 6;    
    string survey_multi_resp_col_id = 7;    
    routines.Indicator required_field = 8;    
    int64 sequence_num = 9;    
    string external_field_ref = 10;    
    string with_survey_question_id = 11;    
    string with_survey_option_seq_id = 12;    
    google.protobuf.Timestamp last_updated_tx_stamp = 13;    
    google.protobuf.Timestamp created_tx_stamp = 14;
        
}

// EFT Account Information
message EftAccountData {
    option (routines.entity_type) = "EftAccount";
    option (routines.keys).keys = "payment_method_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: paymentMethodId
    
    // fields
        
    string payment_method_id = 1;    
    string bank_name = 2;    
    string routing_number = 3;    
    string account_type = 4;    
    string account_number = 5;    
    string name_on_account = 6;    
    string company_name_on_account = 7;    
    string contact_mech_id = 8;    
    int64 years_at_bank = 9;    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;
        
}

