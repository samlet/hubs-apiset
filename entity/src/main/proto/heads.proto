syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "HeadProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

import "ents/accounting_invoice.proto";
import "ents/product_feature.proto";
import "ents/product_category.proto";
import "ents/webapp_website.proto";
import "ents/common_uom.proto";
import "ents/product_product.proto";
import "ents/product_inventory.proto";
import "ents/product_supplier.proto";
import "ents/order_requirement.proto";
import "ents/product_store.proto";
import "ents/content_data.proto";
import "ents/content_website.proto";
import "ents/product_facility.proto";
import "ents/order_quote.proto";
import "ents/common_property.proto";
import "ents/accounting_budget.proto";
import "ents/common_geo.proto";
import "ents/product_config.proto";
import "ents/party_agreement.proto";
import "ents/order_return.proto";
import "ents/content_survey.proto";
import "ents/entity_tenant.proto";
import "ents/product_price.proto";
import "ents/party_contact.proto";
import "ents/product_catalog.proto";
import "ents/order_shoppinglist.proto";
import "ents/order_order.proto";
import "ents/product_promo.proto";
import "ents/service_schedule.proto";
import "ents/accounting_payment.proto";
import "ents/accounting_finaccount.proto";
import "ents/product_subscription.proto";
import "ents/order_request.proto";
import "ents/accounting_tax.proto";
import "ents/party_communication.proto";
import "ents/common_method.proto";
import "ents/security_securitygroup.proto";
import "ents/shipment_receipt.proto";
import "ents/humanres_position.proto";
import "ents/accounting_ledger.proto";
import "ents/content_content.proto";
import "ents/workeffort_workeffort.proto";
import "ents/common_email.proto";
import "ents/party_party.proto";
import "ents/shipment_issuance.proto";
import "ents/accounting_fixedasset.proto";
import "ents/accounting_rate.proto";
import "ents/shipment_shipment.proto";
import "ents/ebay_config.proto";
import "ents/security_login.proto";
import "ents/manufacturing_techdata.proto";
// Catalog
message ProdCatalogData {
    option (routines.entity_type) = "ProdCatalog";
    option (routines.keys).keys = "prod_catalog_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: prodCatalogId
    // fields
    string prod_catalog_id = 1 [json_name = "prod_catalog_id", (google.api.graphql.relay_options).id = true];
    string catalog_name = 2 [json_name = "catalog_name"];
    routines.Indicator use_quick_add = 3 [json_name = "use_quick_add"];
    string style_sheet = 4 [json_name = "style_sheet"];
    string header_logo = 5 [json_name = "header_logo"];
    string content_path_prefix = 6 [json_name = "content_path_prefix"];
    string template_path_prefix = 7 [json_name = "template_path_prefix"];
    routines.Indicator view_allow_perm_reqd = 8 [json_name = "view_allow_perm_reqd"];
    routines.Indicator purchase_allow_perm_reqd = 9 [json_name = "purchase_allow_perm_reqd"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 11 [json_name = "created_tx_stamp"];
    string tenant_id = 12 [json_name = "tenant_id"];
    
    
    // relations
    repeated ProdCatalogCategoryData prod_catalog_category = 14 [json_name = "prod_catalog_category"]; // ref(ProdCatalogCategory): prodCatalogId
    repeated ProductStoreCatalogData product_store_catalog = 17 [json_name = "product_store_catalog"]; // ref(ProductStoreCatalog): prodCatalogId
    TenantData tenant = 18 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 19;
    map<string, google.protobuf.Any> attachments = 20;
}



// The Catalog service definition.
service ProdCatalogService {
    rpc Create(ProdCatalogData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProdCatalogFlatData) returns (routines.Response) {}
    rpc Update(ProdCatalogFlatData) returns (routines.Response) {}
    rpc Delete(ProdCatalogFlatData) returns (routines.Response) {}
    rpc Find(ProdCatalogFlatData) returns (ProdCatalogFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProdCatalogFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProdCatalogData) {}
    rpc FindList(routines.QueryList) returns (stream ProdCatalogData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProdCatalogData) {}
}


// Product Store
message ProductStoreData {
    option (routines.entity_type) = "ProductStore";
    option (routines.keys).keys = "product_store_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productStoreId
    // fields
    string product_store_id = 1 [json_name = "product_store_id", (google.api.graphql.relay_options).id = true];
    string primary_store_group_id = 2 [json_name = "primary_store_group_id"];
    string store_name = 3 [json_name = "store_name"];
    string company_name = 4 [json_name = "company_name"];
    string title = 5 [json_name = "title"];
    string subtitle = 6 [json_name = "subtitle"];
    string pay_to_party_id = 7 [json_name = "pay_to_party_id"];
    int64 days_to_cancel_non_pay = 8 [json_name = "days_to_cancel_non_pay"];
    routines.Indicator manual_auth_is_capture = 9 [json_name = "manual_auth_is_capture"];
    routines.Indicator prorate_shipping = 10 [json_name = "prorate_shipping"];
    routines.Indicator prorate_taxes = 11 [json_name = "prorate_taxes"];
    routines.Indicator view_cart_on_add = 12 [json_name = "view_cart_on_add"];
    routines.Indicator auto_save_cart = 13 [json_name = "auto_save_cart"];
    routines.Indicator auto_approve_reviews = 14 [json_name = "auto_approve_reviews"];
    routines.Indicator is_demo_store = 15 [json_name = "is_demo_store"];
    routines.Indicator is_immediately_fulfilled = 16 [json_name = "is_immediately_fulfilled"];
    string inventory_facility_id = 17 [json_name = "inventory_facility_id"];
    routines.Indicator one_inventory_facility = 18 [json_name = "one_inventory_facility"];
    routines.Indicator check_inventory = 19 [json_name = "check_inventory"];
    routines.Indicator reserve_inventory = 20 [json_name = "reserve_inventory"];
    string reserve_order_enum_id = 21 [json_name = "reserve_order_enum_id"];
    routines.Indicator require_inventory = 22 [json_name = "require_inventory"];
    routines.Indicator balance_res_on_order_creation = 23 [json_name = "balance_res_on_order_creation"];
    string requirement_method_enum_id = 24 [json_name = "requirement_method_enum_id"];
    string order_number_prefix = 25 [json_name = "order_number_prefix"];
    string default_locale_string = 26 [json_name = "default_locale_string"];
    string default_currency_uom_id = 27 [json_name = "default_currency_uom_id"];
    string default_time_zone_string = 28 [json_name = "default_time_zone_string"];
    string default_sales_channel_enum_id = 29 [json_name = "default_sales_channel_enum_id"];
    routines.Indicator allow_password = 30 [json_name = "allow_password"];
    string default_password = 31 [json_name = "default_password"];
    routines.Indicator explode_order_items = 32 [json_name = "explode_order_items"];
    routines.Indicator check_gc_balance = 33 [json_name = "check_gc_balance"];
    routines.Indicator retry_failed_auths = 34 [json_name = "retry_failed_auths"];
    string header_approved_status = 35 [json_name = "header_approved_status"];
    string item_approved_status = 36 [json_name = "item_approved_status"];
    string digital_item_approved_status = 37 [json_name = "digital_item_approved_status"];
    string header_declined_status = 38 [json_name = "header_declined_status"];
    string item_declined_status = 39 [json_name = "item_declined_status"];
    string header_cancel_status = 40 [json_name = "header_cancel_status"];
    string item_cancel_status = 41 [json_name = "item_cancel_status"];
    string auth_declined_message = 42 [json_name = "auth_declined_message"];
    string auth_fraud_message = 43 [json_name = "auth_fraud_message"];
    string auth_error_message = 44 [json_name = "auth_error_message"];
    string visual_theme_id = 45 [json_name = "visual_theme_id"];
    string store_credit_account_enum_id = 46 [json_name = "store_credit_account_enum_id"];
    routines.Indicator use_primary_email_username = 47 [json_name = "use_primary_email_username"];
    routines.Indicator require_customer_role = 48 [json_name = "require_customer_role"];
    routines.Indicator auto_invoice_digital_items = 49 [json_name = "auto_invoice_digital_items"];
    routines.Indicator req_ship_addr_for_dig_items = 50 [json_name = "req_ship_addr_for_dig_items"];
    routines.Indicator show_checkout_gift_options = 51 [json_name = "show_checkout_gift_options"];
    routines.Indicator select_payment_type_per_item = 52 [json_name = "select_payment_type_per_item"];
    routines.Indicator show_prices_with_vat_tax = 53 [json_name = "show_prices_with_vat_tax"];
    routines.Indicator show_tax_is_exempt = 54 [json_name = "show_tax_is_exempt"];
    string vat_tax_auth_geo_id = 55 [json_name = "vat_tax_auth_geo_id"];
    string vat_tax_auth_party_id = 56 [json_name = "vat_tax_auth_party_id"];
    routines.Indicator enable_auto_suggestion_list = 57 [json_name = "enable_auto_suggestion_list"];
    routines.Indicator enable_dig_prod_upload = 58 [json_name = "enable_dig_prod_upload"];
    routines.Indicator prod_search_exclude_variants = 59 [json_name = "prod_search_exclude_variants"];
    string dig_prod_upload_category_id = 60 [json_name = "dig_prod_upload_category_id"];
    routines.Indicator auto_order_cc_try_exp = 61 [json_name = "auto_order_cc_try_exp"];
    routines.Indicator auto_order_cc_try_other_cards = 62 [json_name = "auto_order_cc_try_other_cards"];
    routines.Indicator auto_order_cc_try_later_nsf = 63 [json_name = "auto_order_cc_try_later_nsf"];
    int64 auto_order_cc_try_later_max = 64 [json_name = "auto_order_cc_try_later_max"];
    int64 store_credit_valid_days = 65 [json_name = "store_credit_valid_days"];
    routines.Indicator auto_approve_invoice = 66 [json_name = "auto_approve_invoice"];
    routines.Indicator auto_approve_order = 67 [json_name = "auto_approve_order"];
    routines.Indicator ship_if_capture_fails = 68 [json_name = "ship_if_capture_fails"];
    routines.Indicator set_owner_upon_issuance = 69 [json_name = "set_owner_upon_issuance"];
    routines.Indicator req_return_inventory_receive = 70 [json_name = "req_return_inventory_receive"];
    routines.Indicator add_to_cart_remove_incompat = 71 [json_name = "add_to_cart_remove_incompat"];
    routines.Indicator add_to_cart_replace_upsell = 72 [json_name = "add_to_cart_replace_upsell"];
    routines.Indicator split_pay_pref_per_shp_grp = 73 [json_name = "split_pay_pref_per_shp_grp"];
    routines.Indicator managed_by_lot = 74 [json_name = "managed_by_lot"];
    routines.Indicator show_out_of_stock_products = 75 [json_name = "show_out_of_stock_products"];
    routines.Indicator order_decimal_quantity = 76 [json_name = "order_decimal_quantity"];
    routines.Indicator allow_comment = 77 [json_name = "allow_comment"];
    routines.Indicator allocate_inventory = 78 [json_name = "allocate_inventory"];
    google.protobuf.Timestamp last_updated_tx_stamp = 79 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 80 [json_name = "created_tx_stamp"];
    string tenant_id = 81 [json_name = "tenant_id"];
    
    
    // relations
    FacilityData facility = 83 [json_name = "facility"]; // ref(Facility): inventoryFacilityId
    PartyData party = 86 [json_name = "party"]; // ref(Party): payToPartyId
    TaxAuthorityData vat_tax_authority = 96 [json_name = "vat_tax_authority"]; // ref(VatTaxAuthority): vatTaxAuthGeoId + vatTaxAuthPartyId
    repeated CustRequestData cust_request = 98 [json_name = "cust_request"]; // ref(CustRequest): productStoreId
    EbayConfigData ebay_config = 99 [json_name = "ebay_config"]; // ref(EbayConfig): productStoreId
    repeated OrderHeaderData order_header = 106 [json_name = "order_header"]; // ref(OrderHeader): productStoreId
    repeated ProductReviewData product_review = 108 [json_name = "product_review"]; // ref(ProductReview): productStoreId
    repeated ProductStoreCatalogData product_store_catalog = 109 [json_name = "product_store_catalog"]; // ref(ProductStoreCatalog): productStoreId
    repeated ProductStoreEmailSettingData product_store_email_setting = 110 [json_name = "product_store_email_setting"]; // ref(ProductStoreEmailSetting): productStoreId
    repeated ProductStoreFacilityData product_store_facility = 111 [json_name = "product_store_facility"]; // ref(ProductStoreFacility): productStoreId
    repeated ProductStoreFinActSettingData product_store_fin_act_setting = 112 [json_name = "product_store_fin_act_setting"]; // ref(ProductStoreFinActSetting): productStoreId
    repeated ProductStoreKeywordOvrdData product_store_keyword_ovrd = 114 [json_name = "product_store_keyword_ovrd"]; // ref(ProductStoreKeywordOvrd): productStoreId
    repeated ProductStorePaymentSettingData product_store_payment_setting = 115 [json_name = "product_store_payment_setting"]; // ref(ProductStorePaymentSetting): productStoreId
    repeated ProductStorePromoApplData product_store_promo_appl = 116 [json_name = "product_store_promo_appl"]; // ref(ProductStorePromoAppl): productStoreId
    repeated ProductStoreRoleData product_store_role = 117 [json_name = "product_store_role"]; // ref(ProductStoreRole): productStoreId
    repeated ProductStoreSurveyApplData product_store_survey_appl = 118 [json_name = "product_store_survey_appl"]; // ref(ProductStoreSurveyAppl): productStoreId
    repeated QuoteData quote = 122 [json_name = "quote"]; // ref(Quote): productStoreId
    repeated ShoppingListData shopping_list = 124 [json_name = "shopping_list"]; // ref(ShoppingList): productStoreId
    repeated TaxAuthorityRateProductData tax_authority_rate_product = 125 [json_name = "tax_authority_rate_product"]; // ref(TaxAuthorityRateProduct): productStoreId
    repeated WebSiteData web_site = 127 [json_name = "web_site"]; // ref(WebSite): productStoreId
    TenantData tenant = 128 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 129;
    map<string, google.protobuf.Any> attachments = 130;
}



// The Product Store service definition.
service ProductStoreService {
    rpc Create(ProductStoreData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductStoreFlatData) returns (routines.Response) {}
    rpc Update(ProductStoreFlatData) returns (routines.Response) {}
    rpc Delete(ProductStoreFlatData) returns (routines.Response) {}
    rpc Find(ProductStoreFlatData) returns (ProductStoreFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductStoreFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductStoreData) {}
    rpc FindList(routines.QueryList) returns (stream ProductStoreData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductStoreData) {}
}


// Product Store Inventory Facility Applicability
message ProductStoreFacilityData {
    option (routines.entity_type) = "ProductStoreFacility";
    option (routines.keys).keys = "product_store_id, facility_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productStoreId, facilityId, fromDate
    // fields
    string product_store_id = 1 [json_name = "product_store_id"];
    string facility_id = 2 [json_name = "facility_id"];
    google.protobuf.Timestamp from_date = 3 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 4 [json_name = "thru_date"];
    int64 sequence_num = 5 [json_name = "sequence_num"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 7 [json_name = "created_tx_stamp"];
    string id = 8 [json_name = "id", (google.api.graphql.relay_options).id = true];
    string tenant_id = 9 [json_name = "tenant_id"];
    
    
    // relations
    ProductStoreData product_store = 10 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    FacilityData facility = 11 [json_name = "facility"]; // ref(Facility): facilityId
    TenantData tenant = 12 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}



// The Product Store Inventory Facility Applicability service definition.
service ProductStoreFacilityService {
    rpc Create(ProductStoreFacilityData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductStoreFacilityFlatData) returns (routines.Response) {}
    rpc Update(ProductStoreFacilityFlatData) returns (routines.Response) {}
    rpc Delete(ProductStoreFacilityFlatData) returns (routines.Response) {}
    rpc Find(ProductStoreFacilityFlatData) returns (ProductStoreFacilityFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductStoreFacilityFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductStoreFacilityData) {}
    rpc FindList(routines.QueryList) returns (stream ProductStoreFacilityData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductStoreFacilityData) {}
}


// Product Store Catalog Association
message ProductStoreCatalogData {
    option (routines.entity_type) = "ProductStoreCatalog";
    option (routines.keys).keys = "product_store_id, prod_catalog_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productStoreId, prodCatalogId, fromDate
    // fields
    string product_store_id = 1 [json_name = "product_store_id"];
    string prod_catalog_id = 2 [json_name = "prod_catalog_id"];
    google.protobuf.Timestamp from_date = 3 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 4 [json_name = "thru_date"];
    int64 sequence_num = 5 [json_name = "sequence_num"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 7 [json_name = "created_tx_stamp"];
    string id = 8 [json_name = "id", (google.api.graphql.relay_options).id = true];
    string tenant_id = 9 [json_name = "tenant_id"];
    
    
    // relations
    ProductStoreData product_store = 10 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    ProdCatalogData prod_catalog = 11 [json_name = "prod_catalog"]; // ref(ProdCatalog): prodCatalogId
    TenantData tenant = 12 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}



// The Product Store Catalog Association service definition.
service ProductStoreCatalogService {
    rpc Create(ProductStoreCatalogData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductStoreCatalogFlatData) returns (routines.Response) {}
    rpc Update(ProductStoreCatalogFlatData) returns (routines.Response) {}
    rpc Delete(ProductStoreCatalogFlatData) returns (routines.Response) {}
    rpc Find(ProductStoreCatalogFlatData) returns (ProductStoreCatalogFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductStoreCatalogFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductStoreCatalogData) {}
    rpc FindList(routines.QueryList) returns (stream ProductStoreCatalogData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductStoreCatalogData) {}
}


// WebSite
message WebSiteData {
    option (routines.entity_type) = "WebSite";
    option (routines.keys).keys = "web_site_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: webSiteId
    // fields
    string web_site_id = 1 [json_name = "web_site_id", (google.api.graphql.relay_options).id = true];
    string site_name = 2 [json_name = "site_name"];
    string http_host = 3 [json_name = "http_host"];
    string http_port = 4 [json_name = "http_port"];
    string https_host = 5 [json_name = "https_host"];
    string https_port = 6 [json_name = "https_port"];
    routines.Indicator enable_https = 7 [json_name = "enable_https"];
    string webapp_path = 8 [json_name = "webapp_path"];
    string standard_content_prefix = 9 [json_name = "standard_content_prefix"];
    string secure_content_prefix = 10 [json_name = "secure_content_prefix"];
    string cookie_domain = 11 [json_name = "cookie_domain"];
    string visual_theme_set_id = 12 [json_name = "visual_theme_set_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 13 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 14 [json_name = "created_tx_stamp"];
    string product_store_id = 15 [json_name = "product_store_id"];
    routines.Indicator allow_product_store_change = 16 [json_name = "allow_product_store_change"];
    string hosted_path_alias = 17 [json_name = "hosted_path_alias"];
    routines.Indicator is_default = 18 [json_name = "is_default"];
    routines.Indicator display_maintenance_page = 19 [json_name = "display_maintenance_page"];
    string tenant_id = 20 [json_name = "tenant_id"];
    
    
    // relations
    ProductStoreData product_store = 22 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    repeated EbayConfigData ebay_config = 23 [json_name = "ebay_config"]; // ref(EbayConfig): webSiteId
    repeated OrderHeaderData order_header = 24 [json_name = "order_header"]; // ref(OrderHeader): webSiteId
    repeated SubscriptionResourceData subscription_resource = 25 [json_name = "subscription_resource"]; // ref(SubscriptionResource): webSiteId
    repeated WebAnalyticsConfigData web_analytics_config = 26 [json_name = "web_analytics_config"]; // ref(WebAnalyticsConfig): webSiteId
    repeated WebSiteContentData web_site_content = 29 [json_name = "web_site_content"]; // ref(WebSiteContent): webSiteId
    TenantData tenant = 32 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 33;
    map<string, google.protobuf.Any> attachments = 34;
}



// The WebSite service definition.
service WebSiteService {
    rpc Create(WebSiteData) returns (routines.Response) {}
    rpc StoreOrUpdate(WebSiteFlatData) returns (routines.Response) {}
    rpc Update(WebSiteFlatData) returns (routines.Response) {}
    rpc Delete(WebSiteFlatData) returns (routines.Response) {}
    rpc Find(WebSiteFlatData) returns (WebSiteFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (WebSiteFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream WebSiteData) {}
    rpc FindList(routines.QueryList) returns (stream WebSiteData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream WebSiteData) {}
}


// Catalog Category Association
message ProdCatalogCategoryData {
    option (routines.entity_type) = "ProdCatalogCategory";
    option (routines.keys).keys = "prod_catalog_id, product_category_id, prod_catalog_category_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: prodCatalogId, productCategoryId, prodCatalogCategoryTypeId, fromDate
    // fields
    string prod_catalog_id = 1 [json_name = "prod_catalog_id"];
    string product_category_id = 2 [json_name = "product_category_id"];
    string prod_catalog_category_type_id = 3 [json_name = "prod_catalog_category_type_id"];
    google.protobuf.Timestamp from_date = 4 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 5 [json_name = "thru_date"];
    int64 sequence_num = 6 [json_name = "sequence_num"];
    google.protobuf.Timestamp last_updated_tx_stamp = 7 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 8 [json_name = "created_tx_stamp"];
    string id = 9 [json_name = "id", (google.api.graphql.relay_options).id = true];
    string tenant_id = 10 [json_name = "tenant_id"];
    
    
    // relations
    ProdCatalogData prod_catalog = 11 [json_name = "prod_catalog"]; // ref(ProdCatalog): prodCatalogId
    ProductCategoryData product_category = 12 [json_name = "product_category"]; // ref(ProductCategory): productCategoryId
    TenantData tenant = 14 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 15;
    map<string, google.protobuf.Any> attachments = 16;
}



// The Catalog Category Association service definition.
service ProdCatalogCategoryService {
    rpc Create(ProdCatalogCategoryData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProdCatalogCategoryFlatData) returns (routines.Response) {}
    rpc Update(ProdCatalogCategoryFlatData) returns (routines.Response) {}
    rpc Delete(ProdCatalogCategoryFlatData) returns (routines.Response) {}
    rpc Find(ProdCatalogCategoryFlatData) returns (ProdCatalogCategoryFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProdCatalogCategoryFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProdCatalogCategoryData) {}
    rpc FindList(routines.QueryList) returns (stream ProdCatalogCategoryData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProdCatalogCategoryData) {}
}


// Product Category
message ProductCategoryData {
    option (routines.entity_type) = "ProductCategory";
    option (routines.keys).keys = "product_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productCategoryId
    // fields
    string product_category_id = 1 [json_name = "product_category_id", (google.api.graphql.relay_options).id = true];
    string product_category_type_id = 2 [json_name = "product_category_type_id"];
    string primary_parent_category_id = 3 [json_name = "primary_parent_category_id"];
    string category_name = 4 [json_name = "category_name"];
    string description = 5 [json_name = "description"];
    string long_description = 6 [json_name = "long_description"];
    string category_image_url = 7 [json_name = "category_image_url"];
    string link_one_image_url = 8 [json_name = "link_one_image_url"];
    string link_two_image_url = 9 [json_name = "link_two_image_url"];
    string detail_screen = 10 [json_name = "detail_screen"];
    routines.Indicator show_in_select = 11 [json_name = "show_in_select"];
    google.protobuf.Timestamp last_updated_tx_stamp = 12 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 13 [json_name = "created_tx_stamp"];
    string tenant_id = 14 [json_name = "tenant_id"];
    
    
    // relations
    ProductCategoryData primary_parent_product_category = 17 [json_name = "primary_parent_product_category"]; // ref(PrimaryParentProductCategory): primaryParentCategoryId
    repeated ProductCategoryData primary_child_product_category = 18 [json_name = "primary_child_product_category"]; // ref(PrimaryChildProductCategory): productCategoryId
    repeated ProdCatalogCategoryData prod_catalog_category = 21 [json_name = "prod_catalog_category"]; // ref(ProdCatalogCategory): productCategoryId
    repeated ProductData primary_product = 22 [json_name = "primary_product"]; // ref(PrimaryProduct): productCategoryId
    repeated ProductCategoryContentData product_category_content = 24 [json_name = "product_category_content"]; // ref(ProductCategoryContent): productCategoryId
    repeated ProductCategoryLinkData product_category_link = 26 [json_name = "product_category_link"]; // ref(ProductCategoryLink): productCategoryId
    repeated ProductCategoryMemberData product_category_member = 27 [json_name = "product_category_member"]; // ref(ProductCategoryMember): productCategoryId
    repeated ProductCategoryRoleData product_category_role = 28 [json_name = "product_category_role"]; // ref(ProductCategoryRole): productCategoryId
    repeated ProductCategoryRollupData current_product_category_rollup = 29 [json_name = "current_product_category_rollup"]; // ref(CurrentProductCategoryRollup): productCategoryId
    repeated ProductCategoryRollupData parent_product_category_rollup = 30 [json_name = "parent_product_category_rollup"]; // ref(ParentProductCategoryRollup): productCategoryId
    repeated ProductFeatureCategoryApplData product_feature_category_appl = 32 [json_name = "product_feature_category_appl"]; // ref(ProductFeatureCategoryAppl): productCategoryId
    repeated ProductPromoCategoryData product_promo_category = 33 [json_name = "product_promo_category"]; // ref(ProductPromoCategory): productCategoryId
    repeated ProductStoreSurveyApplData product_store_survey_appl = 34 [json_name = "product_store_survey_appl"]; // ref(ProductStoreSurveyAppl): productCategoryId
    repeated TaxAuthorityCategoryData tax_authority_category = 37 [json_name = "tax_authority_category"]; // ref(TaxAuthorityCategory): productCategoryId
    repeated TaxAuthorityRateProductData tax_authority_rate_product = 38 [json_name = "tax_authority_rate_product"]; // ref(TaxAuthorityRateProduct): productCategoryId
    TenantData tenant = 39 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 40;
    map<string, google.protobuf.Any> attachments = 41;
}



// The Product Category service definition.
service ProductCategoryService {
    rpc Create(ProductCategoryData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductCategoryFlatData) returns (routines.Response) {}
    rpc Update(ProductCategoryFlatData) returns (routines.Response) {}
    rpc Delete(ProductCategoryFlatData) returns (routines.Response) {}
    rpc Find(ProductCategoryFlatData) returns (ProductCategoryFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductCategoryFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductCategoryData) {}
    rpc FindList(routines.QueryList) returns (stream ProductCategoryData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductCategoryData) {}
}


// Product Category Rollup
message ProductCategoryRollupData {
    option (routines.entity_type) = "ProductCategoryRollup";
    option (routines.keys).keys = "product_category_id, parent_product_category_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productCategoryId, parentProductCategoryId, fromDate
    // fields
    string product_category_id = 1 [json_name = "product_category_id"];
    string parent_product_category_id = 2 [json_name = "parent_product_category_id"];
    google.protobuf.Timestamp from_date = 3 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 4 [json_name = "thru_date"];
    int64 sequence_num = 5 [json_name = "sequence_num"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 7 [json_name = "created_tx_stamp"];
    string id = 8 [json_name = "id", (google.api.graphql.relay_options).id = true];
    string tenant_id = 9 [json_name = "tenant_id"];
    
    
    // relations
    ProductCategoryData current_product_category = 10 [json_name = "current_product_category"]; // ref(CurrentProductCategory): productCategoryId
    ProductCategoryData parent_product_category = 11 [json_name = "parent_product_category"]; // ref(ParentProductCategory): parentProductCategoryId
    repeated ProductCategoryRollupData child_product_category_rollup = 12 [json_name = "child_product_category_rollup"]; // ref(ChildProductCategoryRollup): productCategoryId
    repeated ProductCategoryRollupData parent_product_category_rollup = 13 [json_name = "parent_product_category_rollup"]; // ref(ParentProductCategoryRollup): parentProductCategoryId
    repeated ProductCategoryRollupData sibling_product_category_rollup = 14 [json_name = "sibling_product_category_rollup"]; // ref(SiblingProductCategoryRollup): parentProductCategoryId
    TenantData tenant = 15 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 16;
    map<string, google.protobuf.Any> attachments = 17;
}



// The Product Category Rollup service definition.
service ProductCategoryRollupService {
    rpc Create(ProductCategoryRollupData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductCategoryRollupFlatData) returns (routines.Response) {}
    rpc Update(ProductCategoryRollupFlatData) returns (routines.Response) {}
    rpc Delete(ProductCategoryRollupFlatData) returns (routines.Response) {}
    rpc Find(ProductCategoryRollupFlatData) returns (ProductCategoryRollupFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductCategoryRollupFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductCategoryRollupData) {}
    rpc FindList(routines.QueryList) returns (stream ProductCategoryRollupData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductCategoryRollupData) {}
}


// Product Category Member
message ProductCategoryMemberData {
    option (routines.entity_type) = "ProductCategoryMember";
    option (routines.keys).keys = "product_category_id, product_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productCategoryId, productId, fromDate
    // fields
    string product_category_id = 1 [json_name = "product_category_id"];
    string product_id = 2 [json_name = "product_id"];
    google.protobuf.Timestamp from_date = 3 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 4 [json_name = "thru_date"];
    string comments = 5 [json_name = "comments"];
    int64 sequence_num = 6 [json_name = "sequence_num"];
    routines.FixedPoint quantity = 7 [json_name = "quantity"];
    google.protobuf.Timestamp last_updated_tx_stamp = 8 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 9 [json_name = "created_tx_stamp"];
    string id = 10 [json_name = "id", (google.api.graphql.relay_options).id = true];
    string tenant_id = 11 [json_name = "tenant_id"];
    
    
    // relations
    ProductData product = 12 [json_name = "product"]; // ref(Product): productId
    ProductCategoryData product_category = 13 [json_name = "product_category"]; // ref(ProductCategory): productCategoryId
    TenantData tenant = 14 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 15;
    map<string, google.protobuf.Any> attachments = 16;
}



// The Product Category Member service definition.
service ProductCategoryMemberService {
    rpc Create(ProductCategoryMemberData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductCategoryMemberFlatData) returns (routines.Response) {}
    rpc Update(ProductCategoryMemberFlatData) returns (routines.Response) {}
    rpc Delete(ProductCategoryMemberFlatData) returns (routines.Response) {}
    rpc Find(ProductCategoryMemberFlatData) returns (ProductCategoryMemberFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductCategoryMemberFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductCategoryMemberData) {}
    rpc FindList(routines.QueryList) returns (stream ProductCategoryMemberData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductCategoryMemberData) {}
}


// Product
message ProductData {
    option (routines.entity_type) = "Product";
    option (routines.keys).keys = "product_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productId
    // fields
    string product_id = 1 [json_name = "product_id", (google.api.graphql.relay_options).id = true];
    string product_type_id = 2 [json_name = "product_type_id"];
    string primary_product_category_id = 3 [json_name = "primary_product_category_id"];
    string facility_id = 4 [json_name = "facility_id"];
    google.protobuf.Timestamp introduction_date = 5 [json_name = "introduction_date"];
    google.protobuf.Timestamp release_date = 6 [json_name = "release_date"];
    google.protobuf.Timestamp support_discontinuation_date = 7 [json_name = "support_discontinuation_date"];
    google.protobuf.Timestamp sales_discontinuation_date = 8 [json_name = "sales_discontinuation_date"];
    routines.Indicator sales_disc_when_not_avail = 9 [json_name = "sales_disc_when_not_avail"];
    string internal_name = 10 [json_name = "internal_name"];
    string brand_name = 11 [json_name = "brand_name"];
    string comments = 12 [json_name = "comments"];
    string product_name = 13 [json_name = "product_name"];
    string description = 14 [json_name = "description"];
    string long_description = 15 [json_name = "long_description"];
    string price_detail_text = 16 [json_name = "price_detail_text"];
    string small_image_url = 17 [json_name = "small_image_url"];
    string medium_image_url = 18 [json_name = "medium_image_url"];
    string large_image_url = 19 [json_name = "large_image_url"];
    string detail_image_url = 20 [json_name = "detail_image_url"];
    string original_image_url = 21 [json_name = "original_image_url"];
    string detail_screen = 22 [json_name = "detail_screen"];
    string inventory_message = 23 [json_name = "inventory_message"];
    string inventory_item_type_id = 24 [json_name = "inventory_item_type_id"];
    routines.Indicator require_inventory = 25 [json_name = "require_inventory"];
    string quantity_uom_id = 26 [json_name = "quantity_uom_id"];
    routines.FixedPoint quantity_included = 27 [json_name = "quantity_included"];
    int64 pieces_included = 28 [json_name = "pieces_included"];
    routines.Indicator require_amount = 29 [json_name = "require_amount"];
    routines.Currency fixed_amount = 30 [json_name = "fixed_amount"];
    string amount_uom_type_id = 31 [json_name = "amount_uom_type_id"];
    string weight_uom_id = 32 [json_name = "weight_uom_id"];
    routines.FixedPoint shipping_weight = 33 [json_name = "shipping_weight"];
    routines.FixedPoint product_weight = 34 [json_name = "product_weight"];
    string height_uom_id = 35 [json_name = "height_uom_id"];
    routines.FixedPoint product_height = 36 [json_name = "product_height"];
    routines.FixedPoint shipping_height = 37 [json_name = "shipping_height"];
    string width_uom_id = 38 [json_name = "width_uom_id"];
    routines.FixedPoint product_width = 39 [json_name = "product_width"];
    routines.FixedPoint shipping_width = 40 [json_name = "shipping_width"];
    string depth_uom_id = 41 [json_name = "depth_uom_id"];
    routines.FixedPoint product_depth = 42 [json_name = "product_depth"];
    routines.FixedPoint shipping_depth = 43 [json_name = "shipping_depth"];
    string diameter_uom_id = 44 [json_name = "diameter_uom_id"];
    routines.FixedPoint product_diameter = 45 [json_name = "product_diameter"];
    routines.FixedPoint product_rating = 46 [json_name = "product_rating"];
    string rating_type_enum = 47 [json_name = "rating_type_enum"];
    routines.Indicator returnable = 48 [json_name = "returnable"];
    routines.Indicator taxable = 49 [json_name = "taxable"];
    routines.Indicator charge_shipping = 50 [json_name = "charge_shipping"];
    routines.Indicator auto_create_keywords = 51 [json_name = "auto_create_keywords"];
    routines.Indicator include_in_promotions = 52 [json_name = "include_in_promotions"];
    routines.Indicator is_virtual = 53 [json_name = "is_virtual"];
    routines.Indicator is_variant = 54 [json_name = "is_variant"];
    string virtual_variant_method_enum = 55 [json_name = "virtual_variant_method_enum"];
    string origin_geo_id = 56 [json_name = "origin_geo_id"];
    string requirement_method_enum_id = 57 [json_name = "requirement_method_enum_id"];
    int64 bill_of_material_level = 58 [json_name = "bill_of_material_level"];
    routines.FixedPoint reserv_max_persons = 59 [json_name = "reserv_max_persons"];
    routines.FixedPoint reserv_2nd_p_p_perc = 60 [json_name = "reserv_2nd_p_p_perc"];
    routines.FixedPoint reserv_nth_p_p_perc = 61 [json_name = "reserv_nth_p_p_perc"];
    string config_id = 62 [json_name = "config_id"];
    google.protobuf.Timestamp created_date = 63 [json_name = "created_date"];
    string created_by_user_login = 64 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 65 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 66 [json_name = "last_modified_by_user_login"];
    routines.Indicator in_shipping_box = 67 [json_name = "in_shipping_box"];
    string default_shipment_box_type_id = 68 [json_name = "default_shipment_box_type_id"];
    string lot_id_filled_in = 69 [json_name = "lot_id_filled_in"];
    routines.Indicator order_decimal_quantity = 70 [json_name = "order_decimal_quantity"];
    google.protobuf.Timestamp last_updated_tx_stamp = 71 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 72 [json_name = "created_tx_stamp"];
    string tenant_id = 73 [json_name = "tenant_id"];
    
    
    // relations
    ProductCategoryData primary_product_category = 76 [json_name = "primary_product_category"]; // ref(PrimaryProductCategory): primaryProductCategoryId
    FacilityData facility = 77 [json_name = "facility"]; // ref(Facility): facilityId
    ShipmentBoxTypeData default_shipment_box_type = 92 [json_name = "default_shipment_box_type"]; // ref(DefaultShipmentBoxType): defaultShipmentBoxTypeId
    repeated AgreementData agreement = 94 [json_name = "agreement"]; // ref(Agreement): productId
    repeated AgreementProductApplData agreement_product_appl = 95 [json_name = "agreement_product_appl"]; // ref(AgreementProductAppl): productId
    repeated CustRequestItemData cust_request_item = 99 [json_name = "cust_request_item"]; // ref(CustRequestItem): productId
    repeated FixedAssetData instance_of_fixed_asset = 100 [json_name = "instance_of_fixed_asset"]; // ref(InstanceOfFixedAsset): productId
    repeated FixedAssetProductData fixed_asset_product = 101 [json_name = "fixed_asset_product"]; // ref(FixedAssetProduct): productId
    repeated InventoryItemData inventory_item = 103 [json_name = "inventory_item"]; // ref(InventoryItem): productId
    repeated InvoiceItemData invoice_item = 105 [json_name = "invoice_item"]; // ref(InvoiceItem): productId
    repeated OrderItemData order_item = 107 [json_name = "order_item"]; // ref(OrderItem): productId
    repeated ProductAssocData main_product_assoc = 110 [json_name = "main_product_assoc"]; // ref(MainProductAssoc): productId
    repeated ProductAssocData assoc_product_assoc = 111 [json_name = "assoc_product_assoc"]; // ref(AssocProductAssoc): productId
    repeated ProductCategoryMemberData product_category_member = 115 [json_name = "product_category_member"]; // ref(ProductCategoryMember): productId
    repeated ProductConfigData product_product_config = 116 [json_name = "product_product_config"]; // ref(ProductProductConfig): productId
    repeated ProductConfigProductData product_product_config_product = 117 [json_name = "product_product_config_product"]; // ref(ProductProductConfigProduct): productId
    repeated ProductContentData product_content = 119 [json_name = "product_content"]; // ref(ProductContent): productId
    repeated ProductFacilityData product_facility = 121 [json_name = "product_facility"]; // ref(ProductFacility): productId
    repeated ProductFacilityAssocData product_facility_assoc = 122 [json_name = "product_facility_assoc"]; // ref(ProductFacilityAssoc): productId
    repeated ProductFacilityLocationData product_facility_location = 123 [json_name = "product_facility_location"]; // ref(ProductFacilityLocation): productId
    repeated ProductFeatureApplData product_feature_appl = 124 [json_name = "product_feature_appl"]; // ref(ProductFeatureAppl): productId
    repeated ProductKeywordData product_keyword = 129 [json_name = "product_keyword"]; // ref(ProductKeyword): productId
    repeated ProductPriceData product_price = 138 [json_name = "product_price"]; // ref(ProductPrice): productId
    repeated ProductPromoProductData product_promo_product = 139 [json_name = "product_promo_product"]; // ref(ProductPromoProduct): productId
    repeated ProductReviewData product_review = 140 [json_name = "product_review"]; // ref(ProductReview): productId
    repeated ProductStoreSurveyApplData product_store_survey_appl = 142 [json_name = "product_store_survey_appl"]; // ref(ProductStoreSurveyAppl): productId
    repeated ProductSubscriptionResourceData product_subscription_resource = 143 [json_name = "product_subscription_resource"]; // ref(ProductSubscriptionResource): productId
    repeated QuoteItemData quote_item = 144 [json_name = "quote_item"]; // ref(QuoteItem): productId
    repeated RequirementData requirement = 146 [json_name = "requirement"]; // ref(Requirement): productId
    repeated ReturnItemData return_item = 147 [json_name = "return_item"]; // ref(ReturnItem): productId
    repeated ShipmentItemData shipment_item = 149 [json_name = "shipment_item"]; // ref(ShipmentItem): productId
    repeated ShipmentPackageContentData sub_shipment_package_content = 150 [json_name = "sub_shipment_package_content"]; // ref(SubShipmentPackageContent): productId
    repeated ShipmentReceiptData shipment_receipt = 151 [json_name = "shipment_receipt"]; // ref(ShipmentReceipt): productId
    repeated ShoppingListItemData shopping_list_item = 152 [json_name = "shopping_list_item"]; // ref(ShoppingListItem): productId
    repeated SupplierProductData supplier_product = 154 [json_name = "supplier_product"]; // ref(SupplierProduct): productId
    repeated WorkEffortGoodStandardData work_effort_good_standard = 156 [json_name = "work_effort_good_standard"]; // ref(WorkEffortGoodStandard): productId
    TenantData tenant = 157 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 158;
    map<string, google.protobuf.Any> attachments = 159;
}



// The Product service definition.
service ProductService {
    rpc Create(ProductData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductFlatData) returns (routines.Response) {}
    rpc Update(ProductFlatData) returns (routines.Response) {}
    rpc Delete(ProductFlatData) returns (routines.Response) {}
    rpc Find(ProductFlatData) returns (ProductFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductData) {}
    rpc FindList(routines.QueryList) returns (stream ProductData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductData) {}
}


// Product Promotion
message ProductPromoData {
    option (routines.entity_type) = "ProductPromo";
    option (routines.keys).keys = "product_promo_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productPromoId
    // fields
    string product_promo_id = 1 [json_name = "product_promo_id", (google.api.graphql.relay_options).id = true];
    string promo_name = 2 [json_name = "promo_name"];
    string promo_text = 3 [json_name = "promo_text"];
    routines.Indicator user_entered = 4 [json_name = "user_entered"];
    routines.Indicator show_to_customer = 5 [json_name = "show_to_customer"];
    routines.Indicator require_code = 6 [json_name = "require_code"];
    int64 use_limit_per_order = 7 [json_name = "use_limit_per_order"];
    int64 use_limit_per_customer = 8 [json_name = "use_limit_per_customer"];
    int64 use_limit_per_promotion = 9 [json_name = "use_limit_per_promotion"];
    routines.FixedPoint billback_factor = 10 [json_name = "billback_factor"];
    string override_org_party_id = 11 [json_name = "override_org_party_id"];
    google.protobuf.Timestamp created_date = 12 [json_name = "created_date"];
    string created_by_user_login = 13 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 14 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 15 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 16 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 17 [json_name = "created_tx_stamp"];
    string tenant_id = 18 [json_name = "tenant_id"];
    
    
    // relations
    PartyData party = 19 [json_name = "party"]; // ref(Party): overrideOrgPartyId
    repeated OrderAdjustmentData order_adjustment = 24 [json_name = "order_adjustment"]; // ref(OrderAdjustment): productPromoId
    repeated ProductPromoActionData product_promo_action = 25 [json_name = "product_promo_action"]; // ref(ProductPromoAction): productPromoId
    repeated ProductPromoCategoryData product_promo_category = 26 [json_name = "product_promo_category"]; // ref(ProductPromoCategory): productPromoId
    repeated ProductPromoCodeData product_promo_code = 27 [json_name = "product_promo_code"]; // ref(ProductPromoCode): productPromoId
    repeated ProductPromoCondData product_promo_cond = 28 [json_name = "product_promo_cond"]; // ref(ProductPromoCond): productPromoId
    repeated ProductPromoProductData product_promo_product = 30 [json_name = "product_promo_product"]; // ref(ProductPromoProduct): productPromoId
    repeated ProductPromoRuleData product_promo_rule = 31 [json_name = "product_promo_rule"]; // ref(ProductPromoRule): productPromoId
    repeated ProductStorePromoApplData product_store_promo_appl = 33 [json_name = "product_store_promo_appl"]; // ref(ProductStorePromoAppl): productPromoId
    repeated QuoteAdjustmentData quote_adjustment = 34 [json_name = "quote_adjustment"]; // ref(QuoteAdjustment): productPromoId
    TenantData tenant = 36 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 37;
    map<string, google.protobuf.Any> attachments = 38;
}



// The Product Promotion service definition.
service ProductPromoService {
    rpc Create(ProductPromoData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductPromoFlatData) returns (routines.Response) {}
    rpc Update(ProductPromoFlatData) returns (routines.Response) {}
    rpc Delete(ProductPromoFlatData) returns (routines.Response) {}
    rpc Find(ProductPromoFlatData) returns (ProductPromoFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductPromoFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductPromoData) {}
    rpc FindList(routines.QueryList) returns (stream ProductPromoData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductPromoData) {}
}


// Order Header
message OrderHeaderData {
    option (routines.entity_type) = "OrderHeader";
    option (routines.keys).keys = "order_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: orderId
    // fields
    string order_id = 1 [json_name = "order_id", (google.api.graphql.relay_options).id = true];
    string order_type_id = 2 [json_name = "order_type_id"];
    string order_name = 3 [json_name = "order_name"];
    string external_id = 4 [json_name = "external_id"];
    string sales_channel_enum_id = 5 [json_name = "sales_channel_enum_id"];
    google.protobuf.Timestamp order_date = 6 [json_name = "order_date"];
    routines.Indicator priority = 7 [json_name = "priority"];
    google.protobuf.Timestamp entry_date = 8 [json_name = "entry_date"];
    google.protobuf.Timestamp pick_sheet_printed_date = 9 [json_name = "pick_sheet_printed_date"];
    string visit_id = 10 [json_name = "visit_id"];
    string status_id = 11 [json_name = "status_id"];
    string created_by = 12 [json_name = "created_by"];
    string first_attempt_order_id = 13 [json_name = "first_attempt_order_id"];
    string currency_uom = 14 [json_name = "currency_uom"];
    string sync_status_id = 15 [json_name = "sync_status_id"];
    string billing_account_id = 16 [json_name = "billing_account_id"];
    string origin_facility_id = 17 [json_name = "origin_facility_id"];
    string web_site_id = 18 [json_name = "web_site_id"];
    string product_store_id = 19 [json_name = "product_store_id"];
    string agreement_id = 20 [json_name = "agreement_id"];
    string terminal_id = 21 [json_name = "terminal_id"];
    string transaction_id = 22 [json_name = "transaction_id"];
    string auto_order_shopping_list_id = 23 [json_name = "auto_order_shopping_list_id"];
    routines.Indicator needs_inventory_issuance = 24 [json_name = "needs_inventory_issuance"];
    routines.Indicator is_rush_order = 25 [json_name = "is_rush_order"];
    string internal_code = 26 [json_name = "internal_code"];
    routines.Currency remaining_sub_total = 27 [json_name = "remaining_sub_total"];
    routines.Currency grand_total = 28 [json_name = "grand_total"];
    routines.Indicator is_viewed = 29 [json_name = "is_viewed"];
    routines.Indicator invoice_per_shipment = 30 [json_name = "invoice_per_shipment"];
    google.protobuf.Timestamp last_updated_tx_stamp = 31 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 32 [json_name = "created_tx_stamp"];
    string tenant_id = 33 [json_name = "tenant_id"];
    
    
    // relations
    FacilityData origin_facility = 36 [json_name = "origin_facility"]; // ref(OriginFacility): originFacilityId
    BillingAccountData billing_account = 38 [json_name = "billing_account"]; // ref(BillingAccount): billingAccountId
    ProductStoreData product_store = 39 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    ShoppingListData auto_order_shopping_list = 40 [json_name = "auto_order_shopping_list"]; // ref(AutoOrderShoppingList): autoOrderShoppingListId
    WebSiteData web_site = 45 [json_name = "web_site"]; // ref(WebSite): webSiteId
    repeated FixedAssetData acquire_fixed_asset = 48 [json_name = "acquire_fixed_asset"]; // ref(AcquireFixedAsset): orderId
    repeated ItemIssuanceData item_issuance = 52 [json_name = "item_issuance"]; // ref(ItemIssuance): orderId
    repeated OrderAdjustmentData order_adjustment = 53 [json_name = "order_adjustment"]; // ref(OrderAdjustment): orderId
    repeated OrderContactMechData order_contact_mech = 55 [json_name = "order_contact_mech"]; // ref(OrderContactMech): orderId
    repeated OrderItemData order_item = 60 [json_name = "order_item"]; // ref(OrderItem): orderId
    repeated OrderItemBillingData order_item_billing = 63 [json_name = "order_item_billing"]; // ref(OrderItemBilling): orderId
    repeated OrderItemPriceInfoData order_item_price_info = 67 [json_name = "order_item_price_info"]; // ref(OrderItemPriceInfo): orderId
    repeated OrderItemShipGroupData order_item_ship_group = 69 [json_name = "order_item_ship_group"]; // ref(OrderItemShipGroup): orderId
    repeated OrderItemShipGroupAssocData order_item_ship_group_assoc = 70 [json_name = "order_item_ship_group_assoc"]; // ref(OrderItemShipGroupAssoc): orderId
    repeated OrderItemShipGrpInvResData order_item_ship_grp_inv_res = 71 [json_name = "order_item_ship_grp_inv_res"]; // ref(OrderItemShipGrpInvRes): orderId
    repeated OrderPaymentPreferenceData order_payment_preference = 73 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): orderId
    repeated OrderRoleData order_role = 76 [json_name = "order_role"]; // ref(OrderRole): orderId
    repeated OrderStatusData order_status = 78 [json_name = "order_status"]; // ref(OrderStatus): orderId
    repeated ReturnItemData return_item = 86 [json_name = "return_item"]; // ref(ReturnItem): orderId
    repeated ShipmentData primary_shipment = 88 [json_name = "primary_shipment"]; // ref(PrimaryShipment): orderId
    repeated ShipmentReceiptData shipment_receipt = 89 [json_name = "shipment_receipt"]; // ref(ShipmentReceipt): orderId
    TenantData tenant = 95 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 96;
    map<string, google.protobuf.Any> attachments = 97;
}



// The Order Header service definition.
service OrderHeaderService {
    rpc Create(OrderHeaderData) returns (routines.Response) {}
    rpc StoreOrUpdate(OrderHeaderFlatData) returns (routines.Response) {}
    rpc Update(OrderHeaderFlatData) returns (routines.Response) {}
    rpc Delete(OrderHeaderFlatData) returns (routines.Response) {}
    rpc Find(OrderHeaderFlatData) returns (OrderHeaderFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (OrderHeaderFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream OrderHeaderData) {}
    rpc FindList(routines.QueryList) returns (stream OrderHeaderData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream OrderHeaderData) {}
}


// Order Item
message OrderItemData {
    option (routines.entity_type) = "OrderItem";
    option (routines.keys).keys = "order_id, order_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: orderId, orderItemSeqId
    // fields
    string order_id = 1 [json_name = "order_id"];
    string order_item_seq_id = 2 [json_name = "order_item_seq_id"];
    string external_id = 3 [json_name = "external_id"];
    string order_item_type_id = 4 [json_name = "order_item_type_id"];
    string order_item_group_seq_id = 5 [json_name = "order_item_group_seq_id"];
    routines.Indicator is_item_group_primary = 6 [json_name = "is_item_group_primary"];
    string from_inventory_item_id = 7 [json_name = "from_inventory_item_id"];
    string budget_id = 8 [json_name = "budget_id"];
    string budget_item_seq_id = 9 [json_name = "budget_item_seq_id"];
    string product_id = 10 [json_name = "product_id"];
    string supplier_product_id = 11 [json_name = "supplier_product_id"];
    string product_feature_id = 12 [json_name = "product_feature_id"];
    string prod_catalog_id = 13 [json_name = "prod_catalog_id"];
    string product_category_id = 14 [json_name = "product_category_id"];
    routines.Indicator is_promo = 15 [json_name = "is_promo"];
    string quote_id = 16 [json_name = "quote_id"];
    string quote_item_seq_id = 17 [json_name = "quote_item_seq_id"];
    string shopping_list_id = 18 [json_name = "shopping_list_id"];
    string shopping_list_item_seq_id = 19 [json_name = "shopping_list_item_seq_id"];
    string subscription_id = 20 [json_name = "subscription_id"];
    string deployment_id = 21 [json_name = "deployment_id"];
    routines.FixedPoint quantity = 22 [json_name = "quantity"];
    routines.FixedPoint cancel_quantity = 23 [json_name = "cancel_quantity"];
    routines.FixedPoint selected_amount = 24 [json_name = "selected_amount"];
    routines.Currency unit_price = 25 [json_name = "unit_price"];
    routines.Currency unit_list_price = 26 [json_name = "unit_list_price"];
    routines.Currency unit_average_cost = 27 [json_name = "unit_average_cost"];
    routines.Currency unit_recurring_price = 28 [json_name = "unit_recurring_price"];
    routines.Indicator is_modified_price = 29 [json_name = "is_modified_price"];
    string recurring_freq_uom_id = 30 [json_name = "recurring_freq_uom_id"];
    string item_description = 31 [json_name = "item_description"];
    string comments = 32 [json_name = "comments"];
    string corresponding_po_id = 33 [json_name = "corresponding_po_id"];
    string status_id = 34 [json_name = "status_id"];
    string sync_status_id = 35 [json_name = "sync_status_id"];
    google.protobuf.Timestamp estimated_ship_date = 36 [json_name = "estimated_ship_date"];
    google.protobuf.Timestamp estimated_delivery_date = 37 [json_name = "estimated_delivery_date"];
    google.protobuf.Timestamp auto_cancel_date = 38 [json_name = "auto_cancel_date"];
    google.protobuf.Timestamp dont_cancel_set_date = 39 [json_name = "dont_cancel_set_date"];
    string dont_cancel_set_user_login = 40 [json_name = "dont_cancel_set_user_login"];
    google.protobuf.Timestamp ship_before_date = 41 [json_name = "ship_before_date"];
    google.protobuf.Timestamp ship_after_date = 42 [json_name = "ship_after_date"];
    google.protobuf.Timestamp reserve_after_date = 43 [json_name = "reserve_after_date"];
    google.protobuf.Timestamp cancel_back_order_date = 44 [json_name = "cancel_back_order_date"];
    string override_gl_account_id = 45 [json_name = "override_gl_account_id"];
    string sales_opportunity_id = 46 [json_name = "sales_opportunity_id"];
    string change_by_user_login_id = 47 [json_name = "change_by_user_login_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 48 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 49 [json_name = "created_tx_stamp"];
    string id = 50 [json_name = "id", (google.api.graphql.relay_options).id = true];
    string tenant_id = 51 [json_name = "tenant_id"];
    
    
    // relations
    OrderHeaderData order_header = 52 [json_name = "order_header"]; // ref(OrderHeader): orderId
    ProductData product = 56 [json_name = "product"]; // ref(Product): productId
    InventoryItemData from_inventory_item = 57 [json_name = "from_inventory_item"]; // ref(FromInventoryItem): fromInventoryItemId
    repeated ProductFacilityLocationData product_facility_location = 60 [json_name = "product_facility_location"]; // ref(ProductFacilityLocation): productId
    QuoteItemData quote_item = 64 [json_name = "quote_item"]; // ref(QuoteItem): quoteId + quoteItemSeqId
    ShoppingListItemData shopping_list_item = 65 [json_name = "shopping_list_item"]; // ref(ShoppingListItem): shoppingListId + shoppingListItemSeqId
    GlAccountData override_gl_account = 66 [json_name = "override_gl_account"]; // ref(OverrideGlAccount): overrideGlAccountId
    repeated FinAccountTransData fin_account_trans = 70 [json_name = "fin_account_trans"]; // ref(FinAccountTrans): orderId + orderItemSeqId
    repeated FixedAssetData acquire_fixed_asset = 71 [json_name = "acquire_fixed_asset"]; // ref(AcquireFixedAsset): orderId + orderItemSeqId
    repeated ItemIssuanceData item_issuance = 74 [json_name = "item_issuance"]; // ref(ItemIssuance): orderId + orderItemSeqId
    repeated OrderAdjustmentData order_adjustment = 75 [json_name = "order_adjustment"]; // ref(OrderAdjustment): orderId + orderItemSeqId
    repeated OrderItemBillingData order_item_billing = 80 [json_name = "order_item_billing"]; // ref(OrderItemBilling): orderId + orderItemSeqId
    repeated OrderItemPriceInfoData order_item_price_info = 84 [json_name = "order_item_price_info"]; // ref(OrderItemPriceInfo): orderId + orderItemSeqId
    repeated OrderItemShipGroupAssocData order_item_ship_group_assoc = 86 [json_name = "order_item_ship_group_assoc"]; // ref(OrderItemShipGroupAssoc): orderId + orderItemSeqId
    repeated OrderItemShipGrpInvResData order_item_ship_grp_inv_res = 87 [json_name = "order_item_ship_grp_inv_res"]; // ref(OrderItemShipGrpInvRes): orderId + orderItemSeqId
    repeated OrderPaymentPreferenceData order_payment_preference = 88 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): orderId + orderItemSeqId
    repeated OrderStatusData order_status = 91 [json_name = "order_status"]; // ref(OrderStatus): orderId + orderItemSeqId
    repeated ReturnItemData return_item = 96 [json_name = "return_item"]; // ref(ReturnItem): orderId + orderItemSeqId
    repeated ShipmentReceiptData shipment_receipt = 97 [json_name = "shipment_receipt"]; // ref(ShipmentReceipt): orderId + orderItemSeqId
    TenantData tenant = 101 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 102;
    map<string, google.protobuf.Any> attachments = 103;
}



// The Order Item service definition.
service OrderItemService {
    rpc Create(OrderItemData) returns (routines.Response) {}
    rpc StoreOrUpdate(OrderItemFlatData) returns (routines.Response) {}
    rpc Update(OrderItemFlatData) returns (routines.Response) {}
    rpc Delete(OrderItemFlatData) returns (routines.Response) {}
    rpc Find(OrderItemFlatData) returns (OrderItemFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (OrderItemFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream OrderItemData) {}
    rpc FindList(routines.QueryList) returns (stream OrderItemData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream OrderItemData) {}
}


// Shopping List
message ShoppingListData {
    option (routines.entity_type) = "ShoppingList";
    option (routines.keys).keys = "shopping_list_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: shoppingListId
    // fields
    string shopping_list_id = 1 [json_name = "shopping_list_id", (google.api.graphql.relay_options).id = true];
    string shopping_list_type_id = 2 [json_name = "shopping_list_type_id"];
    string parent_shopping_list_id = 3 [json_name = "parent_shopping_list_id"];
    string product_store_id = 4 [json_name = "product_store_id"];
    string visitor_id = 5 [json_name = "visitor_id"];
    string party_id = 6 [json_name = "party_id"];
    string list_name = 7 [json_name = "list_name"];
    string description = 8 [json_name = "description"];
    routines.Indicator is_public = 9 [json_name = "is_public"];
    routines.Indicator is_active = 10 [json_name = "is_active"];
    string currency_uom = 11 [json_name = "currency_uom"];
    string shipment_method_type_id = 12 [json_name = "shipment_method_type_id"];
    string carrier_party_id = 13 [json_name = "carrier_party_id"];
    string carrier_role_type_id = 14 [json_name = "carrier_role_type_id"];
    string contact_mech_id = 15 [json_name = "contact_mech_id"];
    string payment_method_id = 16 [json_name = "payment_method_id"];
    string recurrence_info_id = 17 [json_name = "recurrence_info_id"];
    google.protobuf.Timestamp last_ordered_date = 18 [json_name = "last_ordered_date"];
    google.protobuf.Timestamp last_admin_modified = 19 [json_name = "last_admin_modified"];
    string product_promo_code_id = 20 [json_name = "product_promo_code_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 21 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 22 [json_name = "created_tx_stamp"];
    string tenant_id = 23 [json_name = "tenant_id"];
    
    
    // relations
    ShoppingListData parent_shopping_list = 24 [json_name = "parent_shopping_list"]; // ref(ParentShoppingList): parentShoppingListId
    repeated ShoppingListData sibling_shopping_list = 25 [json_name = "sibling_shopping_list"]; // ref(SiblingShoppingList): parentShoppingListId
    ProductStoreData product_store = 27 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    PartyData party = 28 [json_name = "party"]; // ref(Party): partyId
    repeated ProductStoreShipmentMethData product_store_shipment_meth = 29 [json_name = "product_store_shipment_meth"]; // ref(ProductStoreShipmentMeth): productStoreId + shipmentMethodTypeId + carrierPartyId + carrierRoleTypeId
    CarrierShipmentMethodData carrier_shipment_method = 30 [json_name = "carrier_shipment_method"]; // ref(CarrierShipmentMethod): shipmentMethodTypeId + carrierPartyId + carrierRoleTypeId
    ContactMechData contact_mech = 31 [json_name = "contact_mech"]; // ref(ContactMech): contactMechId
    PostalAddressData postal_address = 32 [json_name = "postal_address"]; // ref(PostalAddress): contactMechId
    PaymentMethodData payment_method = 33 [json_name = "payment_method"]; // ref(PaymentMethod): paymentMethodId
    RecurrenceInfoData recurrence_info = 34 [json_name = "recurrence_info"]; // ref(RecurrenceInfo): recurrenceInfoId
    ProductPromoCodeData product_promo_code = 35 [json_name = "product_promo_code"]; // ref(ProductPromoCode): productPromoCodeId
    repeated OrderHeaderData auto_order_order_header = 36 [json_name = "auto_order_order_header"]; // ref(AutoOrderOrderHeader): shoppingListId
    repeated ShoppingListData child_shopping_list = 37 [json_name = "child_shopping_list"]; // ref(ChildShoppingList): shoppingListId
    repeated ShoppingListItemData shopping_list_item = 38 [json_name = "shopping_list_item"]; // ref(ShoppingListItem): shoppingListId
    TenantData tenant = 41 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 42;
    map<string, google.protobuf.Any> attachments = 43;
}



// The Shopping List service definition.
service ShoppingListService {
    rpc Create(ShoppingListData) returns (routines.Response) {}
    rpc StoreOrUpdate(ShoppingListFlatData) returns (routines.Response) {}
    rpc Update(ShoppingListFlatData) returns (routines.Response) {}
    rpc Delete(ShoppingListFlatData) returns (routines.Response) {}
    rpc Find(ShoppingListFlatData) returns (ShoppingListFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ShoppingListFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ShoppingListData) {}
    rpc FindList(routines.QueryList) returns (stream ShoppingListData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ShoppingListData) {}
}


// Payment
message PaymentData {
    option (routines.entity_type) = "Payment";
    option (routines.keys).keys = "payment_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: paymentId
    // fields
    string payment_id = 1 [json_name = "payment_id", (google.api.graphql.relay_options).id = true];
    string payment_type_id = 2 [json_name = "payment_type_id"];
    string payment_method_type_id = 3 [json_name = "payment_method_type_id"];
    string payment_method_id = 4 [json_name = "payment_method_id"];
    string payment_gateway_response_id = 5 [json_name = "payment_gateway_response_id"];
    string payment_preference_id = 6 [json_name = "payment_preference_id"];
    string party_id_from = 7 [json_name = "party_id_from"];
    string party_id_to = 8 [json_name = "party_id_to"];
    string role_type_id_to = 9 [json_name = "role_type_id_to"];
    string status_id = 10 [json_name = "status_id"];
    google.protobuf.Timestamp effective_date = 11 [json_name = "effective_date"];
    string payment_ref_num = 12 [json_name = "payment_ref_num"];
    routines.Currency amount = 13 [json_name = "amount"];
    string currency_uom_id = 14 [json_name = "currency_uom_id"];
    string comments = 15 [json_name = "comments"];
    string fin_account_trans_id = 16 [json_name = "fin_account_trans_id"];
    string override_gl_account_id = 17 [json_name = "override_gl_account_id"];
    routines.Currency actual_currency_amount = 18 [json_name = "actual_currency_amount"];
    string actual_currency_uom_id = 19 [json_name = "actual_currency_uom_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 20 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 21 [json_name = "created_tx_stamp"];
    string tenant_id = 22 [json_name = "tenant_id"];
    
    
    // relations
    PaymentMethodData payment_method = 26 [json_name = "payment_method"]; // ref(PaymentMethod): paymentMethodId
    CreditCardData credit_card = 29 [json_name = "credit_card"]; // ref(CreditCard): paymentMethodId
    EftAccountData eft_account = 30 [json_name = "eft_account"]; // ref(EftAccount): paymentMethodId
    OrderPaymentPreferenceData order_payment_preference = 32 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): paymentPreferenceId
    PaymentGatewayResponseData payment_gateway_response = 33 [json_name = "payment_gateway_response"]; // ref(PaymentGatewayResponse): paymentGatewayResponseId
    PartyData from_party = 34 [json_name = "from_party"]; // ref(FromParty): partyIdFrom
    PartyData to_party = 35 [json_name = "to_party"]; // ref(ToParty): partyIdTo
    PartyRoleData to_party_role = 37 [json_name = "to_party_role"]; // ref(ToPartyRole): partyIdTo + roleTypeIdTo
    FinAccountTransData fin_account_trans = 39 [json_name = "fin_account_trans"]; // ref(FinAccountTrans): finAccountTransId
    GlAccountData gl_account = 40 [json_name = "gl_account"]; // ref(GlAccount): overrideGlAccountId
    repeated AcctgTransData acctg_trans = 41 [json_name = "acctg_trans"]; // ref(AcctgTrans): paymentId
    repeated PaymentApplicationData payment_application = 43 [json_name = "payment_application"]; // ref(PaymentApplication): paymentId
    repeated PaymentApplicationData to_payment_application = 44 [json_name = "to_payment_application"]; // ref(ToPaymentApplication): paymentId
    TenantData tenant = 51 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 52;
    map<string, google.protobuf.Any> attachments = 53;
}



// The Payment service definition.
service PaymentService {
    rpc Create(PaymentData) returns (routines.Response) {}
    rpc StoreOrUpdate(PaymentFlatData) returns (routines.Response) {}
    rpc Update(PaymentFlatData) returns (routines.Response) {}
    rpc Delete(PaymentFlatData) returns (routines.Response) {}
    rpc Find(PaymentFlatData) returns (PaymentFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PaymentFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PaymentData) {}
    rpc FindList(routines.QueryList) returns (stream PaymentData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PaymentData) {}
}


// Invoice
message InvoiceData {
    option (routines.entity_type) = "Invoice";
    option (routines.keys).keys = "invoice_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: invoiceId
    // fields
    string invoice_id = 1 [json_name = "invoice_id", (google.api.graphql.relay_options).id = true];
    string invoice_type_id = 2 [json_name = "invoice_type_id"];
    string party_id_from = 3 [json_name = "party_id_from"];
    string party_id = 4 [json_name = "party_id"];
    string role_type_id = 5 [json_name = "role_type_id"];
    string status_id = 6 [json_name = "status_id"];
    string billing_account_id = 7 [json_name = "billing_account_id"];
    string contact_mech_id = 8 [json_name = "contact_mech_id"];
    google.protobuf.Timestamp invoice_date = 9 [json_name = "invoice_date"];
    google.protobuf.Timestamp due_date = 10 [json_name = "due_date"];
    google.protobuf.Timestamp paid_date = 11 [json_name = "paid_date"];
    string invoice_message = 12 [json_name = "invoice_message"];
    string reference_number = 13 [json_name = "reference_number"];
    string description = 14 [json_name = "description"];
    string currency_uom_id = 15 [json_name = "currency_uom_id"];
    string recurrence_info_id = 16 [json_name = "recurrence_info_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 17 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 18 [json_name = "created_tx_stamp"];
    string tenant_id = 19 [json_name = "tenant_id"];
    
    
    // relations
    PartyData from_party = 22 [json_name = "from_party"]; // ref(FromParty): partyIdFrom
    PartyData party = 23 [json_name = "party"]; // ref(Party): partyId
    PartyRoleData party_role = 25 [json_name = "party_role"]; // ref(PartyRole): partyId + roleTypeId
    BillingAccountData billing_account = 27 [json_name = "billing_account"]; // ref(BillingAccount): billingAccountId
    ContactMechData contact_mech = 28 [json_name = "contact_mech"]; // ref(ContactMech): contactMechId
    RecurrenceInfoData recurrence_info = 30 [json_name = "recurrence_info"]; // ref(RecurrenceInfo): recurrenceInfoId
    repeated AcctgTransData acctg_trans = 31 [json_name = "acctg_trans"]; // ref(AcctgTrans): invoiceId
    repeated InvoiceItemData invoice_item = 35 [json_name = "invoice_item"]; // ref(InvoiceItem): invoiceId
    repeated InvoiceRoleData invoice_role = 37 [json_name = "invoice_role"]; // ref(InvoiceRole): invoiceId
    repeated InvoiceStatusData invoice_status = 38 [json_name = "invoice_status"]; // ref(InvoiceStatus): invoiceId
    repeated OrderAdjustmentBillingData order_adjustment_billing = 40 [json_name = "order_adjustment_billing"]; // ref(OrderAdjustmentBilling): invoiceId
    repeated OrderItemBillingData order_item_billing = 41 [json_name = "order_item_billing"]; // ref(OrderItemBilling): invoiceId
    repeated PaymentApplicationData payment_application = 42 [json_name = "payment_application"]; // ref(PaymentApplication): invoiceId
    repeated ShipmentItemBillingData shipment_item_billing = 44 [json_name = "shipment_item_billing"]; // ref(ShipmentItemBilling): invoiceId
    TenantData tenant = 47 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 48;
    map<string, google.protobuf.Any> attachments = 49;
}



// The Invoice service definition.
service InvoiceService {
    rpc Create(InvoiceData) returns (routines.Response) {}
    rpc StoreOrUpdate(InvoiceFlatData) returns (routines.Response) {}
    rpc Update(InvoiceFlatData) returns (routines.Response) {}
    rpc Delete(InvoiceFlatData) returns (routines.Response) {}
    rpc Find(InvoiceFlatData) returns (InvoiceFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (InvoiceFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream InvoiceData) {}
    rpc FindList(routines.QueryList) returns (stream InvoiceData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream InvoiceData) {}
}


// Invoice Item
message InvoiceItemData {
    option (routines.entity_type) = "InvoiceItem";
    option (routines.keys).keys = "invoice_id, invoice_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: invoiceId, invoiceItemSeqId
    // fields
    string invoice_id = 1 [json_name = "invoice_id"];
    string invoice_item_seq_id = 2 [json_name = "invoice_item_seq_id"];
    string invoice_item_type_id = 3 [json_name = "invoice_item_type_id"];
    string override_gl_account_id = 4 [json_name = "override_gl_account_id"];
    string override_org_party_id = 5 [json_name = "override_org_party_id"];
    string inventory_item_id = 6 [json_name = "inventory_item_id"];
    string product_id = 7 [json_name = "product_id"];
    string product_feature_id = 8 [json_name = "product_feature_id"];
    string parent_invoice_id = 9 [json_name = "parent_invoice_id"];
    string parent_invoice_item_seq_id = 10 [json_name = "parent_invoice_item_seq_id"];
    string uom_id = 11 [json_name = "uom_id"];
    routines.Indicator taxable_flag = 12 [json_name = "taxable_flag"];
    routines.FixedPoint quantity = 13 [json_name = "quantity"];
    routines.Currency amount = 14 [json_name = "amount"];
    string description = 15 [json_name = "description"];
    string tax_auth_party_id = 16 [json_name = "tax_auth_party_id"];
    string tax_auth_geo_id = 17 [json_name = "tax_auth_geo_id"];
    string tax_authority_rate_seq_id = 18 [json_name = "tax_authority_rate_seq_id"];
    string sales_opportunity_id = 19 [json_name = "sales_opportunity_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 20 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 21 [json_name = "created_tx_stamp"];
    string id = 22 [json_name = "id", (google.api.graphql.relay_options).id = true];
    string tenant_id = 23 [json_name = "tenant_id"];
    
    
    // relations
    InvoiceData invoice = 26 [json_name = "invoice"]; // ref(Invoice): invoiceId
    InventoryItemData inventory_item = 27 [json_name = "inventory_item"]; // ref(InventoryItem): inventoryItemId
    ProductData product = 28 [json_name = "product"]; // ref(Product): productId
    ProductFeatureData product_feature = 29 [json_name = "product_feature"]; // ref(ProductFeature): productFeatureId
    InvoiceItemData invoice_item = 30 [json_name = "invoice_item"]; // ref(InvoiceItem): parentInvoiceId + parentInvoiceItemSeqId
    repeated InvoiceItemData children_invoice_item = 31 [json_name = "children_invoice_item"]; // ref(ChildrenInvoiceItem): invoiceId + invoiceItemSeqId
    GlAccountData override_gl_account = 33 [json_name = "override_gl_account"]; // ref(OverrideGlAccount): overrideGlAccountId
    PartyData tax_authority_party = 34 [json_name = "tax_authority_party"]; // ref(TaxAuthorityParty): taxAuthPartyId
    TaxAuthorityRateProductData tax_authority_rate_product = 36 [json_name = "tax_authority_rate_product"]; // ref(TaxAuthorityRateProduct): taxAuthorityRateSeqId
    PartyData override_org_party = 37 [json_name = "override_org_party"]; // ref(OverrideOrgParty): overrideOrgPartyId
    repeated OrderAdjustmentBillingData order_adjustment_billing = 43 [json_name = "order_adjustment_billing"]; // ref(OrderAdjustmentBilling): invoiceId + invoiceItemSeqId
    repeated OrderItemBillingData order_item_billing = 44 [json_name = "order_item_billing"]; // ref(OrderItemBilling): invoiceId + invoiceItemSeqId
    repeated PaymentApplicationData payment_application = 45 [json_name = "payment_application"]; // ref(PaymentApplication): invoiceId + invoiceItemSeqId
    repeated ShipmentItemBillingData shipment_item_billing = 47 [json_name = "shipment_item_billing"]; // ref(ShipmentItemBilling): invoiceId + invoiceItemSeqId
    TenantData tenant = 50 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 51;
    map<string, google.protobuf.Any> attachments = 52;
}



// The Invoice Item service definition.
service InvoiceItemService {
    rpc Create(InvoiceItemData) returns (routines.Response) {}
    rpc StoreOrUpdate(InvoiceItemFlatData) returns (routines.Response) {}
    rpc Update(InvoiceItemFlatData) returns (routines.Response) {}
    rpc Delete(InvoiceItemFlatData) returns (routines.Response) {}
    rpc Find(InvoiceItemFlatData) returns (InvoiceItemFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (InvoiceItemFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream InvoiceItemData) {}
    rpc FindList(routines.QueryList) returns (stream InvoiceItemData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream InvoiceItemData) {}
}


// Shipment
message ShipmentData {
    option (routines.entity_type) = "Shipment";
    option (routines.keys).keys = "shipment_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: shipmentId
    // fields
    string shipment_id = 1 [json_name = "shipment_id", (google.api.graphql.relay_options).id = true];
    string shipment_type_id = 2 [json_name = "shipment_type_id"];
    string status_id = 3 [json_name = "status_id"];
    string primary_order_id = 4 [json_name = "primary_order_id"];
    string primary_return_id = 5 [json_name = "primary_return_id"];
    string primary_ship_group_seq_id = 6 [json_name = "primary_ship_group_seq_id"];
    string picklist_bin_id = 7 [json_name = "picklist_bin_id"];
    google.protobuf.Timestamp estimated_ready_date = 8 [json_name = "estimated_ready_date"];
    google.protobuf.Timestamp estimated_ship_date = 9 [json_name = "estimated_ship_date"];
    string estimated_ship_work_eff_id = 10 [json_name = "estimated_ship_work_eff_id"];
    google.protobuf.Timestamp estimated_arrival_date = 11 [json_name = "estimated_arrival_date"];
    string estimated_arrival_work_eff_id = 12 [json_name = "estimated_arrival_work_eff_id"];
    google.protobuf.Timestamp latest_cancel_date = 13 [json_name = "latest_cancel_date"];
    routines.Currency estimated_ship_cost = 14 [json_name = "estimated_ship_cost"];
    string currency_uom_id = 15 [json_name = "currency_uom_id"];
    string handling_instructions = 16 [json_name = "handling_instructions"];
    string origin_facility_id = 17 [json_name = "origin_facility_id"];
    string destination_facility_id = 18 [json_name = "destination_facility_id"];
    string origin_contact_mech_id = 19 [json_name = "origin_contact_mech_id"];
    string origin_telecom_number_id = 20 [json_name = "origin_telecom_number_id"];
    string destination_contact_mech_id = 21 [json_name = "destination_contact_mech_id"];
    string destination_telecom_number_id = 22 [json_name = "destination_telecom_number_id"];
    string party_id_to = 23 [json_name = "party_id_to"];
    string party_id_from = 24 [json_name = "party_id_from"];
    routines.Currency additional_shipping_charge = 25 [json_name = "additional_shipping_charge"];
    string addtl_shipping_charge_desc = 26 [json_name = "addtl_shipping_charge_desc"];
    google.protobuf.Timestamp created_date = 27 [json_name = "created_date"];
    string created_by_user_login = 28 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 29 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 30 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 31 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 32 [json_name = "created_tx_stamp"];
    string tenant_id = 33 [json_name = "tenant_id"];
    
    
    // relations
    WorkEffortData estimated_ship_work_effort = 36 [json_name = "estimated_ship_work_effort"]; // ref(EstimatedShipWorkEffort): estimatedShipWorkEffId
    WorkEffortData estimated_arrival_work_effort = 37 [json_name = "estimated_arrival_work_effort"]; // ref(EstimatedArrivalWorkEffort): estimatedArrivalWorkEffId
    FacilityData origin_facility = 39 [json_name = "origin_facility"]; // ref(OriginFacility): originFacilityId
    FacilityData destination_facility = 40 [json_name = "destination_facility"]; // ref(DestinationFacility): destinationFacilityId
    ContactMechData origin_contact_mech = 41 [json_name = "origin_contact_mech"]; // ref(OriginContactMech): originContactMechId
    ContactMechData dest_contact_mech = 42 [json_name = "dest_contact_mech"]; // ref(DestContactMech): destinationContactMechId
    PostalAddressData origin_postal_address = 43 [json_name = "origin_postal_address"]; // ref(OriginPostalAddress): originContactMechId
    TelecomNumberData origin_telecom_number = 44 [json_name = "origin_telecom_number"]; // ref(OriginTelecomNumber): originTelecomNumberId
    PostalAddressData destination_postal_address = 45 [json_name = "destination_postal_address"]; // ref(DestinationPostalAddress): destinationContactMechId
    TelecomNumberData destination_telecom_number = 46 [json_name = "destination_telecom_number"]; // ref(DestinationTelecomNumber): destinationTelecomNumberId
    OrderHeaderData primary_order_header = 47 [json_name = "primary_order_header"]; // ref(PrimaryOrderHeader): primaryOrderId
    ReturnHeaderData primary_return_header = 48 [json_name = "primary_return_header"]; // ref(PrimaryReturnHeader): primaryReturnId
    OrderItemShipGroupData primary_order_item_ship_group = 50 [json_name = "primary_order_item_ship_group"]; // ref(PrimaryOrderItemShipGroup): primaryOrderId + primaryShipGroupSeqId
    PartyData to_party = 52 [json_name = "to_party"]; // ref(ToParty): partyIdTo
    PersonData to_person = 53 [json_name = "to_person"]; // ref(ToPerson): partyIdTo
    PartyGroupData to_party_group = 54 [json_name = "to_party_group"]; // ref(ToPartyGroup): partyIdTo
    PartyData from_party = 55 [json_name = "from_party"]; // ref(FromParty): partyIdFrom
    PersonData from_person = 56 [json_name = "from_person"]; // ref(FromPerson): partyIdFrom
    PartyGroupData from_party_group = 57 [json_name = "from_party_group"]; // ref(FromPartyGroup): partyIdFrom
    repeated AcctgTransData acctg_trans = 59 [json_name = "acctg_trans"]; // ref(AcctgTrans): shipmentId
    repeated ItemIssuanceData item_issuance = 60 [json_name = "item_issuance"]; // ref(ItemIssuance): shipmentId
    repeated ShipmentItemData shipment_item = 65 [json_name = "shipment_item"]; // ref(ShipmentItem): shipmentId
    repeated ShipmentItemBillingData shipment_item_billing = 66 [json_name = "shipment_item_billing"]; // ref(ShipmentItemBilling): shipmentId
    repeated ShipmentPackageData shipment_package = 68 [json_name = "shipment_package"]; // ref(ShipmentPackage): shipmentId
    repeated ShipmentPackageContentData shipment_package_content = 69 [json_name = "shipment_package_content"]; // ref(ShipmentPackageContent): shipmentId
    repeated ShipmentPackageRouteSegData shipment_package_route_seg = 70 [json_name = "shipment_package_route_seg"]; // ref(ShipmentPackageRouteSeg): shipmentId
    repeated ShipmentReceiptData shipment_receipt = 71 [json_name = "shipment_receipt"]; // ref(ShipmentReceipt): shipmentId
    repeated ShipmentRouteSegmentData shipment_route_segment = 72 [json_name = "shipment_route_segment"]; // ref(ShipmentRouteSegment): shipmentId
    repeated ShipmentStatusData shipment_status = 73 [json_name = "shipment_status"]; // ref(ShipmentStatus): shipmentId
    TenantData tenant = 74 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 75;
    map<string, google.protobuf.Any> attachments = 76;
}



// The Shipment service definition.
service ShipmentService {
    rpc Create(ShipmentData) returns (routines.Response) {}
    rpc StoreOrUpdate(ShipmentFlatData) returns (routines.Response) {}
    rpc Update(ShipmentFlatData) returns (routines.Response) {}
    rpc Delete(ShipmentFlatData) returns (routines.Response) {}
    rpc Find(ShipmentFlatData) returns (ShipmentFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ShipmentFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ShipmentData) {}
    rpc FindList(routines.QueryList) returns (stream ShipmentData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ShipmentData) {}
}


// Inventory Item
message InventoryItemData {
    option (routines.entity_type) = "InventoryItem";
    option (routines.keys).keys = "inventory_item_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: inventoryItemId
    // fields
    string inventory_item_id = 1 [json_name = "inventory_item_id", (google.api.graphql.relay_options).id = true];
    string inventory_item_type_id = 2 [json_name = "inventory_item_type_id"];
    string product_id = 3 [json_name = "product_id"];
    string party_id = 4 [json_name = "party_id"];
    string owner_party_id = 5 [json_name = "owner_party_id"];
    string status_id = 6 [json_name = "status_id"];
    google.protobuf.Timestamp datetime_received = 7 [json_name = "datetime_received"];
    google.protobuf.Timestamp datetime_manufactured = 8 [json_name = "datetime_manufactured"];
    google.protobuf.Timestamp expire_date = 9 [json_name = "expire_date"];
    string facility_id = 10 [json_name = "facility_id"];
    string container_id = 11 [json_name = "container_id"];
    string lot_id = 12 [json_name = "lot_id"];
    string uom_id = 13 [json_name = "uom_id"];
    string bin_number = 14 [json_name = "bin_number"];
    string location_seq_id = 15 [json_name = "location_seq_id"];
    string comments = 16 [json_name = "comments"];
    routines.FixedPoint quantity_on_hand_total = 17 [json_name = "quantity_on_hand_total"];
    routines.FixedPoint available_to_promise_total = 18 [json_name = "available_to_promise_total"];
    routines.FixedPoint accounting_quantity_total = 19 [json_name = "accounting_quantity_total"];
    string serial_number = 20 [json_name = "serial_number"];
    string soft_identifier = 21 [json_name = "soft_identifier"];
    string activation_number = 22 [json_name = "activation_number"];
    google.protobuf.Timestamp activation_valid_thru = 23 [json_name = "activation_valid_thru"];
    routines.FixedPoint unit_cost = 24 [json_name = "unit_cost"];
    string currency_uom_id = 25 [json_name = "currency_uom_id"];
    string fixed_asset_id = 26 [json_name = "fixed_asset_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 27 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 28 [json_name = "created_tx_stamp"];
    string tenant_id = 29 [json_name = "tenant_id"];
    
    
    // relations
    ProductData product = 32 [json_name = "product"]; // ref(Product): productId
    PartyData party = 33 [json_name = "party"]; // ref(Party): partyId
    PartyData owner_party = 34 [json_name = "owner_party"]; // ref(OwnerParty): ownerPartyId
    FacilityData facility = 36 [json_name = "facility"]; // ref(Facility): facilityId
    ProductFacilityData product_facility = 39 [json_name = "product_facility"]; // ref(ProductFacility): productId + facilityId
    FacilityLocationData facility_location = 40 [json_name = "facility_location"]; // ref(FacilityLocation): facilityId + locationSeqId
    ProductFacilityLocationData product_facility_location = 41 [json_name = "product_facility_location"]; // ref(ProductFacilityLocation): productId + facilityId + locationSeqId
    FixedAssetData fixed_asset_fixed_asset = 44 [json_name = "fixed_asset_fixed_asset"]; // ref(FixedAssetFixedAsset): fixedAssetId
    repeated AcctgTransData acctg_trans = 45 [json_name = "acctg_trans"]; // ref(AcctgTrans): inventoryItemId
    repeated AcctgTransEntryData acctg_trans_entry = 46 [json_name = "acctg_trans_entry"]; // ref(AcctgTransEntry): inventoryItemId
    repeated InventoryItemDetailData inventory_item_detail = 48 [json_name = "inventory_item_detail"]; // ref(InventoryItemDetail): inventoryItemId
    repeated InvoiceItemData invoice_item = 53 [json_name = "invoice_item"]; // ref(InvoiceItem): inventoryItemId
    repeated ItemIssuanceData item_issuance = 54 [json_name = "item_issuance"]; // ref(ItemIssuance): inventoryItemId
    repeated OrderItemData from_order_item = 55 [json_name = "from_order_item"]; // ref(FromOrderItem): inventoryItemId
    repeated OrderItemShipGrpInvResData order_item_ship_grp_inv_res = 56 [json_name = "order_item_ship_grp_inv_res"]; // ref(OrderItemShipGrpInvRes): inventoryItemId
    repeated ShipmentReceiptData shipment_receipt = 58 [json_name = "shipment_receipt"]; // ref(ShipmentReceipt): inventoryItemId
    TenantData tenant = 62 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 63;
    map<string, google.protobuf.Any> attachments = 64;
}



// The Inventory Item service definition.
service InventoryItemService {
    rpc Create(InventoryItemData) returns (routines.Response) {}
    rpc StoreOrUpdate(InventoryItemFlatData) returns (routines.Response) {}
    rpc Update(InventoryItemFlatData) returns (routines.Response) {}
    rpc Delete(InventoryItemFlatData) returns (routines.Response) {}
    rpc Find(InventoryItemFlatData) returns (InventoryItemFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (InventoryItemFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream InventoryItemData) {}
    rpc FindList(routines.QueryList) returns (stream InventoryItemData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream InventoryItemData) {}
}


// Party
message PartyData {
    option (routines.entity_type) = "Party";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: partyId
    // fields
    string party_id = 1 [json_name = "party_id", (google.api.graphql.relay_options).id = true];
    string party_type_id = 2 [json_name = "party_type_id"];
    string external_id = 3 [json_name = "external_id"];
    string preferred_currency_uom_id = 4 [json_name = "preferred_currency_uom_id"];
    string description = 5 [json_name = "description"];
    string status_id = 6 [json_name = "status_id"];
    google.protobuf.Timestamp created_date = 7 [json_name = "created_date"];
    string created_by_user_login = 8 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 9 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 10 [json_name = "last_modified_by_user_login"];
    string data_source_id = 11 [json_name = "data_source_id"];
    routines.Indicator is_unread = 12 [json_name = "is_unread"];
    google.protobuf.Timestamp last_updated_tx_stamp = 13 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 14 [json_name = "created_tx_stamp"];
    string tenant_id = 15 [json_name = "tenant_id"];
    
    
    // relations
    repeated AcctgTransData acctg_trans = 23 [json_name = "acctg_trans"]; // ref(AcctgTrans): partyId
    repeated AcctgTransEntryData acctg_trans_entry = 24 [json_name = "acctg_trans_entry"]; // ref(AcctgTransEntry): partyId
    repeated AgreementData from_agreement = 26 [json_name = "from_agreement"]; // ref(FromAgreement): partyId
    repeated AgreementData to_agreement = 27 [json_name = "to_agreement"]; // ref(ToAgreement): partyId
    repeated BillingAccountRoleData billing_account_role = 30 [json_name = "billing_account_role"]; // ref(BillingAccountRole): partyId
    repeated CarrierShipmentBoxTypeData carrier_shipment_box_type = 33 [json_name = "carrier_shipment_box_type"]; // ref(CarrierShipmentBoxType): partyId
    repeated CarrierShipmentMethodData carrier_shipment_method = 34 [json_name = "carrier_shipment_method"]; // ref(CarrierShipmentMethod): partyId
    repeated CommunicationEventData to_communication_event = 35 [json_name = "to_communication_event"]; // ref(ToCommunicationEvent): partyId
    repeated CommunicationEventData from_communication_event = 36 [json_name = "from_communication_event"]; // ref(FromCommunicationEvent): partyId
    repeated CommunicationEventRoleData communication_event_role = 37 [json_name = "communication_event_role"]; // ref(CommunicationEventRole): partyId
    repeated ContentRoleData content_role = 43 [json_name = "content_role"]; // ref(ContentRole): partyId
    repeated CustRequestData from_cust_request = 45 [json_name = "from_cust_request"]; // ref(FromCustRequest): partyId
    repeated CustRequestTypeData cust_request_type = 47 [json_name = "cust_request_type"]; // ref(CustRequestType): partyId
    repeated FacilityData owner_facility = 60 [json_name = "owner_facility"]; // ref(OwnerFacility): partyId
    repeated FinAccountData organization_fin_account = 64 [json_name = "organization_fin_account"]; // ref(OrganizationFinAccount): partyId
    repeated FinAccountData owner_fin_account = 65 [json_name = "owner_fin_account"]; // ref(OwnerFinAccount): partyId
    repeated FinAccountRoleData fin_account_role = 66 [json_name = "fin_account_role"]; // ref(FinAccountRole): partyId
    repeated FinAccountTransData fin_account_trans = 67 [json_name = "fin_account_trans"]; // ref(FinAccountTrans): partyId
    repeated FinAccountTransData performed_by_fin_account_trans = 68 [json_name = "performed_by_fin_account_trans"]; // ref(PerformedByFinAccountTrans): partyId
    repeated FixedAssetData fixed_asset = 70 [json_name = "fixed_asset"]; // ref(FixedAsset): partyId
    repeated FixedAssetRegistrationData gov_agency_fixed_asset_registration = 71 [json_name = "gov_agency_fixed_asset_registration"]; // ref(GovAgencyFixedAssetRegistration): partyId
    repeated GlAccountTypeDefaultData organization_gl_account_type_default = 77 [json_name = "organization_gl_account_type_default"]; // ref(OrganizationGlAccountTypeDefault): partyId
    repeated InventoryItemData inventory_item = 80 [json_name = "inventory_item"]; // ref(InventoryItem): partyId
    repeated InventoryItemData owner_inventory_item = 81 [json_name = "owner_inventory_item"]; // ref(OwnerInventoryItem): partyId
    repeated InvoiceData from_invoice = 82 [json_name = "from_invoice"]; // ref(FromInvoice): partyId
    repeated InvoiceData invoice = 83 [json_name = "invoice"]; // ref(Invoice): partyId
    repeated InvoiceItemData tax_authority_invoice_item = 84 [json_name = "tax_authority_invoice_item"]; // ref(TaxAuthorityInvoiceItem): partyId
    repeated InvoiceItemData override_org_invoice_item = 85 [json_name = "override_org_invoice_item"]; // ref(OverrideOrgInvoiceItem): partyId
    repeated InvoiceItemTypeGlAccountData organization_invoice_item_type_gl_account = 88 [json_name = "organization_invoice_item_type_gl_account"]; // ref(OrganizationInvoiceItemTypeGlAccount): partyId
    repeated InvoiceRoleData invoice_role = 89 [json_name = "invoice_role"]; // ref(InvoiceRole): partyId
    repeated OrderItemShipGroupData supplier_order_item_ship_group = 96 [json_name = "supplier_order_item_ship_group"]; // ref(SupplierOrderItemShipGroup): partyId
    repeated OrderItemShipGroupData vendor_order_item_ship_group = 97 [json_name = "vendor_order_item_ship_group"]; // ref(VendorOrderItemShipGroup): partyId
    repeated OrderItemShipGroupData carrier_order_item_ship_group = 98 [json_name = "carrier_order_item_ship_group"]; // ref(CarrierOrderItemShipGroup): partyId
    repeated OrderRoleData order_role = 99 [json_name = "order_role"]; // ref(OrderRole): partyId
    PartyAcctgPreferenceData party_acctg_preference = 100 [json_name = "party_acctg_preference"]; // ref(PartyAcctgPreference): partyId
    repeated PartyContactMechData party_contact_mech = 107 [json_name = "party_contact_mech"]; // ref(PartyContactMech): partyId
    repeated PartyContactMechPurposeData party_contact_mech_purpose = 108 [json_name = "party_contact_mech_purpose"]; // ref(PartyContactMechPurpose): partyId
    repeated PartyGeoPointData party_geo_point = 112 [json_name = "party_geo_point"]; // ref(PartyGeoPoint): partyId
    PartyGroupData party_group = 115 [json_name = "party_group"]; // ref(PartyGroup): partyId
    repeated PartyIdentificationData party_identification = 117 [json_name = "party_identification"]; // ref(PartyIdentification): partyId
    repeated PartyRateData party_rate = 126 [json_name = "party_rate"]; // ref(PartyRate): partyId
    repeated PartyRelationshipData from_party_relationship = 127 [json_name = "from_party_relationship"]; // ref(FromPartyRelationship): partyId
    repeated PartyRelationshipData to_party_relationship = 128 [json_name = "to_party_relationship"]; // ref(ToPartyRelationship): partyId
    repeated PartyRoleData party_role = 130 [json_name = "party_role"]; // ref(PartyRole): partyId
    repeated PartyStatusData party_status = 132 [json_name = "party_status"]; // ref(PartyStatus): partyId
    repeated PartyTaxAuthInfoData party_tax_auth_info = 133 [json_name = "party_tax_auth_info"]; // ref(PartyTaxAuthInfo): partyId
    repeated PaymentData from_payment = 134 [json_name = "from_payment"]; // ref(FromPayment): partyId
    repeated PaymentData to_payment = 135 [json_name = "to_payment"]; // ref(ToPayment): partyId
    repeated PaymentGlAccountTypeMapData payment_gl_account_type_map = 136 [json_name = "payment_gl_account_type_map"]; // ref(PaymentGlAccountTypeMap): partyId
    repeated PaymentMethodData payment_method = 137 [json_name = "payment_method"]; // ref(PaymentMethod): partyId
    repeated PaymentMethodTypeGlAccountData organization_payment_method_type_gl_account = 138 [json_name = "organization_payment_method_type_gl_account"]; // ref(OrganizationPaymentMethodTypeGlAccount): partyId
    PersonData person = 144 [json_name = "person"]; // ref(Person): partyId
    repeated ProductCategoryRoleData product_category_role = 149 [json_name = "product_category_role"]; // ref(ProductCategoryRole): partyId
    repeated ProductPriceData tax_authority_product_price = 151 [json_name = "tax_authority_product_price"]; // ref(TaxAuthorityProductPrice): partyId
    repeated ProductPromoData product_promo = 152 [json_name = "product_promo"]; // ref(ProductPromo): partyId
    repeated ProductStoreData product_store = 156 [json_name = "product_store"]; // ref(ProductStore): partyId
    repeated ProductStoreRoleData product_store_role = 158 [json_name = "product_store_role"]; // ref(ProductStoreRole): partyId
    repeated ProductStoreShipmentMethData product_store_shipment_meth = 159 [json_name = "product_store_shipment_meth"]; // ref(ProductStoreShipmentMeth): partyId
    repeated QuoteData quote = 163 [json_name = "quote"]; // ref(Quote): partyId
    repeated QuoteRoleData quote_role = 164 [json_name = "quote_role"]; // ref(QuoteRole): partyId
    repeated RateAmountData rate_amount = 165 [json_name = "rate_amount"]; // ref(RateAmount): partyId
    repeated ReturnHeaderData return_header = 169 [json_name = "return_header"]; // ref(ReturnHeader): partyId
    repeated ReturnHeaderData to_return_header = 170 [json_name = "to_return_header"]; // ref(ToReturnHeader): partyId
    repeated ShipmentData to_shipment = 177 [json_name = "to_shipment"]; // ref(ToShipment): partyId
    repeated ShipmentData from_shipment = 178 [json_name = "from_shipment"]; // ref(FromShipment): partyId
    repeated ShipmentCostEstimateData shipment_cost_estimate = 179 [json_name = "shipment_cost_estimate"]; // ref(ShipmentCostEstimate): partyId
    repeated ShipmentRouteSegmentData carrier_shipment_route_segment = 181 [json_name = "carrier_shipment_route_segment"]; // ref(CarrierShipmentRouteSegment): partyId
    repeated ShoppingListData shopping_list = 182 [json_name = "shopping_list"]; // ref(ShoppingList): partyId
    repeated SupplierProductData supplier_product = 185 [json_name = "supplier_product"]; // ref(SupplierProduct): partyId
    repeated SupplierProductFeatureData supplier_product_feature = 186 [json_name = "supplier_product_feature"]; // ref(SupplierProductFeature): partyId
    repeated TaxAuthorityData tax_auth_tax_authority = 188 [json_name = "tax_auth_tax_authority"]; // ref(TaxAuthTaxAuthority): partyId
    repeated TaxAuthorityGlAccountData organization_tax_authority_gl_account = 189 [json_name = "organization_tax_authority_gl_account"]; // ref(OrganizationTaxAuthorityGlAccount): partyId
    repeated WorkEffortPartyAssignmentData work_effort_party_assignment = 202 [json_name = "work_effort_party_assignment"]; // ref(WorkEffortPartyAssignment): partyId
    TenantData tenant = 203 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 204;
    map<string, google.protobuf.Any> attachments = 205;
}



// The Party service definition.
service PartyService {
    rpc Create(PartyData) returns (routines.Response) {}
    rpc StoreOrUpdate(PartyFlatData) returns (routines.Response) {}
    rpc Update(PartyFlatData) returns (routines.Response) {}
    rpc Delete(PartyFlatData) returns (routines.Response) {}
    rpc Find(PartyFlatData) returns (PartyFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PartyFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PartyData) {}
    rpc FindList(routines.QueryList) returns (stream PartyData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PartyData) {}
}


// Person
message PersonData {
    option (routines.entity_type) = "Person";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: partyId
    // fields
    string party_id = 1 [json_name = "party_id", (google.api.graphql.relay_options).id = true];
    string salutation = 2 [json_name = "salutation"];
    string first_name = 3 [json_name = "first_name"];
    string middle_name = 4 [json_name = "middle_name"];
    string last_name = 5 [json_name = "last_name"];
    string personal_title = 6 [json_name = "personal_title"];
    string suffix = 7 [json_name = "suffix"];
    string nickname = 8 [json_name = "nickname"];
    string first_name_local = 9 [json_name = "first_name_local"];
    string middle_name_local = 10 [json_name = "middle_name_local"];
    string last_name_local = 11 [json_name = "last_name_local"];
    string other_local = 12 [json_name = "other_local"];
    string member_id = 13 [json_name = "member_id"];
    routines.Indicator gender = 14 [json_name = "gender"];
    google.type.Date birth_date = 15 [json_name = "birth_date"];
    google.type.Date deceased_date = 16 [json_name = "deceased_date"];
    double height = 17 [json_name = "height"];
    double weight = 18 [json_name = "weight"];
    string mothers_maiden_name = 19 [json_name = "mothers_maiden_name"];
    string marital_status_enum_id = 20 [json_name = "marital_status_enum_id"];
    string social_security_number = 21 [json_name = "social_security_number"];
    string passport_number = 22 [json_name = "passport_number"];
    google.type.Date passport_expire_date = 23 [json_name = "passport_expire_date"];
    double total_years_work_experience = 24 [json_name = "total_years_work_experience"];
    string comments = 25 [json_name = "comments"];
    string employment_status_enum_id = 26 [json_name = "employment_status_enum_id"];
    string residence_status_enum_id = 27 [json_name = "residence_status_enum_id"];
    string occupation = 28 [json_name = "occupation"];
    int64 years_with_employer = 29 [json_name = "years_with_employer"];
    int64 months_with_employer = 30 [json_name = "months_with_employer"];
    routines.Indicator existing_customer = 31 [json_name = "existing_customer"];
    string card_id = 32 [json_name = "card_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 33 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 34 [json_name = "created_tx_stamp"];
    string tenant_id = 35 [json_name = "tenant_id"];
    
    
    // relations
    PartyData party = 36 [json_name = "party"]; // ref(Party): partyId
    repeated PartyContactMechData party_contact_mech = 40 [json_name = "party_contact_mech"]; // ref(PartyContactMech): partyId
    repeated PartyContactMechPurposeData party_contact_mech_purpose = 41 [json_name = "party_contact_mech_purpose"]; // ref(PartyContactMechPurpose): partyId
    repeated ProductStoreRoleData product_store_role = 44 [json_name = "product_store_role"]; // ref(ProductStoreRole): partyId
    repeated ShipmentData to_shipment = 45 [json_name = "to_shipment"]; // ref(ToShipment): partyId
    repeated ShipmentData from_shipment = 46 [json_name = "from_shipment"]; // ref(FromShipment): partyId
    repeated ShipmentRouteSegmentData carrier_shipment_route_segment = 47 [json_name = "carrier_shipment_route_segment"]; // ref(CarrierShipmentRouteSegment): partyId
    TenantData tenant = 50 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 51;
    map<string, google.protobuf.Any> attachments = 52;
}



// The Person service definition.
service PersonService {
    rpc Create(PersonData) returns (routines.Response) {}
    rpc StoreOrUpdate(PersonFlatData) returns (routines.Response) {}
    rpc Update(PersonFlatData) returns (routines.Response) {}
    rpc Delete(PersonFlatData) returns (routines.Response) {}
    rpc Find(PersonFlatData) returns (PersonFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PersonFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PersonData) {}
    rpc FindList(routines.QueryList) returns (stream PersonData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PersonData) {}
}


// Party Group
message PartyGroupData {
    option (routines.entity_type) = "PartyGroup";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: partyId
    // fields
    string party_id = 1 [json_name = "party_id", (google.api.graphql.relay_options).id = true];
    string group_name = 2 [json_name = "group_name"];
    string group_name_local = 3 [json_name = "group_name_local"];
    string office_site_name = 4 [json_name = "office_site_name"];
    routines.Currency annual_revenue = 5 [json_name = "annual_revenue"];
    int64 num_employees = 6 [json_name = "num_employees"];
    string ticker_symbol = 7 [json_name = "ticker_symbol"];
    string comments = 8 [json_name = "comments"];
    string logo_image_url = 9 [json_name = "logo_image_url"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 11 [json_name = "created_tx_stamp"];
    string tenant_id = 12 [json_name = "tenant_id"];
    
    
    // relations
    PartyData party = 13 [json_name = "party"]; // ref(Party): partyId
    repeated PartyContactMechData party_contact_mech = 15 [json_name = "party_contact_mech"]; // ref(PartyContactMech): partyId
    repeated PartyContactMechPurposeData party_contact_mech_purpose = 16 [json_name = "party_contact_mech_purpose"]; // ref(PartyContactMechPurpose): partyId
    repeated ProductStoreRoleData product_store_role = 19 [json_name = "product_store_role"]; // ref(ProductStoreRole): partyId
    repeated ShipmentData to_shipment = 20 [json_name = "to_shipment"]; // ref(ToShipment): partyId
    repeated ShipmentData from_shipment = 21 [json_name = "from_shipment"]; // ref(FromShipment): partyId
    repeated ShipmentRouteSegmentData carrier_shipment_route_segment = 22 [json_name = "carrier_shipment_route_segment"]; // ref(CarrierShipmentRouteSegment): partyId
    TenantData tenant = 25 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 26;
    map<string, google.protobuf.Any> attachments = 27;
}



// The Party Group service definition.
service PartyGroupService {
    rpc Create(PartyGroupData) returns (routines.Response) {}
    rpc StoreOrUpdate(PartyGroupFlatData) returns (routines.Response) {}
    rpc Update(PartyGroupFlatData) returns (routines.Response) {}
    rpc Delete(PartyGroupFlatData) returns (routines.Response) {}
    rpc Find(PartyGroupFlatData) returns (PartyGroupFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PartyGroupFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PartyGroupData) {}
    rpc FindList(routines.QueryList) returns (stream PartyGroupData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PartyGroupData) {}
}


// UserLogin
message UserLoginData {
    option (routines.entity_type) = "UserLogin";
    option (routines.keys).keys = "user_login_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: userLoginId
    // fields
    string user_login_id = 1 [json_name = "user_login_id", (google.api.graphql.relay_options).id = true];
    string current_password = 2 [json_name = "current_password"];
    string password_hint = 3 [json_name = "password_hint"];
    routines.Indicator is_system = 4 [json_name = "is_system"];
    routines.Indicator enabled = 5 [json_name = "enabled"];
    routines.Indicator has_logged_out = 6 [json_name = "has_logged_out"];
    routines.Indicator require_password_change = 7 [json_name = "require_password_change"];
    string last_currency_uom = 8 [json_name = "last_currency_uom"];
    string last_locale = 9 [json_name = "last_locale"];
    string last_time_zone = 10 [json_name = "last_time_zone"];
    google.protobuf.Timestamp disabled_date_time = 11 [json_name = "disabled_date_time"];
    int64 successive_failed_logins = 12 [json_name = "successive_failed_logins"];
    string external_auth_id = 13 [json_name = "external_auth_id"];
    string user_ldap_dn = 14 [json_name = "user_ldap_dn"];
    string disabled_by = 15 [json_name = "disabled_by"];
    google.protobuf.Timestamp last_updated_tx_stamp = 16 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 17 [json_name = "created_tx_stamp"];
    string party_id = 18 [json_name = "party_id"];
    string tenant_id = 19 [json_name = "tenant_id"];
    
    
    // relations
    PartyData party = 20 [json_name = "party"]; // ref(Party): partyId
    PersonData person = 21 [json_name = "person"]; // ref(Person): partyId
    PartyGroupData party_group = 22 [json_name = "party_group"]; // ref(PartyGroup): partyId
    repeated BudgetStatusData change_by_budget_status = 27 [json_name = "change_by_budget_status"]; // ref(ChangeByBudgetStatus): userLoginId
    repeated ContentData created_by_content = 31 [json_name = "created_by_content"]; // ref(CreatedByContent): userLoginId
    repeated ContentData last_modified_by_content = 32 [json_name = "last_modified_by_content"]; // ref(LastModifiedByContent): userLoginId
    repeated ContentAssocData created_by_content_assoc = 33 [json_name = "created_by_content_assoc"]; // ref(CreatedByContentAssoc): userLoginId
    repeated ContentAssocData last_modified_by_content_assoc = 34 [json_name = "last_modified_by_content_assoc"]; // ref(LastModifiedByContentAssoc): userLoginId
    repeated DataResourceData created_by_data_resource = 36 [json_name = "created_by_data_resource"]; // ref(CreatedByDataResource): userLoginId
    repeated DataResourceData last_modified_by_data_resource = 37 [json_name = "last_modified_by_data_resource"]; // ref(LastModifiedByDataResource): userLoginId
    repeated FinAccountStatusData fin_account_status = 40 [json_name = "fin_account_status"]; // ref(FinAccountStatus): userLoginId
    repeated InvoiceStatusData change_by_invoice_status = 42 [json_name = "change_by_invoice_status"]; // ref(ChangeByInvoiceStatus): userLoginId
    repeated ItemIssuanceData issued_by_item_issuance = 43 [json_name = "issued_by_item_issuance"]; // ref(IssuedByItemIssuance): userLoginId
    repeated JobSandboxData auth_job_sandbox = 44 [json_name = "auth_job_sandbox"]; // ref(AuthJobSandbox): userLoginId
    repeated JobSandboxData run_as_job_sandbox = 45 [json_name = "run_as_job_sandbox"]; // ref(RunAsJobSandbox): userLoginId
    repeated OrderAdjustmentData order_adjustment = 47 [json_name = "order_adjustment"]; // ref(OrderAdjustment): userLoginId
    repeated OrderHeaderData created_by_order_header = 48 [json_name = "created_by_order_header"]; // ref(CreatedByOrderHeader): userLoginId
    repeated OrderItemData dont_cancel_set_order_item = 49 [json_name = "dont_cancel_set_order_item"]; // ref(DontCancelSetOrderItem): userLoginId
    repeated OrderItemData change_by_order_item = 50 [json_name = "change_by_order_item"]; // ref(ChangeByOrderItem): userLoginId
    repeated OrderPaymentPreferenceData order_payment_preference = 52 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): userLoginId
    repeated OrderStatusData order_status = 53 [json_name = "order_status"]; // ref(OrderStatus): userLoginId
    repeated PartyData created_by_party = 54 [json_name = "created_by_party"]; // ref(CreatedByParty): userLoginId
    repeated PartyData last_modified_by_party = 55 [json_name = "last_modified_by_party"]; // ref(LastModifiedByParty): userLoginId
    repeated PartyStatusData change_by_party_status = 56 [json_name = "change_by_party_status"]; // ref(ChangeByPartyStatus): userLoginId
    repeated ProductData created_by_product = 60 [json_name = "created_by_product"]; // ref(CreatedByProduct): userLoginId
    repeated ProductData last_modified_by_product = 61 [json_name = "last_modified_by_product"]; // ref(LastModifiedByProduct): userLoginId
    repeated ProductFeaturePriceData created_by_product_feature_price = 62 [json_name = "created_by_product_feature_price"]; // ref(CreatedByProductFeaturePrice): userLoginId
    repeated ProductFeaturePriceData last_modified_by_product_feature_price = 63 [json_name = "last_modified_by_product_feature_price"]; // ref(LastModifiedByProductFeaturePrice): userLoginId
    repeated ProductPriceData created_by_product_price = 64 [json_name = "created_by_product_price"]; // ref(CreatedByProductPrice): userLoginId
    repeated ProductPriceData last_modified_by_product_price = 65 [json_name = "last_modified_by_product_price"]; // ref(LastModifiedByProductPrice): userLoginId
    repeated ProductPromoData created_by_product_promo = 67 [json_name = "created_by_product_promo"]; // ref(CreatedByProductPromo): userLoginId
    repeated ProductPromoData last_modified_by_product_promo = 68 [json_name = "last_modified_by_product_promo"]; // ref(LastModifiedByProductPromo): userLoginId
    repeated ProductPromoCodeData created_by_product_promo_code = 69 [json_name = "created_by_product_promo_code"]; // ref(CreatedByProductPromoCode): userLoginId
    repeated ProductPromoCodeData last_modified_by_product_promo_code = 70 [json_name = "last_modified_by_product_promo_code"]; // ref(LastModifiedByProductPromoCode): userLoginId
    repeated ProductReviewData product_review = 71 [json_name = "product_review"]; // ref(ProductReview): userLoginId
    repeated QuoteAdjustmentData quote_adjustment = 72 [json_name = "quote_adjustment"]; // ref(QuoteAdjustment): userLoginId
    repeated ReturnHeaderData return_header = 75 [json_name = "return_header"]; // ref(ReturnHeader): userLoginId
    repeated ShipmentReceiptData shipment_receipt = 82 [json_name = "shipment_receipt"]; // ref(ShipmentReceipt): userLoginId
    repeated ShipmentStatusData change_by_shipment_status = 83 [json_name = "change_by_shipment_status"]; // ref(ChangeByShipmentStatus): userLoginId
    repeated UserLoginSecurityGroupData user_login_security_group = 89 [json_name = "user_login_security_group"]; // ref(UserLoginSecurityGroup): userLoginId
    repeated WorkEffortPartyAssignmentData assigned_by_work_effort_party_assignment = 93 [json_name = "assigned_by_work_effort_party_assignment"]; // ref(AssignedByWorkEffortPartyAssignment): userLoginId
    TenantData tenant = 97 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 98;
    map<string, google.protobuf.Any> attachments = 99;
}



// The UserLogin service definition.
service UserLoginService {
    rpc Create(UserLoginData) returns (routines.Response) {}
    rpc StoreOrUpdate(UserLoginFlatData) returns (routines.Response) {}
    rpc Update(UserLoginFlatData) returns (routines.Response) {}
    rpc Delete(UserLoginFlatData) returns (routines.Response) {}
    rpc Find(UserLoginFlatData) returns (UserLoginFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (UserLoginFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream UserLoginData) {}
    rpc FindList(routines.QueryList) returns (stream UserLoginData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream UserLoginData) {}
}


// Party Relationship
message PartyRelationshipData {
    option (routines.entity_type) = "PartyRelationship";
    option (routines.keys).keys = "party_id_from, party_id_to, role_type_id_from, role_type_id_to, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: partyIdFrom, partyIdTo, roleTypeIdFrom, roleTypeIdTo, fromDate
    // fields
    string party_id_from = 1 [json_name = "party_id_from"];
    string party_id_to = 2 [json_name = "party_id_to"];
    string role_type_id_from = 3 [json_name = "role_type_id_from"];
    string role_type_id_to = 4 [json_name = "role_type_id_to"];
    google.protobuf.Timestamp from_date = 5 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 6 [json_name = "thru_date"];
    string status_id = 7 [json_name = "status_id"];
    string relationship_name = 8 [json_name = "relationship_name"];
    string security_group_id = 9 [json_name = "security_group_id"];
    string priority_type_id = 10 [json_name = "priority_type_id"];
    string party_relationship_type_id = 11 [json_name = "party_relationship_type_id"];
    string permissions_enum_id = 12 [json_name = "permissions_enum_id"];
    string position_title = 13 [json_name = "position_title"];
    string comments = 14 [json_name = "comments"];
    google.protobuf.Timestamp last_updated_tx_stamp = 15 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 16 [json_name = "created_tx_stamp"];
    string id = 17 [json_name = "id", (google.api.graphql.relay_options).id = true];
    string tenant_id = 18 [json_name = "tenant_id"];
    
    
    // relations
    PartyData from_party = 19 [json_name = "from_party"]; // ref(FromParty): partyIdFrom
    PartyData to_party = 20 [json_name = "to_party"]; // ref(ToParty): partyIdTo
    PartyRoleData from_party_role = 23 [json_name = "from_party_role"]; // ref(FromPartyRole): partyIdFrom + roleTypeIdFrom
    PartyRoleData to_party_role = 24 [json_name = "to_party_role"]; // ref(ToPartyRole): partyIdTo + roleTypeIdTo
    SecurityGroupData security_group = 28 [json_name = "security_group"]; // ref(SecurityGroup): securityGroupId
    TenantData tenant = 29 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 30;
    map<string, google.protobuf.Any> attachments = 31;
}



// The Party Relationship service definition.
service PartyRelationshipService {
    rpc Create(PartyRelationshipData) returns (routines.Response) {}
    rpc StoreOrUpdate(PartyRelationshipFlatData) returns (routines.Response) {}
    rpc Update(PartyRelationshipFlatData) returns (routines.Response) {}
    rpc Delete(PartyRelationshipFlatData) returns (routines.Response) {}
    rpc Find(PartyRelationshipFlatData) returns (PartyRelationshipFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PartyRelationshipFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PartyRelationshipData) {}
    rpc FindList(routines.QueryList) returns (stream PartyRelationshipData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PartyRelationshipData) {}
}


// Billing Account
message BillingAccountData {
    option (routines.entity_type) = "BillingAccount";
    option (routines.keys).keys = "billing_account_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: billingAccountId
    // fields
    string billing_account_id = 1 [json_name = "billing_account_id", (google.api.graphql.relay_options).id = true];
    routines.Currency account_limit = 2 [json_name = "account_limit"];
    string account_currency_uom_id = 3 [json_name = "account_currency_uom_id"];
    string contact_mech_id = 4 [json_name = "contact_mech_id"];
    google.protobuf.Timestamp from_date = 5 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 6 [json_name = "thru_date"];
    string description = 7 [json_name = "description"];
    string external_account_id = 8 [json_name = "external_account_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 9 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 10 [json_name = "created_tx_stamp"];
    string tenant_id = 11 [json_name = "tenant_id"];
    
    
    // relations
    ContactMechData contact_mech = 12 [json_name = "contact_mech"]; // ref(ContactMech): contactMechId
    PostalAddressData postal_address = 14 [json_name = "postal_address"]; // ref(PostalAddress): contactMechId
    repeated BillingAccountRoleData billing_account_role = 15 [json_name = "billing_account_role"]; // ref(BillingAccountRole): billingAccountId
    repeated InvoiceData invoice = 17 [json_name = "invoice"]; // ref(Invoice): billingAccountId
    repeated OrderHeaderData order_header = 18 [json_name = "order_header"]; // ref(OrderHeader): billingAccountId
    repeated PaymentApplicationData payment_application = 19 [json_name = "payment_application"]; // ref(PaymentApplication): billingAccountId
    repeated ReturnHeaderData return_header = 20 [json_name = "return_header"]; // ref(ReturnHeader): billingAccountId
    TenantData tenant = 22 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 23;
    map<string, google.protobuf.Any> attachments = 24;
}



// The Billing Account service definition.
service BillingAccountService {
    rpc Create(BillingAccountData) returns (routines.Response) {}
    rpc StoreOrUpdate(BillingAccountFlatData) returns (routines.Response) {}
    rpc Update(BillingAccountFlatData) returns (routines.Response) {}
    rpc Delete(BillingAccountFlatData) returns (routines.Response) {}
    rpc Find(BillingAccountFlatData) returns (BillingAccountFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (BillingAccountFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream BillingAccountData) {}
    rpc FindList(routines.QueryList) returns (stream BillingAccountData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream BillingAccountData) {}
}


// Financial Account
message FinAccountData {
    option (routines.entity_type) = "FinAccount";
    option (routines.keys).keys = "fin_account_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: finAccountId
    // fields
    string fin_account_id = 1 [json_name = "fin_account_id", (google.api.graphql.relay_options).id = true];
    string fin_account_type_id = 2 [json_name = "fin_account_type_id"];
    string status_id = 3 [json_name = "status_id"];
    string fin_account_name = 4 [json_name = "fin_account_name"];
    string fin_account_code = 5 [json_name = "fin_account_code"];
    string fin_account_pin = 6 [json_name = "fin_account_pin"];
    string currency_uom_id = 7 [json_name = "currency_uom_id"];
    string organization_party_id = 8 [json_name = "organization_party_id"];
    string owner_party_id = 9 [json_name = "owner_party_id"];
    string post_to_gl_account_id = 10 [json_name = "post_to_gl_account_id"];
    google.protobuf.Timestamp from_date = 11 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 12 [json_name = "thru_date"];
    routines.Indicator is_refundable = 13 [json_name = "is_refundable"];
    string replenish_payment_id = 14 [json_name = "replenish_payment_id"];
    routines.Currency replenish_level = 15 [json_name = "replenish_level"];
    routines.Currency actual_balance = 16 [json_name = "actual_balance"];
    routines.Currency available_balance = 17 [json_name = "available_balance"];
    google.protobuf.Timestamp last_updated_tx_stamp = 18 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 19 [json_name = "created_tx_stamp"];
    string tenant_id = 20 [json_name = "tenant_id"];
    
    
    // relations
    PartyData organization_party = 23 [json_name = "organization_party"]; // ref(OrganizationParty): organizationPartyId
    PartyData owner_party = 24 [json_name = "owner_party"]; // ref(OwnerParty): ownerPartyId
    GlAccountData post_to_gl_account = 25 [json_name = "post_to_gl_account"]; // ref(PostToGlAccount): postToGlAccountId
    PaymentMethodData replenish_payment_method = 26 [json_name = "replenish_payment_method"]; // ref(ReplenishPaymentMethod): replenishPaymentId
    repeated FinAccountRoleData fin_account_role = 30 [json_name = "fin_account_role"]; // ref(FinAccountRole): finAccountId
    repeated FinAccountStatusData fin_account_status = 31 [json_name = "fin_account_status"]; // ref(FinAccountStatus): finAccountId
    repeated FinAccountTransData fin_account_trans = 32 [json_name = "fin_account_trans"]; // ref(FinAccountTrans): finAccountId
    repeated OrderPaymentPreferenceData order_payment_preference = 33 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): finAccountId
    repeated PaymentMethodData payment_method = 34 [json_name = "payment_method"]; // ref(PaymentMethod): finAccountId
    repeated ReturnHeaderData return_header = 35 [json_name = "return_header"]; // ref(ReturnHeader): finAccountId
    TenantData tenant = 36 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 37;
    map<string, google.protobuf.Any> attachments = 38;
}



// The Financial Account service definition.
service FinAccountService {
    rpc Create(FinAccountData) returns (routines.Response) {}
    rpc StoreOrUpdate(FinAccountFlatData) returns (routines.Response) {}
    rpc Update(FinAccountFlatData) returns (routines.Response) {}
    rpc Delete(FinAccountFlatData) returns (routines.Response) {}
    rpc Find(FinAccountFlatData) returns (FinAccountFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (FinAccountFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream FinAccountData) {}
    rpc FindList(routines.QueryList) returns (stream FinAccountData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream FinAccountData) {}
}


// Quote
message QuoteData {
    option (routines.entity_type) = "Quote";
    option (routines.keys).keys = "quote_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: quoteId
    // fields
    string quote_id = 1 [json_name = "quote_id", (google.api.graphql.relay_options).id = true];
    string quote_type_id = 2 [json_name = "quote_type_id"];
    string party_id = 3 [json_name = "party_id"];
    google.protobuf.Timestamp issue_date = 4 [json_name = "issue_date"];
    string status_id = 5 [json_name = "status_id"];
    string currency_uom_id = 6 [json_name = "currency_uom_id"];
    string product_store_id = 7 [json_name = "product_store_id"];
    string sales_channel_enum_id = 8 [json_name = "sales_channel_enum_id"];
    google.protobuf.Timestamp valid_from_date = 9 [json_name = "valid_from_date"];
    google.protobuf.Timestamp valid_thru_date = 10 [json_name = "valid_thru_date"];
    string quote_name = 11 [json_name = "quote_name"];
    string description = 12 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 13 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 14 [json_name = "created_tx_stamp"];
    string tenant_id = 15 [json_name = "tenant_id"];
    
    
    // relations
    PartyData party = 18 [json_name = "party"]; // ref(Party): partyId
    ProductStoreData product_store = 21 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    repeated QuoteAdjustmentData quote_adjustment = 24 [json_name = "quote_adjustment"]; // ref(QuoteAdjustment): quoteId
    repeated QuoteItemData quote_item = 27 [json_name = "quote_item"]; // ref(QuoteItem): quoteId
    repeated QuoteRoleData quote_role = 29 [json_name = "quote_role"]; // ref(QuoteRole): quoteId
    repeated QuoteTermData quote_term = 30 [json_name = "quote_term"]; // ref(QuoteTerm): quoteId
    TenantData tenant = 33 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 34;
    map<string, google.protobuf.Any> attachments = 35;
}



// The Quote service definition.
service QuoteService {
    rpc Create(QuoteData) returns (routines.Response) {}
    rpc StoreOrUpdate(QuoteFlatData) returns (routines.Response) {}
    rpc Update(QuoteFlatData) returns (routines.Response) {}
    rpc Delete(QuoteFlatData) returns (routines.Response) {}
    rpc Find(QuoteFlatData) returns (QuoteFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (QuoteFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream QuoteData) {}
    rpc FindList(routines.QueryList) returns (stream QuoteData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream QuoteData) {}
}


// Fixed Asset
message FixedAssetData {
    option (routines.entity_type) = "FixedAsset";
    option (routines.keys).keys = "fixed_asset_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: fixedAssetId
    // fields
    string fixed_asset_id = 1 [json_name = "fixed_asset_id", (google.api.graphql.relay_options).id = true];
    string fixed_asset_type_id = 2 [json_name = "fixed_asset_type_id"];
    string parent_fixed_asset_id = 3 [json_name = "parent_fixed_asset_id"];
    string instance_of_product_id = 4 [json_name = "instance_of_product_id"];
    string class_enum_id = 5 [json_name = "class_enum_id"];
    string party_id = 6 [json_name = "party_id"];
    string role_type_id = 7 [json_name = "role_type_id"];
    string fixed_asset_name = 8 [json_name = "fixed_asset_name"];
    string acquire_order_id = 9 [json_name = "acquire_order_id"];
    string acquire_order_item_seq_id = 10 [json_name = "acquire_order_item_seq_id"];
    google.protobuf.Timestamp date_acquired = 11 [json_name = "date_acquired"];
    google.protobuf.Timestamp date_last_serviced = 12 [json_name = "date_last_serviced"];
    google.protobuf.Timestamp date_next_service = 13 [json_name = "date_next_service"];
    google.type.Date expected_end_of_life = 14 [json_name = "expected_end_of_life"];
    google.type.Date actual_end_of_life = 15 [json_name = "actual_end_of_life"];
    routines.FixedPoint production_capacity = 16 [json_name = "production_capacity"];
    string uom_id = 17 [json_name = "uom_id"];
    string calendar_id = 18 [json_name = "calendar_id"];
    string serial_number = 19 [json_name = "serial_number"];
    string located_at_facility_id = 20 [json_name = "located_at_facility_id"];
    string located_at_location_seq_id = 21 [json_name = "located_at_location_seq_id"];
    routines.Currency salvage_value = 22 [json_name = "salvage_value"];
    routines.Currency depreciation = 23 [json_name = "depreciation"];
    routines.Currency purchase_cost = 24 [json_name = "purchase_cost"];
    string purchase_cost_uom_id = 25 [json_name = "purchase_cost_uom_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 26 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 27 [json_name = "created_tx_stamp"];
    string tenant_id = 28 [json_name = "tenant_id"];
    
    
    // relations
    FixedAssetData parent_fixed_asset = 31 [json_name = "parent_fixed_asset"]; // ref(ParentFixedAsset): parentFixedAssetId
    ProductData instance_of_product = 32 [json_name = "instance_of_product"]; // ref(InstanceOfProduct): instanceOfProductId
    PartyData party = 34 [json_name = "party"]; // ref(Party): partyId
    PartyRoleData party_role = 36 [json_name = "party_role"]; // ref(PartyRole): partyId + roleTypeId
    OrderHeaderData acquire_order_header = 37 [json_name = "acquire_order_header"]; // ref(AcquireOrderHeader): acquireOrderId
    OrderItemData acquire_order_item = 38 [json_name = "acquire_order_item"]; // ref(AcquireOrderItem): acquireOrderId + acquireOrderItemSeqId
    TechDataCalendarData tech_data_calendar = 40 [json_name = "tech_data_calendar"]; // ref(TechDataCalendar): calendarId
    FacilityData located_at_facility = 41 [json_name = "located_at_facility"]; // ref(LocatedAtFacility): locatedAtFacilityId
    FacilityLocationData located_at_facility_location = 42 [json_name = "located_at_facility_location"]; // ref(LocatedAtFacilityLocation): locatedAtFacilityId + locatedAtLocationSeqId
    repeated AcctgTransData acctg_trans = 45 [json_name = "acctg_trans"]; // ref(AcctgTrans): fixedAssetId
    repeated FixedAssetData child_fixed_asset = 48 [json_name = "child_fixed_asset"]; // ref(ChildFixedAsset): fixedAssetId
    repeated FixedAssetDepMethodData fixed_asset_dep_method = 50 [json_name = "fixed_asset_dep_method"]; // ref(FixedAssetDepMethod): fixedAssetId
    repeated FixedAssetGeoPointData fixed_asset_geo_point = 51 [json_name = "fixed_asset_geo_point"]; // ref(FixedAssetGeoPoint): fixedAssetId
    repeated FixedAssetProductData fixed_asset_product = 55 [json_name = "fixed_asset_product"]; // ref(FixedAssetProduct): fixedAssetId
    repeated FixedAssetRegistrationData fixed_asset_registration = 56 [json_name = "fixed_asset_registration"]; // ref(FixedAssetRegistration): fixedAssetId
    repeated FixedAssetStdCostData fixed_asset_std_cost = 57 [json_name = "fixed_asset_std_cost"]; // ref(FixedAssetStdCost): fixedAssetId
    repeated InventoryItemData fixed_asset_inventory_item = 59 [json_name = "fixed_asset_inventory_item"]; // ref(FixedAssetInventoryItem): fixedAssetId
    repeated RequirementData requirement = 61 [json_name = "requirement"]; // ref(Requirement): fixedAssetId
    repeated WorkEffortData work_effort = 62 [json_name = "work_effort"]; // ref(WorkEffort): fixedAssetId
    repeated WorkEffortFixedAssetAssignData work_effort_fixed_asset_assign = 63 [json_name = "work_effort_fixed_asset_assign"]; // ref(WorkEffortFixedAssetAssign): fixedAssetId
    TenantData tenant = 64 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 65;
    map<string, google.protobuf.Any> attachments = 66;
}



// The Fixed Asset service definition.
service FixedAssetService {
    rpc Create(FixedAssetData) returns (routines.Response) {}
    rpc StoreOrUpdate(FixedAssetFlatData) returns (routines.Response) {}
    rpc Update(FixedAssetFlatData) returns (routines.Response) {}
    rpc Delete(FixedAssetFlatData) returns (routines.Response) {}
    rpc Find(FixedAssetFlatData) returns (FixedAssetFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (FixedAssetFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream FixedAssetData) {}
    rpc FindList(routines.QueryList) returns (stream FixedAssetData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream FixedAssetData) {}
}


// Security Component - Security Group
message SecurityGroupData {
    option (routines.entity_type) = "SecurityGroup";
    option (routines.keys).keys = "group_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: groupId
    // fields
    string group_id = 1 [json_name = "group_id", (google.api.graphql.relay_options).id = true];
    string group_name = 2 [json_name = "group_name"];
    string description = 3 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 5 [json_name = "created_tx_stamp"];
    string tenant_id = 6 [json_name = "tenant_id"];
    
    
    // relations
    repeated PartyRelationshipData party_relationship = 7 [json_name = "party_relationship"]; // ref(PartyRelationship): groupId
    repeated SecurityGroupPermissionData security_group_permission = 10 [json_name = "security_group_permission"]; // ref(SecurityGroupPermission): groupId
    repeated UserLoginSecurityGroupData user_login_security_group = 11 [json_name = "user_login_security_group"]; // ref(UserLoginSecurityGroup): groupId
    TenantData tenant = 12 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}



// The Security Component - Security Group service definition.
service SecurityGroupService {
    rpc Create(SecurityGroupData) returns (routines.Response) {}
    rpc StoreOrUpdate(SecurityGroupFlatData) returns (routines.Response) {}
    rpc Update(SecurityGroupFlatData) returns (routines.Response) {}
    rpc Delete(SecurityGroupFlatData) returns (routines.Response) {}
    rpc Find(SecurityGroupFlatData) returns (SecurityGroupFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (SecurityGroupFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream SecurityGroupData) {}
    rpc FindList(routines.QueryList) returns (stream SecurityGroupData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream SecurityGroupData) {}
}


// WorkEffort
message WorkEffortData {
    option (routines.entity_type) = "WorkEffort";
    option (routines.keys).keys = "work_effort_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: workEffortId
    // fields
    string work_effort_id = 1 [json_name = "work_effort_id", (google.api.graphql.relay_options).id = true];
    string work_effort_type_id = 2 [json_name = "work_effort_type_id"];
    string current_status_id = 3 [json_name = "current_status_id"];
    google.protobuf.Timestamp last_status_update = 4 [json_name = "last_status_update"];
    string work_effort_purpose_type_id = 5 [json_name = "work_effort_purpose_type_id"];
    string work_effort_parent_id = 6 [json_name = "work_effort_parent_id"];
    string scope_enum_id = 7 [json_name = "scope_enum_id"];
    int64 priority = 8 [json_name = "priority"];
    int64 percent_complete = 9 [json_name = "percent_complete"];
    string work_effort_name = 10 [json_name = "work_effort_name"];
    string show_as_enum_id = 11 [json_name = "show_as_enum_id"];
    routines.Indicator send_notification_email = 12 [json_name = "send_notification_email"];
    string description = 13 [json_name = "description"];
    string location_desc = 14 [json_name = "location_desc"];
    google.protobuf.Timestamp estimated_start_date = 15 [json_name = "estimated_start_date"];
    google.protobuf.Timestamp estimated_completion_date = 16 [json_name = "estimated_completion_date"];
    google.protobuf.Timestamp actual_start_date = 17 [json_name = "actual_start_date"];
    google.protobuf.Timestamp actual_completion_date = 18 [json_name = "actual_completion_date"];
    double estimated_milli_seconds = 19 [json_name = "estimated_milli_seconds"];
    double estimated_setup_millis = 20 [json_name = "estimated_setup_millis"];
    string estimate_calc_method = 21 [json_name = "estimate_calc_method"];
    double actual_milli_seconds = 22 [json_name = "actual_milli_seconds"];
    double actual_setup_millis = 23 [json_name = "actual_setup_millis"];
    double total_milli_seconds_allowed = 24 [json_name = "total_milli_seconds_allowed"];
    routines.Currency total_money_allowed = 25 [json_name = "total_money_allowed"];
    string money_uom_id = 26 [json_name = "money_uom_id"];
    string special_terms = 27 [json_name = "special_terms"];
    int64 time_transparency = 28 [json_name = "time_transparency"];
    string universal_id = 29 [json_name = "universal_id"];
    string source_reference_id = 30 [json_name = "source_reference_id"];
    string fixed_asset_id = 31 [json_name = "fixed_asset_id"];
    string facility_id = 32 [json_name = "facility_id"];
    string info_url = 33 [json_name = "info_url"];
    string recurrence_info_id = 34 [json_name = "recurrence_info_id"];
    string temp_expr_id = 35 [json_name = "temp_expr_id"];
    string runtime_data_id = 36 [json_name = "runtime_data_id"];
    string note_id = 37 [json_name = "note_id"];
    string service_loader_name = 38 [json_name = "service_loader_name"];
    routines.FixedPoint quantity_to_produce = 39 [json_name = "quantity_to_produce"];
    routines.FixedPoint quantity_produced = 40 [json_name = "quantity_produced"];
    routines.FixedPoint quantity_rejected = 41 [json_name = "quantity_rejected"];
    routines.FixedPoint reserv_persons = 42 [json_name = "reserv_persons"];
    routines.FixedPoint reserv_2nd_p_p_perc = 43 [json_name = "reserv_2nd_p_p_perc"];
    routines.FixedPoint reserv_nth_p_p_perc = 44 [json_name = "reserv_nth_p_p_perc"];
    string accommodation_map_id = 45 [json_name = "accommodation_map_id"];
    string accommodation_spot_id = 46 [json_name = "accommodation_spot_id"];
    int64 revision_number = 47 [json_name = "revision_number"];
    google.protobuf.Timestamp created_date = 48 [json_name = "created_date"];
    string created_by_user_login = 49 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 50 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 51 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 52 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 53 [json_name = "created_tx_stamp"];
    int64 sequence_num = 54 [json_name = "sequence_num"];
    string tenant_id = 55 [json_name = "tenant_id"];
    
    
    // relations
    WorkEffortData parent_work_effort = 58 [json_name = "parent_work_effort"]; // ref(ParentWorkEffort): workEffortParentId
    FixedAssetData fixed_asset = 62 [json_name = "fixed_asset"]; // ref(FixedAsset): fixedAssetId
    FacilityData facility = 63 [json_name = "facility"]; // ref(Facility): facilityId
    RecurrenceInfoData recurrence_info = 65 [json_name = "recurrence_info"]; // ref(RecurrenceInfo): recurrenceInfoId
    TemporalExpressionData temporal_expression = 66 [json_name = "temporal_expression"]; // ref(TemporalExpression): tempExprId
    CustomMethodData custom_method = 69 [json_name = "custom_method"]; // ref(CustomMethod): estimateCalcMethod
    repeated AcctgTransData acctg_trans = 72 [json_name = "acctg_trans"]; // ref(AcctgTrans): workEffortId
    repeated InventoryItemDetailData inventory_item_detail = 79 [json_name = "inventory_item_detail"]; // ref(InventoryItemDetail): workEffortId
    repeated ProductAssocData routing_product_assoc = 82 [json_name = "routing_product_assoc"]; // ref(RoutingProductAssoc): workEffortId
    repeated QuoteItemData quote_item = 84 [json_name = "quote_item"]; // ref(QuoteItem): workEffortId
    repeated RateAmountData rate_amount = 86 [json_name = "rate_amount"]; // ref(RateAmount): workEffortId
    repeated ShipmentData estimated_ship_shipment = 88 [json_name = "estimated_ship_shipment"]; // ref(EstimatedShipShipment): workEffortId
    repeated ShipmentData estimated_arrival_shipment = 89 [json_name = "estimated_arrival_shipment"]; // ref(EstimatedArrivalShipment): workEffortId
    repeated WorkEffortData child_work_effort = 92 [json_name = "child_work_effort"]; // ref(ChildWorkEffort): workEffortId
    repeated WorkEffortAssocData from_work_effort_assoc = 93 [json_name = "from_work_effort_assoc"]; // ref(FromWorkEffortAssoc): workEffortId
    repeated WorkEffortAssocData to_work_effort_assoc = 94 [json_name = "to_work_effort_assoc"]; // ref(ToWorkEffortAssoc): workEffortId
    repeated WorkEffortFixedAssetAssignData work_effort_fixed_asset_assign = 102 [json_name = "work_effort_fixed_asset_assign"]; // ref(WorkEffortFixedAssetAssign): workEffortId
    repeated WorkEffortGoodStandardData work_effort_good_standard = 104 [json_name = "work_effort_good_standard"]; // ref(WorkEffortGoodStandard): workEffortId
    repeated WorkEffortPartyAssignmentData work_effort_party_assignment = 110 [json_name = "work_effort_party_assignment"]; // ref(WorkEffortPartyAssignment): workEffortId
    repeated WorkEffortSkillStandardData work_effort_skill_standard = 112 [json_name = "work_effort_skill_standard"]; // ref(WorkEffortSkillStandard): workEffortId
    TenantData tenant = 118 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 119;
    map<string, google.protobuf.Any> attachments = 120;
}



// The WorkEffort service definition.
service WorkEffortService {
    rpc Create(WorkEffortData) returns (routines.Response) {}
    rpc StoreOrUpdate(WorkEffortFlatData) returns (routines.Response) {}
    rpc Update(WorkEffortFlatData) returns (routines.Response) {}
    rpc Delete(WorkEffortFlatData) returns (routines.Response) {}
    rpc Find(WorkEffortFlatData) returns (WorkEffortFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (WorkEffortFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream WorkEffortData) {}
    rpc FindList(routines.QueryList) returns (stream WorkEffortData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream WorkEffortData) {}
}


// Return
message ReturnHeaderData {
    option (routines.entity_type) = "ReturnHeader";
    option (routines.keys).keys = "return_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: returnId
    // fields
    string return_id = 1 [json_name = "return_id", (google.api.graphql.relay_options).id = true];
    string return_header_type_id = 2 [json_name = "return_header_type_id"];
    string status_id = 3 [json_name = "status_id"];
    string created_by = 4 [json_name = "created_by"];
    string from_party_id = 5 [json_name = "from_party_id"];
    string to_party_id = 6 [json_name = "to_party_id"];
    string payment_method_id = 7 [json_name = "payment_method_id"];
    string fin_account_id = 8 [json_name = "fin_account_id"];
    string billing_account_id = 9 [json_name = "billing_account_id"];
    google.protobuf.Timestamp entry_date = 10 [json_name = "entry_date"];
    string origin_contact_mech_id = 11 [json_name = "origin_contact_mech_id"];
    string destination_facility_id = 12 [json_name = "destination_facility_id"];
    routines.Indicator needs_inventory_receive = 13 [json_name = "needs_inventory_receive"];
    string currency_uom_id = 14 [json_name = "currency_uom_id"];
    string supplier_rma_id = 15 [json_name = "supplier_rma_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 16 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 17 [json_name = "created_tx_stamp"];
    string tenant_id = 18 [json_name = "tenant_id"];
    
    
    // relations
    PartyData party = 20 [json_name = "party"]; // ref(Party): fromPartyId
    PartyData to_party = 21 [json_name = "to_party"]; // ref(ToParty): toPartyId
    BillingAccountData billing_account = 22 [json_name = "billing_account"]; // ref(BillingAccount): billingAccountId
    FinAccountData fin_account = 23 [json_name = "fin_account"]; // ref(FinAccount): finAccountId
    PaymentMethodData payment_method = 24 [json_name = "payment_method"]; // ref(PaymentMethod): paymentMethodId
    FacilityData facility = 25 [json_name = "facility"]; // ref(Facility): destinationFacilityId
    ContactMechData contact_mech = 26 [json_name = "contact_mech"]; // ref(ContactMech): originContactMechId
    PostalAddressData postal_address = 27 [json_name = "postal_address"]; // ref(PostalAddress): originContactMechId
    repeated ReturnItemData return_item = 35 [json_name = "return_item"]; // ref(ReturnItem): returnId
    repeated ShipmentData primary_shipment = 39 [json_name = "primary_shipment"]; // ref(PrimaryShipment): returnId
    TenantData tenant = 41 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 42;
    map<string, google.protobuf.Any> attachments = 43;
}



// The Return service definition.
service ReturnHeaderService {
    rpc Create(ReturnHeaderData) returns (routines.Response) {}
    rpc StoreOrUpdate(ReturnHeaderFlatData) returns (routines.Response) {}
    rpc Update(ReturnHeaderFlatData) returns (routines.Response) {}
    rpc Delete(ReturnHeaderFlatData) returns (routines.Response) {}
    rpc Find(ReturnHeaderFlatData) returns (ReturnHeaderFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ReturnHeaderFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ReturnHeaderData) {}
    rpc FindList(routines.QueryList) returns (stream ReturnHeaderData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ReturnHeaderData) {}
}


// Party Identification Type
message PartyIdentificationTypeData {
    option (routines.entity_type) = "PartyIdentificationType";
    option (routines.keys).keys = "party_identification_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: partyIdentificationTypeId
    // fields
    string party_identification_type_id = 1 [json_name = "party_identification_type_id", (google.api.graphql.relay_options).id = true];
    string parent_type_id = 2 [json_name = "parent_type_id"];
    routines.Indicator has_table = 3 [json_name = "has_table"];
    string description = 4 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 6 [json_name = "created_tx_stamp"];
    string tenant_id = 7 [json_name = "tenant_id"];
    
    
    // relations
    PartyIdentificationTypeData parent_party_identification_type = 8 [json_name = "parent_party_identification_type"]; // ref(ParentPartyIdentificationType): parentTypeId
    repeated PartyIdentificationData party_identification = 9 [json_name = "party_identification"]; // ref(PartyIdentification): partyIdentificationTypeId
    repeated PartyIdentificationTypeData child_party_identification_type = 10 [json_name = "child_party_identification_type"]; // ref(ChildPartyIdentificationType): partyIdentificationTypeId
    TenantData tenant = 11 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 12;
    map<string, google.protobuf.Any> attachments = 13;
}



// The Party Identification Type service definition.
service PartyIdentificationTypeService {
    rpc Create(PartyIdentificationTypeData) returns (routines.Response) {}
    rpc StoreOrUpdate(PartyIdentificationTypeFlatData) returns (routines.Response) {}
    rpc Update(PartyIdentificationTypeFlatData) returns (routines.Response) {}
    rpc Delete(PartyIdentificationTypeFlatData) returns (routines.Response) {}
    rpc Find(PartyIdentificationTypeFlatData) returns (PartyIdentificationTypeFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PartyIdentificationTypeFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PartyIdentificationTypeData) {}
    rpc FindList(routines.QueryList) returns (stream PartyIdentificationTypeData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PartyIdentificationTypeData) {}
}


// Order Adjustment
message OrderAdjustmentData {
    option (routines.entity_type) = "OrderAdjustment";
    option (routines.keys).keys = "order_adjustment_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: orderAdjustmentId
    // fields
    string order_adjustment_id = 1 [json_name = "order_adjustment_id", (google.api.graphql.relay_options).id = true];
    string order_adjustment_type_id = 2 [json_name = "order_adjustment_type_id"];
    string order_id = 3 [json_name = "order_id"];
    string order_item_seq_id = 4 [json_name = "order_item_seq_id"];
    string ship_group_seq_id = 5 [json_name = "ship_group_seq_id"];
    string comments = 6 [json_name = "comments"];
    string description = 7 [json_name = "description"];
    routines.Currency amount = 8 [json_name = "amount"];
    routines.Currency recurring_amount = 9 [json_name = "recurring_amount"];
    routines.Currency amount_already_included = 10 [json_name = "amount_already_included"];
    string product_promo_id = 11 [json_name = "product_promo_id"];
    string product_promo_rule_id = 12 [json_name = "product_promo_rule_id"];
    string product_promo_action_seq_id = 13 [json_name = "product_promo_action_seq_id"];
    string product_feature_id = 14 [json_name = "product_feature_id"];
    string corresponding_product_id = 15 [json_name = "corresponding_product_id"];
    string tax_authority_rate_seq_id = 16 [json_name = "tax_authority_rate_seq_id"];
    string source_reference_id = 17 [json_name = "source_reference_id"];
    routines.FixedPoint source_percentage = 18 [json_name = "source_percentage"];
    string customer_reference_id = 19 [json_name = "customer_reference_id"];
    string primary_geo_id = 20 [json_name = "primary_geo_id"];
    string secondary_geo_id = 21 [json_name = "secondary_geo_id"];
    routines.Currency exempt_amount = 22 [json_name = "exempt_amount"];
    string tax_auth_geo_id = 23 [json_name = "tax_auth_geo_id"];
    string tax_auth_party_id = 24 [json_name = "tax_auth_party_id"];
    string override_gl_account_id = 25 [json_name = "override_gl_account_id"];
    routines.Indicator include_in_tax = 26 [json_name = "include_in_tax"];
    routines.Indicator include_in_shipping = 27 [json_name = "include_in_shipping"];
    routines.Indicator is_manual = 28 [json_name = "is_manual"];
    google.protobuf.Timestamp created_date = 29 [json_name = "created_date"];
    string created_by_user_login = 30 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 31 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 32 [json_name = "last_modified_by_user_login"];
    string original_adjustment_id = 33 [json_name = "original_adjustment_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 34 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 35 [json_name = "created_tx_stamp"];
    string tenant_id = 36 [json_name = "tenant_id"];
    
    
    // relations
    OrderHeaderData order_header = 39 [json_name = "order_header"]; // ref(OrderHeader): orderId
    OrderItemData order_item = 41 [json_name = "order_item"]; // ref(OrderItem): orderId + orderItemSeqId
    OrderItemShipGroupData order_item_ship_group = 42 [json_name = "order_item_ship_group"]; // ref(OrderItemShipGroup): orderId + shipGroupSeqId
    OrderItemShipGroupAssocData order_item_ship_group_assoc = 43 [json_name = "order_item_ship_group_assoc"]; // ref(OrderItemShipGroupAssoc): orderId + orderItemSeqId + shipGroupSeqId
    ProductPromoData product_promo = 44 [json_name = "product_promo"]; // ref(ProductPromo): productPromoId
    ProductPromoRuleData product_promo_rule = 45 [json_name = "product_promo_rule"]; // ref(ProductPromoRule): productPromoId + productPromoRuleId
    ProductPromoActionData product_promo_action = 46 [json_name = "product_promo_action"]; // ref(ProductPromoAction): productPromoId + productPromoRuleId + productPromoActionSeqId
    TaxAuthorityData tax_authority = 49 [json_name = "tax_authority"]; // ref(TaxAuthority): taxAuthGeoId + taxAuthPartyId
    GlAccountData override_gl_account = 50 [json_name = "override_gl_account"]; // ref(OverrideGlAccount): overrideGlAccountId
    TaxAuthorityRateProductData tax_authority_rate_product = 51 [json_name = "tax_authority_rate_product"]; // ref(TaxAuthorityRateProduct): taxAuthorityRateSeqId
    OrderAdjustmentData order_adjustment = 52 [json_name = "order_adjustment"]; // ref(OrderAdjustment): originalAdjustmentId
    repeated OrderAdjustmentBillingData order_adjustment_billing = 54 [json_name = "order_adjustment_billing"]; // ref(OrderAdjustmentBilling): orderAdjustmentId
    TenantData tenant = 56 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 57;
    map<string, google.protobuf.Any> attachments = 58;
}



// The Order Adjustment service definition.
service OrderAdjustmentService {
    rpc Create(OrderAdjustmentData) returns (routines.Response) {}
    rpc StoreOrUpdate(OrderAdjustmentFlatData) returns (routines.Response) {}
    rpc Update(OrderAdjustmentFlatData) returns (routines.Response) {}
    rpc Delete(OrderAdjustmentFlatData) returns (routines.Response) {}
    rpc Find(OrderAdjustmentFlatData) returns (OrderAdjustmentFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (OrderAdjustmentFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream OrderAdjustmentData) {}
    rpc FindList(routines.QueryList) returns (stream OrderAdjustmentData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream OrderAdjustmentData) {}
}


// Financial Account Transaction
message FinAccountTransData {
    option (routines.entity_type) = "FinAccountTrans";
    option (routines.keys).keys = "fin_account_trans_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: finAccountTransId
    // fields
    string fin_account_trans_id = 1 [json_name = "fin_account_trans_id", (google.api.graphql.relay_options).id = true];
    string fin_account_trans_type_id = 2 [json_name = "fin_account_trans_type_id"];
    string fin_account_id = 3 [json_name = "fin_account_id"];
    string party_id = 4 [json_name = "party_id"];
    string gl_reconciliation_id = 5 [json_name = "gl_reconciliation_id"];
    google.protobuf.Timestamp transaction_date = 6 [json_name = "transaction_date"];
    google.protobuf.Timestamp entry_date = 7 [json_name = "entry_date"];
    routines.Currency amount = 8 [json_name = "amount"];
    string payment_id = 9 [json_name = "payment_id"];
    string order_id = 10 [json_name = "order_id"];
    string order_item_seq_id = 11 [json_name = "order_item_seq_id"];
    string performed_by_party_id = 12 [json_name = "performed_by_party_id"];
    string reason_enum_id = 13 [json_name = "reason_enum_id"];
    string comments = 14 [json_name = "comments"];
    string status_id = 15 [json_name = "status_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 16 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 17 [json_name = "created_tx_stamp"];
    string tenant_id = 18 [json_name = "tenant_id"];
    
    
    // relations
    FinAccountData fin_account = 21 [json_name = "fin_account"]; // ref(FinAccount): finAccountId
    PartyData party = 22 [json_name = "party"]; // ref(Party): partyId
    PaymentData payment = 23 [json_name = "payment"]; // ref(Payment): paymentId
    OrderItemData order_item = 24 [json_name = "order_item"]; // ref(OrderItem): orderId + orderItemSeqId
    PartyData performed_by_party = 25 [json_name = "performed_by_party"]; // ref(PerformedByParty): performedByPartyId
    repeated AcctgTransData acctg_trans = 29 [json_name = "acctg_trans"]; // ref(AcctgTrans): finAccountTransId
    TenantData tenant = 32 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 33;
    map<string, google.protobuf.Any> attachments = 34;
}



// The Financial Account Transaction service definition.
service FinAccountTransService {
    rpc Create(FinAccountTransData) returns (routines.Response) {}
    rpc StoreOrUpdate(FinAccountTransFlatData) returns (routines.Response) {}
    rpc Update(FinAccountTransFlatData) returns (routines.Response) {}
    rpc Delete(FinAccountTransFlatData) returns (routines.Response) {}
    rpc Find(FinAccountTransFlatData) returns (FinAccountTransFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (FinAccountTransFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream FinAccountTransData) {}
    rpc FindList(routines.QueryList) returns (stream FinAccountTransData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream FinAccountTransData) {}
}


// Custom Method
message CustomMethodData {
    option (routines.entity_type) = "CustomMethod";
    option (routines.keys).keys = "custom_method_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: customMethodId
    // fields
    string custom_method_id = 1 [json_name = "custom_method_id", (google.api.graphql.relay_options).id = true];
    string custom_method_type_id = 2 [json_name = "custom_method_type_id"];
    string custom_method_name = 3 [json_name = "custom_method_name"];
    string description = 4 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 6 [json_name = "created_tx_stamp"];
    string tenant_id = 7 [json_name = "tenant_id"];
    
    
    // relations
    repeated ContentData content = 9 [json_name = "content"]; // ref(Content): customMethodId
    repeated FixedAssetDepMethodData fixed_asset_dep_method = 11 [json_name = "fixed_asset_dep_method"]; // ref(FixedAssetDepMethod): customMethodId
    repeated PartyAcctgPreferenceData invoice_party_acctg_preference = 12 [json_name = "invoice_party_acctg_preference"]; // ref(InvoicePartyAcctgPreference): customMethodId
    repeated PartyAcctgPreferenceData quote_party_acctg_preference = 13 [json_name = "quote_party_acctg_preference"]; // ref(QuotePartyAcctgPreference): customMethodId
    repeated PartyAcctgPreferenceData order_party_acctg_preference = 14 [json_name = "order_party_acctg_preference"]; // ref(OrderPartyAcctgPreference): customMethodId
    repeated ProductAssocData product_assoc = 15 [json_name = "product_assoc"]; // ref(ProductAssoc): customMethodId
    repeated ProductPriceData product_price = 16 [json_name = "product_price"]; // ref(ProductPrice): customMethodId
    repeated ProductPromoActionData product_promo_action = 17 [json_name = "product_promo_action"]; // ref(ProductPromoAction): customMethodId
    repeated ProductPromoCondData product_promo_cond = 18 [json_name = "product_promo_cond"]; // ref(ProductPromoCond): customMethodId
    repeated ProductStorePaymentSettingData product_store_payment_setting = 19 [json_name = "product_store_payment_setting"]; // ref(ProductStorePaymentSetting): customMethodId
    repeated ProductStoreShipmentMethData product_store_shipment_meth = 20 [json_name = "product_store_shipment_meth"]; // ref(ProductStoreShipmentMeth): customMethodId
    repeated UomConversionDatedData uom_custom_method_uom_conversion_dated = 23 [json_name = "uom_custom_method_uom_conversion_dated"]; // ref(UomCustomMethodUomConversionDated): customMethodId
    repeated WorkEffortData work_effort = 24 [json_name = "work_effort"]; // ref(WorkEffort): customMethodId
    TenantData tenant = 25 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 26;
    map<string, google.protobuf.Any> attachments = 27;
}



// The Custom Method service definition.
service CustomMethodService {
    rpc Create(CustomMethodData) returns (routines.Response) {}
    rpc StoreOrUpdate(CustomMethodFlatData) returns (routines.Response) {}
    rpc Update(CustomMethodFlatData) returns (routines.Response) {}
    rpc Delete(CustomMethodFlatData) returns (routines.Response) {}
    rpc Find(CustomMethodFlatData) returns (CustomMethodFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (CustomMethodFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream CustomMethodData) {}
    rpc FindList(routines.QueryList) returns (stream CustomMethodData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream CustomMethodData) {}
}


// Payment Gateway Response
message PaymentGatewayResponseData {
    option (routines.entity_type) = "PaymentGatewayResponse";
    option (routines.keys).keys = "payment_gateway_response_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: paymentGatewayResponseId
    // fields
    string payment_gateway_response_id = 1 [json_name = "payment_gateway_response_id", (google.api.graphql.relay_options).id = true];
    string payment_service_type_enum_id = 2 [json_name = "payment_service_type_enum_id"];
    string order_payment_preference_id = 3 [json_name = "order_payment_preference_id"];
    string payment_method_type_id = 4 [json_name = "payment_method_type_id"];
    string payment_method_id = 5 [json_name = "payment_method_id"];
    string trans_code_enum_id = 6 [json_name = "trans_code_enum_id"];
    routines.Currency amount = 7 [json_name = "amount"];
    string currency_uom_id = 8 [json_name = "currency_uom_id"];
    string reference_num = 9 [json_name = "reference_num"];
    string alt_reference = 10 [json_name = "alt_reference"];
    string sub_reference = 11 [json_name = "sub_reference"];
    string gateway_code = 12 [json_name = "gateway_code"];
    string gateway_flag = 13 [json_name = "gateway_flag"];
    string gateway_avs_result = 14 [json_name = "gateway_avs_result"];
    string gateway_cv_result = 15 [json_name = "gateway_cv_result"];
    string gateway_score_result = 16 [json_name = "gateway_score_result"];
    string gateway_message = 17 [json_name = "gateway_message"];
    google.protobuf.Timestamp transaction_date = 18 [json_name = "transaction_date"];
    routines.Indicator result_declined = 19 [json_name = "result_declined"];
    routines.Indicator result_nsf = 20 [json_name = "result_nsf"];
    routines.Indicator result_bad_expire = 21 [json_name = "result_bad_expire"];
    routines.Indicator result_bad_card_number = 22 [json_name = "result_bad_card_number"];
    google.protobuf.Timestamp last_updated_tx_stamp = 23 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 24 [json_name = "created_tx_stamp"];
    string tenant_id = 25 [json_name = "tenant_id"];
    
    
    // relations
    OrderPaymentPreferenceData order_payment_preference = 29 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): orderPaymentPreferenceId
    PaymentMethodData payment_method = 31 [json_name = "payment_method"]; // ref(PaymentMethod): paymentMethodId
    repeated PaymentData payment = 32 [json_name = "payment"]; // ref(Payment): paymentGatewayResponseId
    TenantData tenant = 34 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 35;
    map<string, google.protobuf.Any> attachments = 36;
}



// The Payment Gateway Response service definition.
service PaymentGatewayResponseService {
    rpc Create(PaymentGatewayResponseData) returns (routines.Response) {}
    rpc StoreOrUpdate(PaymentGatewayResponseFlatData) returns (routines.Response) {}
    rpc Update(PaymentGatewayResponseFlatData) returns (routines.Response) {}
    rpc Delete(PaymentGatewayResponseFlatData) returns (routines.Response) {}
    rpc Find(PaymentGatewayResponseFlatData) returns (PaymentGatewayResponseFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PaymentGatewayResponseFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PaymentGatewayResponseData) {}
    rpc FindList(routines.QueryList) returns (stream PaymentGatewayResponseData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PaymentGatewayResponseData) {}
}


// Shipment Cost Estimate
message ShipmentCostEstimateData {
    option (routines.entity_type) = "ShipmentCostEstimate";
    option (routines.keys).keys = "shipment_cost_estimate_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: shipmentCostEstimateId
    // fields
    string shipment_cost_estimate_id = 1 [json_name = "shipment_cost_estimate_id", (google.api.graphql.relay_options).id = true];
    string shipment_method_type_id = 2 [json_name = "shipment_method_type_id"];
    string carrier_party_id = 3 [json_name = "carrier_party_id"];
    string carrier_role_type_id = 4 [json_name = "carrier_role_type_id"];
    string product_store_ship_meth_id = 5 [json_name = "product_store_ship_meth_id"];
    string product_store_id = 6 [json_name = "product_store_id"];
    string party_id = 7 [json_name = "party_id"];
    string role_type_id = 8 [json_name = "role_type_id"];
    string geo_id_to = 9 [json_name = "geo_id_to"];
    string geo_id_from = 10 [json_name = "geo_id_from"];
    string weight_break_id = 11 [json_name = "weight_break_id"];
    string weight_uom_id = 12 [json_name = "weight_uom_id"];
    routines.Currency weight_unit_price = 13 [json_name = "weight_unit_price"];
    string quantity_break_id = 14 [json_name = "quantity_break_id"];
    string quantity_uom_id = 15 [json_name = "quantity_uom_id"];
    routines.Currency quantity_unit_price = 16 [json_name = "quantity_unit_price"];
    string price_break_id = 17 [json_name = "price_break_id"];
    string price_uom_id = 18 [json_name = "price_uom_id"];
    routines.Currency price_unit_price = 19 [json_name = "price_unit_price"];
    routines.Currency order_flat_price = 20 [json_name = "order_flat_price"];
    routines.FixedPoint order_price_percent = 21 [json_name = "order_price_percent"];
    routines.Currency order_item_flat_price = 22 [json_name = "order_item_flat_price"];
    routines.FixedPoint shipping_price_percent = 23 [json_name = "shipping_price_percent"];
    string product_feature_group_id = 24 [json_name = "product_feature_group_id"];
    routines.FixedPoint oversize_unit = 25 [json_name = "oversize_unit"];
    routines.Currency oversize_price = 26 [json_name = "oversize_price"];
    routines.FixedPoint feature_percent = 27 [json_name = "feature_percent"];
    routines.Currency feature_price = 28 [json_name = "feature_price"];
    google.protobuf.Timestamp last_updated_tx_stamp = 29 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 30 [json_name = "created_tx_stamp"];
    string tenant_id = 31 [json_name = "tenant_id"];
    
    
    // relations
    CarrierShipmentMethodData carrier_shipment_method = 32 [json_name = "carrier_shipment_method"]; // ref(CarrierShipmentMethod): shipmentMethodTypeId + carrierPartyId + carrierRoleTypeId
    ProductStoreShipmentMethData product_store_shipment_meth = 33 [json_name = "product_store_shipment_meth"]; // ref(ProductStoreShipmentMeth): productStoreShipMethId
    PartyData party = 34 [json_name = "party"]; // ref(Party): partyId
    PartyRoleData party_role = 36 [json_name = "party_role"]; // ref(PartyRole): partyId + roleTypeId
    QuantityBreakData weight_quantity_break = 42 [json_name = "weight_quantity_break"]; // ref(WeightQuantityBreak): weightBreakId
    QuantityBreakData quantity_quantity_break = 43 [json_name = "quantity_quantity_break"]; // ref(QuantityQuantityBreak): quantityBreakId
    QuantityBreakData price_quantity_break = 44 [json_name = "price_quantity_break"]; // ref(PriceQuantityBreak): priceBreakId
    TenantData tenant = 45 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 46;
    map<string, google.protobuf.Any> attachments = 47;
}



// The Shipment Cost Estimate service definition.
service ShipmentCostEstimateService {
    rpc Create(ShipmentCostEstimateData) returns (routines.Response) {}
    rpc StoreOrUpdate(ShipmentCostEstimateFlatData) returns (routines.Response) {}
    rpc Update(ShipmentCostEstimateFlatData) returns (routines.Response) {}
    rpc Delete(ShipmentCostEstimateFlatData) returns (routines.Response) {}
    rpc Find(ShipmentCostEstimateFlatData) returns (ShipmentCostEstimateFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ShipmentCostEstimateFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ShipmentCostEstimateData) {}
    rpc FindList(routines.QueryList) returns (stream ShipmentCostEstimateData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ShipmentCostEstimateData) {}
}


// Shipment Contact Mechanism Type
message ShipmentBoxTypeData {
    option (routines.entity_type) = "ShipmentBoxType";
    option (routines.keys).keys = "shipment_box_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: shipmentBoxTypeId
    // fields
    string shipment_box_type_id = 1 [json_name = "shipment_box_type_id", (google.api.graphql.relay_options).id = true];
    string description = 2 [json_name = "description"];
    string dimension_uom_id = 3 [json_name = "dimension_uom_id"];
    routines.FixedPoint box_length = 4 [json_name = "box_length"];
    routines.FixedPoint box_width = 5 [json_name = "box_width"];
    routines.FixedPoint box_height = 6 [json_name = "box_height"];
    string weight_uom_id = 7 [json_name = "weight_uom_id"];
    routines.FixedPoint box_weight = 8 [json_name = "box_weight"];
    google.protobuf.Timestamp last_updated_tx_stamp = 9 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 10 [json_name = "created_tx_stamp"];
    string tenant_id = 11 [json_name = "tenant_id"];
    
    
    // relations
    repeated CarrierShipmentBoxTypeData carrier_shipment_box_type = 14 [json_name = "carrier_shipment_box_type"]; // ref(CarrierShipmentBoxType): shipmentBoxTypeId
    repeated ProductData default_product = 15 [json_name = "default_product"]; // ref(DefaultProduct): shipmentBoxTypeId
    repeated ShipmentPackageData shipment_package = 16 [json_name = "shipment_package"]; // ref(ShipmentPackage): shipmentBoxTypeId
    TenantData tenant = 17 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 18;
    map<string, google.protobuf.Any> attachments = 19;
}



// The Shipment Contact Mechanism Type service definition.
service ShipmentBoxTypeService {
    rpc Create(ShipmentBoxTypeData) returns (routines.Response) {}
    rpc StoreOrUpdate(ShipmentBoxTypeFlatData) returns (routines.Response) {}
    rpc Update(ShipmentBoxTypeFlatData) returns (routines.Response) {}
    rpc Delete(ShipmentBoxTypeFlatData) returns (routines.Response) {}
    rpc Find(ShipmentBoxTypeFlatData) returns (ShipmentBoxTypeFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ShipmentBoxTypeFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ShipmentBoxTypeData) {}
    rpc FindList(routines.QueryList) returns (stream ShipmentBoxTypeData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ShipmentBoxTypeData) {}
}


// Geographic Location
message GeoPointData {
    option (routines.entity_type) = "GeoPoint";
    option (routines.keys).keys = "geo_point_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: geoPointId
    // fields
    string geo_point_id = 1 [json_name = "geo_point_id", (google.api.graphql.relay_options).id = true];
    string geo_point_type_enum_id = 2 [json_name = "geo_point_type_enum_id"];
    string description = 3 [json_name = "description"];
    string data_source_id = 4 [json_name = "data_source_id"];
    string latitude = 5 [json_name = "latitude"];
    string longitude = 6 [json_name = "longitude"];
    routines.FixedPoint elevation = 7 [json_name = "elevation"];
    string elevation_uom_id = 8 [json_name = "elevation_uom_id"];
    string information = 9 [json_name = "information"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 11 [json_name = "created_tx_stamp"];
    string tenant_id = 12 [json_name = "tenant_id"];
    
    
    // relations
    repeated FacilityData facility = 17 [json_name = "facility"]; // ref(Facility): geoPointId
    repeated FacilityLocationData facility_location = 18 [json_name = "facility_location"]; // ref(FacilityLocation): geoPointId
    repeated FacilityLocationGeoPointData facility_location_geo_point = 19 [json_name = "facility_location_geo_point"]; // ref(FacilityLocationGeoPoint): geoPointId
    repeated FixedAssetGeoPointData fixed_asset_geo_point = 20 [json_name = "fixed_asset_geo_point"]; // ref(FixedAssetGeoPoint): geoPointId
    repeated PartyGeoPointData party_geo_point = 21 [json_name = "party_geo_point"]; // ref(PartyGeoPoint): geoPointId
    repeated PostalAddressData postal_address = 22 [json_name = "postal_address"]; // ref(PostalAddress): geoPointId
    TenantData tenant = 23 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 24;
    map<string, google.protobuf.Any> attachments = 25;
}



// The Geographic Location service definition.
service GeoPointService {
    rpc Create(GeoPointData) returns (routines.Response) {}
    rpc StoreOrUpdate(GeoPointFlatData) returns (routines.Response) {}
    rpc Update(GeoPointFlatData) returns (routines.Response) {}
    rpc Delete(GeoPointFlatData) returns (routines.Response) {}
    rpc Find(GeoPointFlatData) returns (GeoPointFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (GeoPointFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream GeoPointData) {}
    rpc FindList(routines.QueryList) returns (stream GeoPointData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream GeoPointData) {}
}


// eBay Configuration
message EbayConfigData {
    option (routines.entity_type) = "EbayConfig";
    option (routines.keys).keys = "product_store_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productStoreId
    // fields
    string product_store_id = 1 [json_name = "product_store_id", (google.api.graphql.relay_options).id = true];
    string dev_id = 2 [json_name = "dev_id"];
    string app_id = 3 [json_name = "app_id"];
    string cert_id = 4 [json_name = "cert_id"];
    string token = 5 [json_name = "token"];
    string compatibility_level = 6 [json_name = "compatibility_level"];
    string site_id = 7 [json_name = "site_id"];
    string xml_gateway_uri = 8 [json_name = "xml_gateway_uri"];
    string custom_xml = 9 [json_name = "custom_xml"];
    string web_site_id = 10 [json_name = "web_site_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 11 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 12 [json_name = "created_tx_stamp"];
    string tenant_id = 13 [json_name = "tenant_id"];
    
    
    // relations
    ProductStoreData product_store = 14 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    WebSiteData web_site = 15 [json_name = "web_site"]; // ref(WebSite): webSiteId
    TenantData tenant = 16 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 17;
    map<string, google.protobuf.Any> attachments = 18;
}



// The eBay Configuration service definition.
service EbayConfigService {
    rpc Create(EbayConfigData) returns (routines.Response) {}
    rpc StoreOrUpdate(EbayConfigFlatData) returns (routines.Response) {}
    rpc Update(EbayConfigFlatData) returns (routines.Response) {}
    rpc Delete(EbayConfigFlatData) returns (routines.Response) {}
    rpc Find(EbayConfigFlatData) returns (EbayConfigFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (EbayConfigFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream EbayConfigData) {}
    rpc FindList(routines.QueryList) returns (stream EbayConfigData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream EbayConfigData) {}
}


// Subscription Resource
message SubscriptionResourceData {
    option (routines.entity_type) = "SubscriptionResource";
    option (routines.keys).keys = "subscription_resource_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: subscriptionResourceId
    // fields
    string subscription_resource_id = 1 [json_name = "subscription_resource_id", (google.api.graphql.relay_options).id = true];
    string parent_resource_id = 2 [json_name = "parent_resource_id"];
    string description = 3 [json_name = "description"];
    string content_id = 4 [json_name = "content_id"];
    string web_site_id = 5 [json_name = "web_site_id"];
    string service_name_on_expiry = 6 [json_name = "service_name_on_expiry"];
    google.protobuf.Timestamp last_updated_tx_stamp = 7 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 8 [json_name = "created_tx_stamp"];
    string tenant_id = 9 [json_name = "tenant_id"];
    
    
    // relations
    SubscriptionResourceData parent_subscription_resource = 10 [json_name = "parent_subscription_resource"]; // ref(ParentSubscriptionResource): parentResourceId
    ContentData content = 11 [json_name = "content"]; // ref(Content): contentId
    WebSiteData web_site = 12 [json_name = "web_site"]; // ref(WebSite): webSiteId
    repeated ProductSubscriptionResourceData product_subscription_resource = 13 [json_name = "product_subscription_resource"]; // ref(ProductSubscriptionResource): subscriptionResourceId
    repeated SubscriptionResourceData child_subscription_resource = 15 [json_name = "child_subscription_resource"]; // ref(ChildSubscriptionResource): subscriptionResourceId
    TenantData tenant = 16 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 17;
    map<string, google.protobuf.Any> attachments = 18;
}



// The Subscription Resource service definition.
service SubscriptionResourceService {
    rpc Create(SubscriptionResourceData) returns (routines.Response) {}
    rpc StoreOrUpdate(SubscriptionResourceFlatData) returns (routines.Response) {}
    rpc Update(SubscriptionResourceFlatData) returns (routines.Response) {}
    rpc Delete(SubscriptionResourceFlatData) returns (routines.Response) {}
    rpc Find(SubscriptionResourceFlatData) returns (SubscriptionResourceFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (SubscriptionResourceFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream SubscriptionResourceData) {}
    rpc FindList(routines.QueryList) returns (stream SubscriptionResourceData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream SubscriptionResourceData) {}
}


// Quote Adjustment
message QuoteAdjustmentData {
    option (routines.entity_type) = "QuoteAdjustment";
    option (routines.keys).keys = "quote_adjustment_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: quoteAdjustmentId
    // fields
    string quote_adjustment_id = 1 [json_name = "quote_adjustment_id", (google.api.graphql.relay_options).id = true];
    string quote_adjustment_type_id = 2 [json_name = "quote_adjustment_type_id"];
    string quote_id = 3 [json_name = "quote_id"];
    string quote_item_seq_id = 4 [json_name = "quote_item_seq_id"];
    string comments = 5 [json_name = "comments"];
    string description = 6 [json_name = "description"];
    routines.Currency amount = 7 [json_name = "amount"];
    string product_promo_id = 8 [json_name = "product_promo_id"];
    string product_promo_rule_id = 9 [json_name = "product_promo_rule_id"];
    string product_promo_action_seq_id = 10 [json_name = "product_promo_action_seq_id"];
    string product_feature_id = 11 [json_name = "product_feature_id"];
    string corresponding_product_id = 12 [json_name = "corresponding_product_id"];
    string source_reference_id = 13 [json_name = "source_reference_id"];
    routines.FixedPoint source_percentage = 14 [json_name = "source_percentage"];
    string customer_reference_id = 15 [json_name = "customer_reference_id"];
    string primary_geo_id = 16 [json_name = "primary_geo_id"];
    string secondary_geo_id = 17 [json_name = "secondary_geo_id"];
    routines.Currency exempt_amount = 18 [json_name = "exempt_amount"];
    string tax_auth_geo_id = 19 [json_name = "tax_auth_geo_id"];
    string tax_auth_party_id = 20 [json_name = "tax_auth_party_id"];
    string override_gl_account_id = 21 [json_name = "override_gl_account_id"];
    routines.Indicator include_in_tax = 22 [json_name = "include_in_tax"];
    routines.Indicator include_in_shipping = 23 [json_name = "include_in_shipping"];
    google.protobuf.Timestamp created_date = 24 [json_name = "created_date"];
    string created_by_user_login = 25 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 26 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 27 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 28 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 29 [json_name = "created_tx_stamp"];
    string tenant_id = 30 [json_name = "tenant_id"];
    
    
    // relations
    QuoteData quote = 32 [json_name = "quote"]; // ref(Quote): quoteId
    QuoteItemData quote_item = 34 [json_name = "quote_item"]; // ref(QuoteItem): quoteId + quoteItemSeqId
    ProductPromoData product_promo = 35 [json_name = "product_promo"]; // ref(ProductPromo): productPromoId
    ProductPromoRuleData product_promo_rule = 36 [json_name = "product_promo_rule"]; // ref(ProductPromoRule): productPromoId + productPromoRuleId
    ProductPromoActionData product_promo_action = 37 [json_name = "product_promo_action"]; // ref(ProductPromoAction): productPromoId + productPromoRuleId + productPromoActionSeqId
    TaxAuthorityData tax_authority = 40 [json_name = "tax_authority"]; // ref(TaxAuthority): taxAuthGeoId + taxAuthPartyId
    GlAccountData override_gl_account = 41 [json_name = "override_gl_account"]; // ref(OverrideGlAccount): overrideGlAccountId
    TenantData tenant = 42 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 43;
    map<string, google.protobuf.Any> attachments = 44;
}



// The Quote Adjustment service definition.
service QuoteAdjustmentService {
    rpc Create(QuoteAdjustmentData) returns (routines.Response) {}
    rpc StoreOrUpdate(QuoteAdjustmentFlatData) returns (routines.Response) {}
    rpc Update(QuoteAdjustmentFlatData) returns (routines.Response) {}
    rpc Delete(QuoteAdjustmentFlatData) returns (routines.Response) {}
    rpc Find(QuoteAdjustmentFlatData) returns (QuoteAdjustmentFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (QuoteAdjustmentFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream QuoteAdjustmentData) {}
    rpc FindList(routines.QueryList) returns (stream QuoteAdjustmentData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream QuoteAdjustmentData) {}
}


// Communication Event
message CommunicationEventData {
    option (routines.entity_type) = "CommunicationEvent";
    option (routines.keys).keys = "communication_event_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: communicationEventId
    // fields
    string communication_event_id = 1 [json_name = "communication_event_id", (google.api.graphql.relay_options).id = true];
    string communication_event_type_id = 2 [json_name = "communication_event_type_id"];
    string orig_comm_event_id = 3 [json_name = "orig_comm_event_id"];
    string parent_comm_event_id = 4 [json_name = "parent_comm_event_id"];
    string status_id = 5 [json_name = "status_id"];
    string contact_mech_type_id = 6 [json_name = "contact_mech_type_id"];
    string contact_mech_id_from = 7 [json_name = "contact_mech_id_from"];
    string contact_mech_id_to = 8 [json_name = "contact_mech_id_to"];
    string role_type_id_from = 9 [json_name = "role_type_id_from"];
    string role_type_id_to = 10 [json_name = "role_type_id_to"];
    string party_id_from = 11 [json_name = "party_id_from"];
    string party_id_to = 12 [json_name = "party_id_to"];
    google.protobuf.Timestamp entry_date = 13 [json_name = "entry_date"];
    google.protobuf.Timestamp datetime_started = 14 [json_name = "datetime_started"];
    google.protobuf.Timestamp datetime_ended = 15 [json_name = "datetime_ended"];
    string subject = 16 [json_name = "subject"];
    string content_mime_type_id = 17 [json_name = "content_mime_type_id"];
    string content = 18 [json_name = "content"];
    string note = 19 [json_name = "note"];
    string reason_enum_id = 20 [json_name = "reason_enum_id"];
    string contact_list_id = 21 [json_name = "contact_list_id"];
    string header_string = 22 [json_name = "header_string"];
    string from_text = 23 [json_name = "from_text"];
    string to_text = 24 [json_name = "to_text"];
    string cc_string = 25 [json_name = "cc_string"];
    string bcc_string = 26 [json_name = "bcc_string"];
    string message_id = 27 [json_name = "message_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 28 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 29 [json_name = "created_tx_stamp"];
    string tenant_id = 30 [json_name = "tenant_id"];
    
    
    // relations
    PartyData to_party = 32 [json_name = "to_party"]; // ref(ToParty): partyIdTo
    PartyRoleData to_party_role = 34 [json_name = "to_party_role"]; // ref(ToPartyRole): partyIdTo + roleTypeIdTo
    PartyData from_party = 35 [json_name = "from_party"]; // ref(FromParty): partyIdFrom
    PartyRoleData from_party_role = 37 [json_name = "from_party_role"]; // ref(FromPartyRole): partyIdFrom + roleTypeIdFrom
    ContactMechData from_contact_mech = 40 [json_name = "from_contact_mech"]; // ref(FromContactMech): contactMechIdFrom
    ContactMechData to_contact_mech = 41 [json_name = "to_contact_mech"]; // ref(ToContactMech): contactMechIdTo
    repeated CommunicationEventRoleData communication_event_role = 50 [json_name = "communication_event_role"]; // ref(CommunicationEventRole): communicationEventId
    TenantData tenant = 56 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 57;
    map<string, google.protobuf.Any> attachments = 58;
}



// The Communication Event service definition.
service CommunicationEventService {
    rpc Create(CommunicationEventData) returns (routines.Response) {}
    rpc StoreOrUpdate(CommunicationEventFlatData) returns (routines.Response) {}
    rpc Update(CommunicationEventFlatData) returns (routines.Response) {}
    rpc Delete(CommunicationEventFlatData) returns (routines.Response) {}
    rpc Find(CommunicationEventFlatData) returns (CommunicationEventFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (CommunicationEventFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream CommunicationEventData) {}
    rpc FindList(routines.QueryList) returns (stream CommunicationEventData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream CommunicationEventData) {}
}


// Recurrence Info
message RecurrenceInfoData {
    option (routines.entity_type) = "RecurrenceInfo";
    option (routines.keys).keys = "recurrence_info_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: recurrenceInfoId
    // fields
    string recurrence_info_id = 1 [json_name = "recurrence_info_id", (google.api.graphql.relay_options).id = true];
    google.protobuf.Timestamp start_date_time = 2 [json_name = "start_date_time"];
    string exception_date_times = 3 [json_name = "exception_date_times"];
    string recurrence_date_times = 4 [json_name = "recurrence_date_times"];
    string exception_rule_id = 5 [json_name = "exception_rule_id"];
    string recurrence_rule_id = 6 [json_name = "recurrence_rule_id"];
    int64 recurrence_count = 7 [json_name = "recurrence_count"];
    google.protobuf.Timestamp last_updated_tx_stamp = 8 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 9 [json_name = "created_tx_stamp"];
    string tenant_id = 10 [json_name = "tenant_id"];
    
    
    // relations
    RecurrenceRuleData recurrence_rule = 11 [json_name = "recurrence_rule"]; // ref(RecurrenceRule): recurrenceRuleId
    RecurrenceRuleData exception_recurrence_rule = 12 [json_name = "exception_recurrence_rule"]; // ref(ExceptionRecurrenceRule): exceptionRuleId
    repeated InvoiceData invoice = 13 [json_name = "invoice"]; // ref(Invoice): recurrenceInfoId
    repeated JobSandboxData job_sandbox = 14 [json_name = "job_sandbox"]; // ref(JobSandbox): recurrenceInfoId
    repeated ProductAssocData product_assoc = 15 [json_name = "product_assoc"]; // ref(ProductAssoc): recurrenceInfoId
    repeated ShoppingListData shopping_list = 16 [json_name = "shopping_list"]; // ref(ShoppingList): recurrenceInfoId
    repeated WorkEffortData work_effort = 17 [json_name = "work_effort"]; // ref(WorkEffort): recurrenceInfoId
    TenantData tenant = 18 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 19;
    map<string, google.protobuf.Any> attachments = 20;
}



// The Recurrence Info service definition.
service RecurrenceInfoService {
    rpc Create(RecurrenceInfoData) returns (routines.Response) {}
    rpc StoreOrUpdate(RecurrenceInfoFlatData) returns (routines.Response) {}
    rpc Update(RecurrenceInfoFlatData) returns (routines.Response) {}
    rpc Delete(RecurrenceInfoFlatData) returns (routines.Response) {}
    rpc Find(RecurrenceInfoFlatData) returns (RecurrenceInfoFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (RecurrenceInfoFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream RecurrenceInfoData) {}
    rpc FindList(routines.QueryList) returns (stream RecurrenceInfoData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream RecurrenceInfoData) {}
}


// Product Feature Category
message ProductFeatureCategoryData {
    option (routines.entity_type) = "ProductFeatureCategory";
    option (routines.keys).keys = "product_feature_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productFeatureCategoryId
    // fields
    string product_feature_category_id = 1 [json_name = "product_feature_category_id", (google.api.graphql.relay_options).id = true];
    string parent_category_id = 2 [json_name = "parent_category_id"];
    string description = 3 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 5 [json_name = "created_tx_stamp"];
    string tenant_id = 6 [json_name = "tenant_id"];
    
    
    // relations
    ProductFeatureCategoryData parent_product_feature_category = 7 [json_name = "parent_product_feature_category"]; // ref(ParentProductFeatureCategory): parentCategoryId
    repeated ProductFeatureData product_feature = 8 [json_name = "product_feature"]; // ref(ProductFeature): productFeatureCategoryId
    repeated ProductFeatureCategoryData child_product_feature_category = 9 [json_name = "child_product_feature_category"]; // ref(ChildProductFeatureCategory): productFeatureCategoryId
    repeated ProductFeatureCategoryApplData product_feature_category_appl = 10 [json_name = "product_feature_category_appl"]; // ref(ProductFeatureCategoryAppl): productFeatureCategoryId
    TenantData tenant = 11 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 12;
    map<string, google.protobuf.Any> attachments = 13;
}



// The Product Feature Category service definition.
service ProductFeatureCategoryService {
    rpc Create(ProductFeatureCategoryData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductFeatureCategoryFlatData) returns (routines.Response) {}
    rpc Update(ProductFeatureCategoryFlatData) returns (routines.Response) {}
    rpc Delete(ProductFeatureCategoryFlatData) returns (routines.Response) {}
    rpc Find(ProductFeatureCategoryFlatData) returns (ProductFeatureCategoryFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductFeatureCategoryFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductFeatureCategoryData) {}
    rpc FindList(routines.QueryList) returns (stream ProductFeatureCategoryData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductFeatureCategoryData) {}
}


// Survey Application Type
message SurveyApplTypeData {
    option (routines.entity_type) = "SurveyApplType";
    option (routines.keys).keys = "survey_appl_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: surveyApplTypeId
    // fields
    string survey_appl_type_id = 1 [json_name = "survey_appl_type_id", (google.api.graphql.relay_options).id = true];
    string description = 2 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 3 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 4 [json_name = "created_tx_stamp"];
    string tenant_id = 5 [json_name = "tenant_id"];
    
    
    // relations
    repeated ProductStoreSurveyApplData product_store_survey_appl = 6 [json_name = "product_store_survey_appl"]; // ref(ProductStoreSurveyAppl): surveyApplTypeId
    TenantData tenant = 8 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 9;
    map<string, google.protobuf.Any> attachments = 10;
}



// The Survey Application Type service definition.
service SurveyApplTypeService {
    rpc Create(SurveyApplTypeData) returns (routines.Response) {}
    rpc StoreOrUpdate(SurveyApplTypeFlatData) returns (routines.Response) {}
    rpc Update(SurveyApplTypeFlatData) returns (routines.Response) {}
    rpc Delete(SurveyApplTypeFlatData) returns (routines.Response) {}
    rpc Find(SurveyApplTypeFlatData) returns (SurveyApplTypeFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (SurveyApplTypeFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream SurveyApplTypeData) {}
    rpc FindList(routines.QueryList) returns (stream SurveyApplTypeData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream SurveyApplTypeData) {}
}


// Product Pice Rule
message ProductPriceRuleData {
    option (routines.entity_type) = "ProductPriceRule";
    option (routines.keys).keys = "product_price_rule_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productPriceRuleId
    // fields
    string product_price_rule_id = 1 [json_name = "product_price_rule_id", (google.api.graphql.relay_options).id = true];
    string rule_name = 2 [json_name = "rule_name"];
    string description = 3 [json_name = "description"];
    routines.Indicator is_sale = 4 [json_name = "is_sale"];
    google.protobuf.Timestamp from_date = 5 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 6 [json_name = "thru_date"];
    google.protobuf.Timestamp last_updated_tx_stamp = 7 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 8 [json_name = "created_tx_stamp"];
    string tenant_id = 9 [json_name = "tenant_id"];
    
    
    // relations
    repeated OrderItemPriceInfoData order_item_price_info = 11 [json_name = "order_item_price_info"]; // ref(OrderItemPriceInfo): productPriceRuleId
    repeated ProductPriceActionData product_price_action = 12 [json_name = "product_price_action"]; // ref(ProductPriceAction): productPriceRuleId
    repeated ProductPriceCondData product_price_cond = 13 [json_name = "product_price_cond"]; // ref(ProductPriceCond): productPriceRuleId
    TenantData tenant = 14 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 15;
    map<string, google.protobuf.Any> attachments = 16;
}



// The Product Pice Rule service definition.
service ProductPriceRuleService {
    rpc Create(ProductPriceRuleData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductPriceRuleFlatData) returns (routines.Response) {}
    rpc Update(ProductPriceRuleFlatData) returns (routines.Response) {}
    rpc Delete(ProductPriceRuleFlatData) returns (routines.Response) {}
    rpc Find(ProductPriceRuleFlatData) returns (ProductPriceRuleFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductPriceRuleFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductPriceRuleData) {}
    rpc FindList(routines.QueryList) returns (stream ProductPriceRuleData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductPriceRuleData) {}
}


// Payment Application
message PaymentApplicationData {
    option (routines.entity_type) = "PaymentApplication";
    option (routines.keys).keys = "payment_application_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: paymentApplicationId
    // fields
    string payment_application_id = 1 [json_name = "payment_application_id", (google.api.graphql.relay_options).id = true];
    string payment_id = 2 [json_name = "payment_id"];
    string invoice_id = 3 [json_name = "invoice_id"];
    string invoice_item_seq_id = 4 [json_name = "invoice_item_seq_id"];
    string billing_account_id = 5 [json_name = "billing_account_id"];
    string override_gl_account_id = 6 [json_name = "override_gl_account_id"];
    string to_payment_id = 7 [json_name = "to_payment_id"];
    string tax_auth_geo_id = 8 [json_name = "tax_auth_geo_id"];
    routines.Currency amount_applied = 9 [json_name = "amount_applied"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 11 [json_name = "created_tx_stamp"];
    string tenant_id = 12 [json_name = "tenant_id"];
    
    
    // relations
    PaymentData payment = 13 [json_name = "payment"]; // ref(Payment): paymentId
    InvoiceData invoice = 14 [json_name = "invoice"]; // ref(Invoice): invoiceId
    InvoiceItemData invoice_item = 15 [json_name = "invoice_item"]; // ref(InvoiceItem): invoiceId + invoiceItemSeqId
    BillingAccountData billing_account = 16 [json_name = "billing_account"]; // ref(BillingAccount): billingAccountId
    PaymentData to_payment = 17 [json_name = "to_payment"]; // ref(ToPayment): toPaymentId
    GlAccountData gl_account = 19 [json_name = "gl_account"]; // ref(GlAccount): overrideGlAccountId
    TenantData tenant = 20 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 21;
    map<string, google.protobuf.Any> attachments = 22;
}



// The Payment Application service definition.
service PaymentApplicationService {
    rpc Create(PaymentApplicationData) returns (routines.Response) {}
    rpc StoreOrUpdate(PaymentApplicationFlatData) returns (routines.Response) {}
    rpc Update(PaymentApplicationFlatData) returns (routines.Response) {}
    rpc Delete(PaymentApplicationFlatData) returns (routines.Response) {}
    rpc Find(PaymentApplicationFlatData) returns (PaymentApplicationFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PaymentApplicationFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PaymentApplicationData) {}
    rpc FindList(routines.QueryList) returns (stream PaymentApplicationData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PaymentApplicationData) {}
}


// CustRequest
message CustRequestData {
    option (routines.entity_type) = "CustRequest";
    option (routines.keys).keys = "cust_request_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: custRequestId
    // fields
    string cust_request_id = 1 [json_name = "cust_request_id", (google.api.graphql.relay_options).id = true];
    string cust_request_type_id = 2 [json_name = "cust_request_type_id"];
    string cust_request_category_id = 3 [json_name = "cust_request_category_id"];
    string status_id = 4 [json_name = "status_id"];
    string from_party_id = 5 [json_name = "from_party_id"];
    int64 priority = 6 [json_name = "priority"];
    google.protobuf.Timestamp cust_request_date = 7 [json_name = "cust_request_date"];
    google.protobuf.Timestamp response_required_date = 8 [json_name = "response_required_date"];
    string cust_request_name = 9 [json_name = "cust_request_name"];
    string description = 10 [json_name = "description"];
    string maximum_amount_uom_id = 11 [json_name = "maximum_amount_uom_id"];
    string product_store_id = 12 [json_name = "product_store_id"];
    string sales_channel_enum_id = 13 [json_name = "sales_channel_enum_id"];
    string fulfill_contact_mech_id = 14 [json_name = "fulfill_contact_mech_id"];
    string currency_uom_id = 15 [json_name = "currency_uom_id"];
    google.protobuf.Timestamp open_date_time = 16 [json_name = "open_date_time"];
    google.protobuf.Timestamp closed_date_time = 17 [json_name = "closed_date_time"];
    string internal_comment = 18 [json_name = "internal_comment"];
    string reason = 19 [json_name = "reason"];
    google.protobuf.Timestamp created_date = 20 [json_name = "created_date"];
    string created_by_user_login = 21 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 22 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 23 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 24 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 25 [json_name = "created_tx_stamp"];
    double cust_estimated_milli_seconds = 26 [json_name = "cust_estimated_milli_seconds"];
    int64 cust_sequence_num = 27 [json_name = "cust_sequence_num"];
    string parent_cust_request_id = 28 [json_name = "parent_cust_request_id"];
    routines.Indicator billed = 29 [json_name = "billed"];
    string tenant_id = 30 [json_name = "tenant_id"];
    
    
    // relations
    CustRequestTypeData cust_request_type = 31 [json_name = "cust_request_type"]; // ref(CustRequestType): custRequestTypeId
    PartyData from_party = 34 [json_name = "from_party"]; // ref(FromParty): fromPartyId
    ProductStoreData product_store = 36 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    ContactMechData fulfill_contact_mech = 39 [json_name = "fulfill_contact_mech"]; // ref(FulfillContactMech): fulfillContactMechId
    CustRequestData parent_cust_request = 41 [json_name = "parent_cust_request"]; // ref(ParentCustRequest): parentCustRequestId
    repeated CustRequestData child_cust_request = 42 [json_name = "child_cust_request"]; // ref(ChildCustRequest): custRequestId
    repeated CustRequestItemData cust_request_item = 46 [json_name = "cust_request_item"]; // ref(CustRequestItem): custRequestId
    repeated QuoteItemData quote_item = 52 [json_name = "quote_item"]; // ref(QuoteItem): custRequestId
    TenantData tenant = 55 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 56;
    map<string, google.protobuf.Any> attachments = 57;
}



// The CustRequest service definition.
service CustRequestService {
    rpc Create(CustRequestData) returns (routines.Response) {}
    rpc StoreOrUpdate(CustRequestFlatData) returns (routines.Response) {}
    rpc Update(CustRequestFlatData) returns (routines.Response) {}
    rpc Delete(CustRequestFlatData) returns (routines.Response) {}
    rpc Find(CustRequestFlatData) returns (CustRequestFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (CustRequestFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream CustRequestData) {}
    rpc FindList(routines.QueryList) returns (stream CustRequestData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream CustRequestData) {}
}


// Shipment Receipt
message ShipmentReceiptData {
    option (routines.entity_type) = "ShipmentReceipt";
    option (routines.keys).keys = "receipt_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: receiptId
    // fields
    string receipt_id = 1 [json_name = "receipt_id", (google.api.graphql.relay_options).id = true];
    string inventory_item_id = 2 [json_name = "inventory_item_id"];
    string product_id = 3 [json_name = "product_id"];
    string shipment_id = 4 [json_name = "shipment_id"];
    string shipment_item_seq_id = 5 [json_name = "shipment_item_seq_id"];
    string shipment_package_seq_id = 6 [json_name = "shipment_package_seq_id"];
    string order_id = 7 [json_name = "order_id"];
    string order_item_seq_id = 8 [json_name = "order_item_seq_id"];
    string return_id = 9 [json_name = "return_id"];
    string return_item_seq_id = 10 [json_name = "return_item_seq_id"];
    string rejection_id = 11 [json_name = "rejection_id"];
    string received_by_user_login_id = 12 [json_name = "received_by_user_login_id"];
    google.protobuf.Timestamp datetime_received = 13 [json_name = "datetime_received"];
    string item_description = 14 [json_name = "item_description"];
    routines.FixedPoint quantity_accepted = 15 [json_name = "quantity_accepted"];
    routines.FixedPoint quantity_rejected = 16 [json_name = "quantity_rejected"];
    google.protobuf.Timestamp last_updated_tx_stamp = 17 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 18 [json_name = "created_tx_stamp"];
    string tenant_id = 19 [json_name = "tenant_id"];
    
    
    // relations
    InventoryItemData inventory_item = 20 [json_name = "inventory_item"]; // ref(InventoryItem): inventoryItemId
    ProductData product = 21 [json_name = "product"]; // ref(Product): productId
    ShipmentPackageData shipment_package = 22 [json_name = "shipment_package"]; // ref(ShipmentPackage): shipmentId + shipmentPackageSeqId
    OrderHeaderData order_header = 23 [json_name = "order_header"]; // ref(OrderHeader): orderId
    OrderItemData order_item = 24 [json_name = "order_item"]; // ref(OrderItem): orderId + orderItemSeqId
    ShipmentData shipment = 27 [json_name = "shipment"]; // ref(Shipment): shipmentId
    ShipmentItemData shipment_item = 28 [json_name = "shipment_item"]; // ref(ShipmentItem): shipmentId + shipmentItemSeqId
    ReturnItemData return_item = 29 [json_name = "return_item"]; // ref(ReturnItem): returnId + returnItemSeqId
    repeated AcctgTransData acctg_trans = 30 [json_name = "acctg_trans"]; // ref(AcctgTrans): receiptId
    repeated InventoryItemDetailData inventory_item_detail = 31 [json_name = "inventory_item_detail"]; // ref(InventoryItemDetail): receiptId
    repeated OrderItemBillingData order_item_billing = 32 [json_name = "order_item_billing"]; // ref(OrderItemBilling): receiptId
    TenantData tenant = 35 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 36;
    map<string, google.protobuf.Any> attachments = 37;
}



// The Shipment Receipt service definition.
service ShipmentReceiptService {
    rpc Create(ShipmentReceiptData) returns (routines.Response) {}
    rpc StoreOrUpdate(ShipmentReceiptFlatData) returns (routines.Response) {}
    rpc Update(ShipmentReceiptFlatData) returns (routines.Response) {}
    rpc Delete(ShipmentReceiptFlatData) returns (routines.Response) {}
    rpc Find(ShipmentReceiptFlatData) returns (ShipmentReceiptFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ShipmentReceiptFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ShipmentReceiptData) {}
    rpc FindList(routines.QueryList) returns (stream ShipmentReceiptData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ShipmentReceiptData) {}
}


// Product Store Survey Application
message ProductStoreSurveyApplData {
    option (routines.entity_type) = "ProductStoreSurveyAppl";
    option (routines.keys).keys = "product_store_survey_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productStoreSurveyId
    // fields
    string product_store_survey_id = 1 [json_name = "product_store_survey_id", (google.api.graphql.relay_options).id = true];
    string product_store_id = 2 [json_name = "product_store_id"];
    string survey_appl_type_id = 3 [json_name = "survey_appl_type_id"];
    string group_name = 4 [json_name = "group_name"];
    string survey_id = 5 [json_name = "survey_id"];
    string product_id = 6 [json_name = "product_id"];
    string product_category_id = 7 [json_name = "product_category_id"];
    google.protobuf.Timestamp from_date = 8 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 9 [json_name = "thru_date"];
    string survey_template = 10 [json_name = "survey_template"];
    string result_template = 11 [json_name = "result_template"];
    int64 sequence_num = 12 [json_name = "sequence_num"];
    google.protobuf.Timestamp last_updated_tx_stamp = 13 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 14 [json_name = "created_tx_stamp"];
    string tenant_id = 15 [json_name = "tenant_id"];
    
    
    // relations
    ProductStoreData product_store = 16 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    SurveyData survey = 17 [json_name = "survey"]; // ref(Survey): surveyId
    SurveyApplTypeData survey_appl_type = 18 [json_name = "survey_appl_type"]; // ref(SurveyApplType): surveyApplTypeId
    ProductData product = 19 [json_name = "product"]; // ref(Product): productId
    ProductCategoryData product_category = 20 [json_name = "product_category"]; // ref(ProductCategory): productCategoryId
    TenantData tenant = 22 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 23;
    map<string, google.protobuf.Any> attachments = 24;
}



// The Product Store Survey Application service definition.
service ProductStoreSurveyApplService {
    rpc Create(ProductStoreSurveyApplData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductStoreSurveyApplFlatData) returns (routines.Response) {}
    rpc Update(ProductStoreSurveyApplFlatData) returns (routines.Response) {}
    rpc Delete(ProductStoreSurveyApplFlatData) returns (routines.Response) {}
    rpc Find(ProductStoreSurveyApplFlatData) returns (ProductStoreSurveyApplFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductStoreSurveyApplFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductStoreSurveyApplData) {}
    rpc FindList(routines.QueryList) returns (stream ProductStoreSurveyApplData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductStoreSurveyApplData) {}
}


// Postal Address
message PostalAddressData {
    option (routines.entity_type) = "PostalAddress";
    option (routines.keys).keys = "contact_mech_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: contactMechId
    // fields
    string contact_mech_id = 1 [json_name = "contact_mech_id", (google.api.graphql.relay_options).id = true];
    string to_name = 2 [json_name = "to_name"];
    string attn_name = 3 [json_name = "attn_name"];
    string address1 = 4 [json_name = "address1"];
    string address2 = 5 [json_name = "address2"];
    int64 house_number = 6 [json_name = "house_number"];
    string house_number_ext = 7 [json_name = "house_number_ext"];
    string directions = 8 [json_name = "directions"];
    string city = 9 [json_name = "city"];
    string city_geo_id = 10 [json_name = "city_geo_id"];
    string postal_code = 11 [json_name = "postal_code"];
    string postal_code_ext = 12 [json_name = "postal_code_ext"];
    string country_geo_id = 13 [json_name = "country_geo_id"];
    string state_province_geo_id = 14 [json_name = "state_province_geo_id"];
    string county_geo_id = 15 [json_name = "county_geo_id"];
    string municipality_geo_id = 16 [json_name = "municipality_geo_id"];
    string postal_code_geo_id = 17 [json_name = "postal_code_geo_id"];
    string geo_point_id = 18 [json_name = "geo_point_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 19 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 20 [json_name = "created_tx_stamp"];
    string tenant_id = 21 [json_name = "tenant_id"];
    
    
    // relations
    ContactMechData contact_mech = 22 [json_name = "contact_mech"]; // ref(ContactMech): contactMechId
    GeoPointData geo_point = 29 [json_name = "geo_point"]; // ref(GeoPoint): geoPointId
    repeated BillingAccountData billing_account = 30 [json_name = "billing_account"]; // ref(BillingAccount): contactMechId
    repeated CreditCardData credit_card = 32 [json_name = "credit_card"]; // ref(CreditCard): contactMechId
    repeated EftAccountData eft_account = 33 [json_name = "eft_account"]; // ref(EftAccount): contactMechId
    repeated OrderItemShipGroupData order_item_ship_group = 35 [json_name = "order_item_ship_group"]; // ref(OrderItemShipGroup): contactMechId
    repeated PartyContactMechData party_contact_mech = 36 [json_name = "party_contact_mech"]; // ref(PartyContactMech): contactMechId
    repeated PartyContactMechPurposeData party_contact_mech_purpose = 37 [json_name = "party_contact_mech_purpose"]; // ref(PartyContactMechPurpose): contactMechId
    repeated ReturnHeaderData return_header = 40 [json_name = "return_header"]; // ref(ReturnHeader): contactMechId
    repeated ShipmentData origin_shipment = 41 [json_name = "origin_shipment"]; // ref(OriginShipment): contactMechId
    repeated ShipmentData destination_shipment = 42 [json_name = "destination_shipment"]; // ref(DestinationShipment): contactMechId
    repeated ShipmentRouteSegmentData origin_shipment_route_segment = 43 [json_name = "origin_shipment_route_segment"]; // ref(OriginShipmentRouteSegment): contactMechId
    repeated ShipmentRouteSegmentData dest_shipment_route_segment = 44 [json_name = "dest_shipment_route_segment"]; // ref(DestShipmentRouteSegment): contactMechId
    repeated ShoppingListData shopping_list = 45 [json_name = "shopping_list"]; // ref(ShoppingList): contactMechId
    TenantData tenant = 46 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 47;
    map<string, google.protobuf.Any> attachments = 48;
}



// The Postal Address service definition.
service PostalAddressService {
    rpc Create(PostalAddressData) returns (routines.Response) {}
    rpc StoreOrUpdate(PostalAddressFlatData) returns (routines.Response) {}
    rpc Update(PostalAddressFlatData) returns (routines.Response) {}
    rpc Delete(PostalAddressFlatData) returns (routines.Response) {}
    rpc Find(PostalAddressFlatData) returns (PostalAddressFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PostalAddressFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PostalAddressData) {}
    rpc FindList(routines.QueryList) returns (stream PostalAddressData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PostalAddressData) {}
}


// Requirement
message RequirementData {
    option (routines.entity_type) = "Requirement";
    option (routines.keys).keys = "requirement_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: requirementId
    // fields
    string requirement_id = 1 [json_name = "requirement_id", (google.api.graphql.relay_options).id = true];
    string requirement_type_id = 2 [json_name = "requirement_type_id"];
    string facility_id = 3 [json_name = "facility_id"];
    string deliverable_id = 4 [json_name = "deliverable_id"];
    string fixed_asset_id = 5 [json_name = "fixed_asset_id"];
    string product_id = 6 [json_name = "product_id"];
    string status_id = 7 [json_name = "status_id"];
    string description = 8 [json_name = "description"];
    google.protobuf.Timestamp requirement_start_date = 9 [json_name = "requirement_start_date"];
    google.protobuf.Timestamp required_by_date = 10 [json_name = "required_by_date"];
    routines.Currency estimated_budget = 11 [json_name = "estimated_budget"];
    routines.FixedPoint quantity = 12 [json_name = "quantity"];
    string use_case = 13 [json_name = "use_case"];
    string reason = 14 [json_name = "reason"];
    google.protobuf.Timestamp created_date = 15 [json_name = "created_date"];
    string created_by_user_login = 16 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 17 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 18 [json_name = "last_modified_by_user_login"];
    string facility_id_to = 19 [json_name = "facility_id_to"];
    google.protobuf.Timestamp last_updated_tx_stamp = 20 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 21 [json_name = "created_tx_stamp"];
    string tenant_id = 22 [json_name = "tenant_id"];
    
    
    // relations
    FacilityData facility = 25 [json_name = "facility"]; // ref(Facility): facilityId
    FixedAssetData fixed_asset = 27 [json_name = "fixed_asset"]; // ref(FixedAsset): fixedAssetId
    ProductData product = 28 [json_name = "product"]; // ref(Product): productId
    TenantData tenant = 38 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 39;
    map<string, google.protobuf.Any> attachments = 40;
}



// The Requirement service definition.
service RequirementService {
    rpc Create(RequirementData) returns (routines.Response) {}
    rpc StoreOrUpdate(RequirementFlatData) returns (routines.Response) {}
    rpc Update(RequirementFlatData) returns (routines.Response) {}
    rpc Delete(RequirementFlatData) returns (routines.Response) {}
    rpc Find(RequirementFlatData) returns (RequirementFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (RequirementFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream RequirementData) {}
    rpc FindList(routines.QueryList) returns (stream RequirementData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream RequirementData) {}
}


// Email Template Setting
message EmailTemplateSettingData {
    option (routines.entity_type) = "EmailTemplateSetting";
    option (routines.keys).keys = "email_template_setting_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: emailTemplateSettingId
    // fields
    string email_template_setting_id = 1 [json_name = "email_template_setting_id", (google.api.graphql.relay_options).id = true];
    string email_type = 2 [json_name = "email_type"];
    string description = 3 [json_name = "description"];
    string body_screen_location = 4 [json_name = "body_screen_location"];
    string xslfo_attach_screen_location = 5 [json_name = "xslfo_attach_screen_location"];
    string from_address = 6 [json_name = "from_address"];
    string cc_address = 7 [json_name = "cc_address"];
    string bcc_address = 8 [json_name = "bcc_address"];
    string subject = 9 [json_name = "subject"];
    string content_type = 10 [json_name = "content_type"];
    google.protobuf.Timestamp last_updated_tx_stamp = 11 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 12 [json_name = "created_tx_stamp"];
    string tenant_id = 13 [json_name = "tenant_id"];
    
    
    // relations
    TenantData tenant = 15 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 16;
    map<string, google.protobuf.Any> attachments = 17;
}



// The Email Template Setting service definition.
service EmailTemplateSettingService {
    rpc Create(EmailTemplateSettingData) returns (routines.Response) {}
    rpc StoreOrUpdate(EmailTemplateSettingFlatData) returns (routines.Response) {}
    rpc Update(EmailTemplateSettingFlatData) returns (routines.Response) {}
    rpc Delete(EmailTemplateSettingFlatData) returns (routines.Response) {}
    rpc Find(EmailTemplateSettingFlatData) returns (EmailTemplateSettingFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (EmailTemplateSettingFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream EmailTemplateSettingData) {}
    rpc FindList(routines.QueryList) returns (stream EmailTemplateSettingData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream EmailTemplateSettingData) {}
}


// Product Store Carrier Shipment Method
message ProductStoreShipmentMethData {
    option (routines.entity_type) = "ProductStoreShipmentMeth";
    option (routines.keys).keys = "product_store_ship_meth_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productStoreShipMethId
    // fields
    string product_store_ship_meth_id = 1 [json_name = "product_store_ship_meth_id", (google.api.graphql.relay_options).id = true];
    string product_store_id = 2 [json_name = "product_store_id"];
    string shipment_method_type_id = 3 [json_name = "shipment_method_type_id"];
    string party_id = 4 [json_name = "party_id"];
    string role_type_id = 5 [json_name = "role_type_id"];
    string company_party_id = 6 [json_name = "company_party_id"];
    routines.FixedPoint min_weight = 7 [json_name = "min_weight"];
    routines.FixedPoint max_weight = 8 [json_name = "max_weight"];
    routines.FixedPoint min_size = 9 [json_name = "min_size"];
    routines.FixedPoint max_size = 10 [json_name = "max_size"];
    routines.Currency min_total = 11 [json_name = "min_total"];
    routines.Currency max_total = 12 [json_name = "max_total"];
    routines.Indicator allow_usps_addr = 13 [json_name = "allow_usps_addr"];
    routines.Indicator require_usps_addr = 14 [json_name = "require_usps_addr"];
    routines.Indicator allow_company_addr = 15 [json_name = "allow_company_addr"];
    routines.Indicator require_company_addr = 16 [json_name = "require_company_addr"];
    routines.Indicator include_no_charge_items = 17 [json_name = "include_no_charge_items"];
    string include_feature_group = 18 [json_name = "include_feature_group"];
    string exclude_feature_group = 19 [json_name = "exclude_feature_group"];
    string include_geo_id = 20 [json_name = "include_geo_id"];
    string exclude_geo_id = 21 [json_name = "exclude_geo_id"];
    string service_name = 22 [json_name = "service_name"];
    string config_props = 23 [json_name = "config_props"];
    string shipment_custom_method_id = 24 [json_name = "shipment_custom_method_id"];
    string shipment_gateway_config_id = 25 [json_name = "shipment_gateway_config_id"];
    int64 sequence_number = 26 [json_name = "sequence_number"];
    routines.FixedPoint allowance_percent = 27 [json_name = "allowance_percent"];
    routines.Currency minimum_price = 28 [json_name = "minimum_price"];
    google.protobuf.Timestamp last_updated_tx_stamp = 29 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 30 [json_name = "created_tx_stamp"];
    string tenant_id = 31 [json_name = "tenant_id"];
    
    
    // relations
    PartyData party = 32 [json_name = "party"]; // ref(Party): companyPartyId
    ShipmentMethodTypeData shipment_method_type = 33 [json_name = "shipment_method_type"]; // ref(ShipmentMethodType): shipmentMethodTypeId
    CustomMethodData custom_method = 37 [json_name = "custom_method"]; // ref(CustomMethod): shipmentCustomMethodId
    repeated ShipmentCostEstimateData shipment_cost_estimate = 38 [json_name = "shipment_cost_estimate"]; // ref(ShipmentCostEstimate): productStoreShipMethId
    TenantData tenant = 39 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 40;
    map<string, google.protobuf.Any> attachments = 41;
}



// The Product Store Carrier Shipment Method service definition.
service ProductStoreShipmentMethService {
    rpc Create(ProductStoreShipmentMethData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductStoreShipmentMethFlatData) returns (routines.Response) {}
    rpc Update(ProductStoreShipmentMethFlatData) returns (routines.Response) {}
    rpc Delete(ProductStoreShipmentMethFlatData) returns (routines.Response) {}
    rpc Find(ProductStoreShipmentMethFlatData) returns (ProductStoreShipmentMethFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductStoreShipmentMethFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductStoreShipmentMethData) {}
    rpc FindList(routines.QueryList) returns (stream ProductStoreShipmentMethData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductStoreShipmentMethData) {}
}


// Survey
message SurveyData {
    option (routines.entity_type) = "Survey";
    option (routines.keys).keys = "survey_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: surveyId
    // fields
    string survey_id = 1 [json_name = "survey_id", (google.api.graphql.relay_options).id = true];
    string survey_name = 2 [json_name = "survey_name"];
    string description = 3 [json_name = "description"];
    string comments = 4 [json_name = "comments"];
    string submit_caption = 5 [json_name = "submit_caption"];
    string response_service = 6 [json_name = "response_service"];
    routines.Indicator is_anonymous = 7 [json_name = "is_anonymous"];
    routines.Indicator allow_multiple = 8 [json_name = "allow_multiple"];
    routines.Indicator allow_update = 9 [json_name = "allow_update"];
    string acro_form_content_id = 10 [json_name = "acro_form_content_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 11 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 12 [json_name = "created_tx_stamp"];
    string tenant_id = 13 [json_name = "tenant_id"];
    
    
    // relations
    repeated DataResourceData data_resource = 14 [json_name = "data_resource"]; // ref(DataResource): surveyId
    repeated ProductStoreFinActSettingData product_store_fin_act_setting = 15 [json_name = "product_store_fin_act_setting"]; // ref(ProductStoreFinActSetting): surveyId
    repeated ProductStoreSurveyApplData product_store_survey_appl = 16 [json_name = "product_store_survey_appl"]; // ref(ProductStoreSurveyAppl): surveyId
    repeated SurveyMultiRespData survey_multi_resp = 17 [json_name = "survey_multi_resp"]; // ref(SurveyMultiResp): surveyId
    repeated SurveyPageData survey_page = 18 [json_name = "survey_page"]; // ref(SurveyPage): surveyId
    repeated SurveyQuestionApplData survey_question_appl = 19 [json_name = "survey_question_appl"]; // ref(SurveyQuestionAppl): surveyId
    TenantData tenant = 23 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 24;
    map<string, google.protobuf.Any> attachments = 25;
}



// The Survey service definition.
service SurveyService {
    rpc Create(SurveyData) returns (routines.Response) {}
    rpc StoreOrUpdate(SurveyFlatData) returns (routines.Response) {}
    rpc Update(SurveyFlatData) returns (routines.Response) {}
    rpc Delete(SurveyFlatData) returns (routines.Response) {}
    rpc Find(SurveyFlatData) returns (SurveyFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (SurveyFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream SurveyData) {}
    rpc FindList(routines.QueryList) returns (stream SurveyData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream SurveyData) {}
}


// Content
message ContentData {
    option (routines.entity_type) = "Content";
    option (routines.keys).keys = "content_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: contentId
    // fields
    string content_id = 1 [json_name = "content_id", (google.api.graphql.relay_options).id = true];
    string content_type_id = 2 [json_name = "content_type_id"];
    string owner_content_id = 3 [json_name = "owner_content_id"];
    string decorator_content_id = 4 [json_name = "decorator_content_id"];
    string instance_of_content_id = 5 [json_name = "instance_of_content_id"];
    string data_resource_id = 6 [json_name = "data_resource_id"];
    string template_data_resource_id = 7 [json_name = "template_data_resource_id"];
    string data_source_id = 8 [json_name = "data_source_id"];
    string status_id = 9 [json_name = "status_id"];
    string privilege_enum_id = 10 [json_name = "privilege_enum_id"];
    string service_name = 11 [json_name = "service_name"];
    string custom_method_id = 12 [json_name = "custom_method_id"];
    string content_name = 13 [json_name = "content_name"];
    string description = 14 [json_name = "description"];
    string locale_string = 15 [json_name = "locale_string"];
    string mime_type_id = 16 [json_name = "mime_type_id"];
    string character_set_id = 17 [json_name = "character_set_id"];
    int64 child_leaf_count = 18 [json_name = "child_leaf_count"];
    int64 child_branch_count = 19 [json_name = "child_branch_count"];
    google.protobuf.Timestamp created_date = 20 [json_name = "created_date"];
    string created_by_user_login = 21 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 22 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 23 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 24 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 25 [json_name = "created_tx_stamp"];
    string tenant_id = 26 [json_name = "tenant_id"];
    
    
    // relations
    DataResourceData data_resource = 28 [json_name = "data_resource"]; // ref(DataResource): dataResourceId
    DataResourceData template_data_resource = 29 [json_name = "template_data_resource"]; // ref(TemplateDataResource): templateDataResourceId
    CustomMethodData custom_method = 32 [json_name = "custom_method"]; // ref(CustomMethod): customMethodId
    ContentData decorator_content = 40 [json_name = "decorator_content"]; // ref(DecoratorContent): decoratorContentId
    ContentData owner_content = 41 [json_name = "owner_content"]; // ref(OwnerContent): ownerContentId
    ContentData instance_of_content = 42 [json_name = "instance_of_content"]; // ref(InstanceOfContent): instanceOfContentId
    repeated ContentAssocData from_content_assoc = 48 [json_name = "from_content_assoc"]; // ref(FromContentAssoc): contentId
    repeated ContentAssocData to_content_assoc = 49 [json_name = "to_content_assoc"]; // ref(ToContentAssoc): contentId
    repeated ContentAttributeData content_attribute = 50 [json_name = "content_attribute"]; // ref(ContentAttribute): contentId
    repeated ContentRoleData content_role = 55 [json_name = "content_role"]; // ref(ContentRole): contentId
    repeated ProductCategoryContentData product_category_content = 65 [json_name = "product_category_content"]; // ref(ProductCategoryContent): contentId
    repeated ProductContentData product_content = 66 [json_name = "product_content"]; // ref(ProductContent): contentId
    repeated SubscriptionResourceData subscription_resource = 68 [json_name = "subscription_resource"]; // ref(SubscriptionResource): contentId
    repeated WebSiteContentData web_site_content = 71 [json_name = "web_site_content"]; // ref(WebSiteContent): contentId
    TenantData tenant = 75 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 76;
    map<string, google.protobuf.Any> attachments = 77;
}



// The Content service definition.
service ContentService {
    rpc Create(ContentData) returns (routines.Response) {}
    rpc StoreOrUpdate(ContentFlatData) returns (routines.Response) {}
    rpc Update(ContentFlatData) returns (routines.Response) {}
    rpc Delete(ContentFlatData) returns (routines.Response) {}
    rpc Find(ContentFlatData) returns (ContentFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ContentFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ContentData) {}
    rpc FindList(routines.QueryList) returns (stream ContentData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ContentData) {}
}


// EmplPosition Type
message EmplPositionTypeData {
    option (routines.entity_type) = "EmplPositionType";
    option (routines.keys).keys = "empl_position_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: emplPositionTypeId
    // fields
    string empl_position_type_id = 1 [json_name = "empl_position_type_id", (google.api.graphql.relay_options).id = true];
    string parent_type_id = 2 [json_name = "parent_type_id"];
    routines.Indicator has_table = 3 [json_name = "has_table"];
    string description = 4 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 6 [json_name = "created_tx_stamp"];
    string tenant_id = 7 [json_name = "tenant_id"];
    
    
    // relations
    EmplPositionTypeData parent_empl_position_type = 8 [json_name = "parent_empl_position_type"]; // ref(ParentEmplPositionType): parentTypeId
    repeated EmplPositionTypeData child_empl_position_type = 10 [json_name = "child_empl_position_type"]; // ref(ChildEmplPositionType): emplPositionTypeId
    repeated RateAmountData rate_amount = 13 [json_name = "rate_amount"]; // ref(RateAmount): emplPositionTypeId
    TenantData tenant = 15 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 16;
    map<string, google.protobuf.Any> attachments = 17;
}



// The EmplPosition Type service definition.
service EmplPositionTypeService {
    rpc Create(EmplPositionTypeData) returns (routines.Response) {}
    rpc StoreOrUpdate(EmplPositionTypeFlatData) returns (routines.Response) {}
    rpc Update(EmplPositionTypeFlatData) returns (routines.Response) {}
    rpc Delete(EmplPositionTypeFlatData) returns (routines.Response) {}
    rpc Find(EmplPositionTypeFlatData) returns (EmplPositionTypeFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (EmplPositionTypeFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream EmplPositionTypeData) {}
    rpc FindList(routines.QueryList) returns (stream EmplPositionTypeData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream EmplPositionTypeData) {}
}


// Payment Method
message PaymentMethodData {
    option (routines.entity_type) = "PaymentMethod";
    option (routines.keys).keys = "payment_method_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: paymentMethodId
    // fields
    string payment_method_id = 1 [json_name = "payment_method_id", (google.api.graphql.relay_options).id = true];
    string payment_method_type_id = 2 [json_name = "payment_method_type_id"];
    string party_id = 3 [json_name = "party_id"];
    string gl_account_id = 4 [json_name = "gl_account_id"];
    string fin_account_id = 5 [json_name = "fin_account_id"];
    string description = 6 [json_name = "description"];
    google.protobuf.Timestamp from_date = 7 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 8 [json_name = "thru_date"];
    google.protobuf.Timestamp last_updated_tx_stamp = 9 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 10 [json_name = "created_tx_stamp"];
    string tenant_id = 11 [json_name = "tenant_id"];
    
    
    // relations
    PartyData party = 13 [json_name = "party"]; // ref(Party): partyId
    GlAccountData gl_account = 14 [json_name = "gl_account"]; // ref(GlAccount): glAccountId
    FinAccountData fin_account = 15 [json_name = "fin_account"]; // ref(FinAccount): finAccountId
    CreditCardData credit_card = 17 [json_name = "credit_card"]; // ref(CreditCard): paymentMethodId
    EftAccountData eft_account = 18 [json_name = "eft_account"]; // ref(EftAccount): paymentMethodId
    repeated FinAccountData replenish_fin_account = 19 [json_name = "replenish_fin_account"]; // ref(ReplenishFinAccount): paymentMethodId
    repeated OrderPaymentPreferenceData order_payment_preference = 21 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): paymentMethodId
    repeated PartyAcctgPreferenceData party_acctg_preference = 22 [json_name = "party_acctg_preference"]; // ref(PartyAcctgPreference): paymentMethodId
    repeated PaymentData payment = 24 [json_name = "payment"]; // ref(Payment): paymentMethodId
    repeated PaymentGatewayResponseData payment_gateway_response = 25 [json_name = "payment_gateway_response"]; // ref(PaymentGatewayResponse): paymentMethodId
    repeated ReturnHeaderData return_header = 26 [json_name = "return_header"]; // ref(ReturnHeader): paymentMethodId
    repeated ShoppingListData shopping_list = 27 [json_name = "shopping_list"]; // ref(ShoppingList): paymentMethodId
    TenantData tenant = 28 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 29;
    map<string, google.protobuf.Any> attachments = 30;
}



// The Payment Method service definition.
service PaymentMethodService {
    rpc Create(PaymentMethodData) returns (routines.Response) {}
    rpc StoreOrUpdate(PaymentMethodFlatData) returns (routines.Response) {}
    rpc Update(PaymentMethodFlatData) returns (routines.Response) {}
    rpc Delete(PaymentMethodFlatData) returns (routines.Response) {}
    rpc Find(PaymentMethodFlatData) returns (PaymentMethodFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PaymentMethodFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PaymentMethodData) {}
    rpc FindList(routines.QueryList) returns (stream PaymentMethodData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PaymentMethodData) {}
}


// Order Item Price Info
message OrderItemPriceInfoData {
    option (routines.entity_type) = "OrderItemPriceInfo";
    option (routines.keys).keys = "order_item_price_info_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: orderItemPriceInfoId
    // fields
    string order_item_price_info_id = 1 [json_name = "order_item_price_info_id", (google.api.graphql.relay_options).id = true];
    string order_id = 2 [json_name = "order_id"];
    string order_item_seq_id = 3 [json_name = "order_item_seq_id"];
    string product_price_rule_id = 4 [json_name = "product_price_rule_id"];
    string product_price_action_seq_id = 5 [json_name = "product_price_action_seq_id"];
    routines.Currency modify_amount = 6 [json_name = "modify_amount"];
    string description = 7 [json_name = "description"];
    string rate_code = 8 [json_name = "rate_code"];
    google.protobuf.Timestamp last_updated_tx_stamp = 9 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 10 [json_name = "created_tx_stamp"];
    string tenant_id = 11 [json_name = "tenant_id"];
    
    
    // relations
    OrderHeaderData order_header = 12 [json_name = "order_header"]; // ref(OrderHeader): orderId
    OrderItemData order_item = 13 [json_name = "order_item"]; // ref(OrderItem): orderId + orderItemSeqId
    ProductPriceRuleData product_price_rule = 14 [json_name = "product_price_rule"]; // ref(ProductPriceRule): productPriceRuleId
    ProductPriceActionData product_price_action = 15 [json_name = "product_price_action"]; // ref(ProductPriceAction): productPriceRuleId + productPriceActionSeqId
    TenantData tenant = 16 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 17;
    map<string, google.protobuf.Any> attachments = 18;
}



// The Order Item Price Info service definition.
service OrderItemPriceInfoService {
    rpc Create(OrderItemPriceInfoData) returns (routines.Response) {}
    rpc StoreOrUpdate(OrderItemPriceInfoFlatData) returns (routines.Response) {}
    rpc Update(OrderItemPriceInfoFlatData) returns (routines.Response) {}
    rpc Delete(OrderItemPriceInfoFlatData) returns (routines.Response) {}
    rpc Find(OrderItemPriceInfoFlatData) returns (OrderItemPriceInfoFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (OrderItemPriceInfoFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream OrderItemPriceInfoData) {}
    rpc FindList(routines.QueryList) returns (stream OrderItemPriceInfoData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream OrderItemPriceInfoData) {}
}


// Electronic Text
message ElectronicTextData {
    option (routines.entity_type) = "ElectronicText";
    option (routines.keys).keys = "data_resource_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: dataResourceId
    // fields
    string data_resource_id = 1 [json_name = "data_resource_id", (google.api.graphql.relay_options).id = true];
    string text_data = 2 [json_name = "text_data"];
    google.protobuf.Timestamp last_updated_tx_stamp = 3 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 4 [json_name = "created_tx_stamp"];
    string tenant_id = 5 [json_name = "tenant_id"];
    
    
    // relations
    DataResourceData data_resource = 6 [json_name = "data_resource"]; // ref(DataResource): dataResourceId
    TenantData tenant = 7 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 8;
    map<string, google.protobuf.Any> attachments = 9;
}



// The Electronic Text service definition.
service ElectronicTextService {
    rpc Create(ElectronicTextData) returns (routines.Response) {}
    rpc StoreOrUpdate(ElectronicTextFlatData) returns (routines.Response) {}
    rpc Update(ElectronicTextFlatData) returns (routines.Response) {}
    rpc Delete(ElectronicTextFlatData) returns (routines.Response) {}
    rpc Find(ElectronicTextFlatData) returns (ElectronicTextFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ElectronicTextFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ElectronicTextData) {}
    rpc FindList(routines.QueryList) returns (stream ElectronicTextData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ElectronicTextData) {}
}


// Product Configuration Question
message ProductConfigItemData {
    option (routines.entity_type) = "ProductConfigItem";
    option (routines.keys).keys = "config_item_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: configItemId
    // fields
    string config_item_id = 1 [json_name = "config_item_id", (google.api.graphql.relay_options).id = true];
    string config_item_type_id = 2 [json_name = "config_item_type_id"];
    string config_item_name = 3 [json_name = "config_item_name"];
    string description = 4 [json_name = "description"];
    string long_description = 5 [json_name = "long_description"];
    string image_url = 6 [json_name = "image_url"];
    google.protobuf.Timestamp last_updated_tx_stamp = 7 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 8 [json_name = "created_tx_stamp"];
    string tenant_id = 9 [json_name = "tenant_id"];
    
    
    // relations
    repeated ProductConfigData config_item_product_config = 11 [json_name = "config_item_product_config"]; // ref(ConfigItemProductConfig): configItemId
    repeated ProductConfigOptionData config_item_product_config_option = 13 [json_name = "config_item_product_config_option"]; // ref(ConfigItemProductConfigOption): configItemId
    repeated ProductConfigProductData config_item_product_config_product = 16 [json_name = "config_item_product_config_product"]; // ref(ConfigItemProductConfigProduct): configItemId
    TenantData tenant = 17 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 18;
    map<string, google.protobuf.Any> attachments = 19;
}



// The Product Configuration Question service definition.
service ProductConfigItemService {
    rpc Create(ProductConfigItemData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductConfigItemFlatData) returns (routines.Response) {}
    rpc Update(ProductConfigItemFlatData) returns (routines.Response) {}
    rpc Delete(ProductConfigItemFlatData) returns (routines.Response) {}
    rpc Find(ProductConfigItemFlatData) returns (ProductConfigItemFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductConfigItemFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductConfigItemData) {}
    rpc FindList(routines.QueryList) returns (stream ProductConfigItemData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductConfigItemData) {}
}


// Telecommunications Number
message TelecomNumberData {
    option (routines.entity_type) = "TelecomNumber";
    option (routines.keys).keys = "contact_mech_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: contactMechId
    // fields
    string contact_mech_id = 1 [json_name = "contact_mech_id", (google.api.graphql.relay_options).id = true];
    string country_code = 2 [json_name = "country_code"];
    string area_code = 3 [json_name = "area_code"];
    string contact_number = 4 [json_name = "contact_number"];
    string ask_for_name = 5 [json_name = "ask_for_name"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 7 [json_name = "created_tx_stamp"];
    string tenant_id = 8 [json_name = "tenant_id"];
    
    
    // relations
    ContactMechData contact_mech = 9 [json_name = "contact_mech"]; // ref(ContactMech): contactMechId
    repeated FacilityContactMechData facility_contact_mech = 10 [json_name = "facility_contact_mech"]; // ref(FacilityContactMech): contactMechId
    repeated OrderItemShipGroupData telecom_order_item_ship_group = 11 [json_name = "telecom_order_item_ship_group"]; // ref(TelecomOrderItemShipGroup): contactMechId
    repeated PartyContactMechData party_contact_mech = 12 [json_name = "party_contact_mech"]; // ref(PartyContactMech): contactMechId
    repeated PartyContactMechPurposeData party_contact_mech_purpose = 13 [json_name = "party_contact_mech_purpose"]; // ref(PartyContactMechPurpose): contactMechId
    repeated ShipmentData origin_shipment = 14 [json_name = "origin_shipment"]; // ref(OriginShipment): contactMechId
    repeated ShipmentData destination_shipment = 15 [json_name = "destination_shipment"]; // ref(DestinationShipment): contactMechId
    repeated ShipmentRouteSegmentData origin_shipment_route_segment = 16 [json_name = "origin_shipment_route_segment"]; // ref(OriginShipmentRouteSegment): contactMechId
    repeated ShipmentRouteSegmentData dest_shipment_route_segment = 17 [json_name = "dest_shipment_route_segment"]; // ref(DestShipmentRouteSegment): contactMechId
    TenantData tenant = 19 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 20;
    map<string, google.protobuf.Any> attachments = 21;
}



// The Telecommunications Number service definition.
service TelecomNumberService {
    rpc Create(TelecomNumberData) returns (routines.Response) {}
    rpc StoreOrUpdate(TelecomNumberFlatData) returns (routines.Response) {}
    rpc Update(TelecomNumberFlatData) returns (routines.Response) {}
    rpc Delete(TelecomNumberFlatData) returns (routines.Response) {}
    rpc Find(TelecomNumberFlatData) returns (TelecomNumberFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (TelecomNumberFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream TelecomNumberData) {}
    rpc FindList(routines.QueryList) returns (stream TelecomNumberData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream TelecomNumberData) {}
}


// Product Feature
message ProductFeatureData {
    option (routines.entity_type) = "ProductFeature";
    option (routines.keys).keys = "product_feature_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productFeatureId
    // fields
    string product_feature_id = 1 [json_name = "product_feature_id", (google.api.graphql.relay_options).id = true];
    string product_feature_type_id = 2 [json_name = "product_feature_type_id"];
    string product_feature_category_id = 3 [json_name = "product_feature_category_id"];
    string description = 4 [json_name = "description"];
    string uom_id = 5 [json_name = "uom_id"];
    routines.FixedPoint number_specified = 6 [json_name = "number_specified"];
    routines.Currency default_amount = 7 [json_name = "default_amount"];
    int64 default_sequence_num = 8 [json_name = "default_sequence_num"];
    string abbrev = 9 [json_name = "abbrev"];
    string id_code = 10 [json_name = "id_code"];
    google.protobuf.Timestamp last_updated_tx_stamp = 11 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 12 [json_name = "created_tx_stamp"];
    string tenant_id = 13 [json_name = "tenant_id"];
    
    
    // relations
    ProductFeatureCategoryData product_feature_category = 14 [json_name = "product_feature_category"]; // ref(ProductFeatureCategory): productFeatureCategoryId
    repeated InvoiceItemData invoice_item = 19 [json_name = "invoice_item"]; // ref(InvoiceItem): productFeatureId
    repeated ProductFeatureApplData product_feature_appl = 20 [json_name = "product_feature_appl"]; // ref(ProductFeatureAppl): productFeatureId
    repeated ProductFeatureIactnData main_product_feature_iactn = 24 [json_name = "main_product_feature_iactn"]; // ref(MainProductFeatureIactn): productFeatureId
    repeated ProductFeatureIactnData assoc_product_feature_iactn = 25 [json_name = "assoc_product_feature_iactn"]; // ref(AssocProductFeatureIactn): productFeatureId
    repeated QuoteItemData quote_item = 27 [json_name = "quote_item"]; // ref(QuoteItem): productFeatureId
    repeated SupplierProductFeatureData supplier_product_feature = 29 [json_name = "supplier_product_feature"]; // ref(SupplierProductFeature): productFeatureId
    TenantData tenant = 30 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 31;
    map<string, google.protobuf.Any> attachments = 32;
}



// The Product Feature service definition.
service ProductFeatureService {
    rpc Create(ProductFeatureData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductFeatureFlatData) returns (routines.Response) {}
    rpc Update(ProductFeatureFlatData) returns (routines.Response) {}
    rpc Delete(ProductFeatureFlatData) returns (routines.Response) {}
    rpc Find(ProductFeatureFlatData) returns (ProductFeatureFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductFeatureFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductFeatureData) {}
    rpc FindList(routines.QueryList) returns (stream ProductFeatureData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductFeatureData) {}
}


// Product Promotion
message ProductPromoCodeData {
    option (routines.entity_type) = "ProductPromoCode";
    option (routines.keys).keys = "product_promo_code_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productPromoCodeId
    // fields
    string product_promo_code_id = 1 [json_name = "product_promo_code_id", (google.api.graphql.relay_options).id = true];
    string product_promo_id = 2 [json_name = "product_promo_id"];
    routines.Indicator user_entered = 3 [json_name = "user_entered"];
    routines.Indicator require_email_or_party = 4 [json_name = "require_email_or_party"];
    int64 use_limit_per_code = 5 [json_name = "use_limit_per_code"];
    int64 use_limit_per_customer = 6 [json_name = "use_limit_per_customer"];
    google.protobuf.Timestamp from_date = 7 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 8 [json_name = "thru_date"];
    google.protobuf.Timestamp created_date = 9 [json_name = "created_date"];
    string created_by_user_login = 10 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 11 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 12 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 13 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 14 [json_name = "created_tx_stamp"];
    string tenant_id = 15 [json_name = "tenant_id"];
    
    
    // relations
    ProductPromoData product_promo = 16 [json_name = "product_promo"]; // ref(ProductPromo): productPromoId
    repeated ShoppingListData shopping_list = 24 [json_name = "shopping_list"]; // ref(ShoppingList): productPromoCodeId
    TenantData tenant = 25 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 26;
    map<string, google.protobuf.Any> attachments = 27;
}



// The Product Promotion service definition.
service ProductPromoCodeService {
    rpc Create(ProductPromoCodeData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductPromoCodeFlatData) returns (routines.Response) {}
    rpc Update(ProductPromoCodeFlatData) returns (routines.Response) {}
    rpc Delete(ProductPromoCodeFlatData) returns (routines.Response) {}
    rpc Find(ProductPromoCodeFlatData) returns (ProductPromoCodeFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductPromoCodeFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductPromoCodeData) {}
    rpc FindList(routines.QueryList) returns (stream ProductPromoCodeData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductPromoCodeData) {}
}


// Item Issuance
message ItemIssuanceData {
    option (routines.entity_type) = "ItemIssuance";
    option (routines.keys).keys = "item_issuance_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: itemIssuanceId
    // fields
    string item_issuance_id = 1 [json_name = "item_issuance_id", (google.api.graphql.relay_options).id = true];
    string order_id = 2 [json_name = "order_id"];
    string order_item_seq_id = 3 [json_name = "order_item_seq_id"];
    string ship_group_seq_id = 4 [json_name = "ship_group_seq_id"];
    string inventory_item_id = 5 [json_name = "inventory_item_id"];
    string shipment_id = 6 [json_name = "shipment_id"];
    string shipment_item_seq_id = 7 [json_name = "shipment_item_seq_id"];
    string fixed_asset_id = 8 [json_name = "fixed_asset_id"];
    string maint_hist_seq_id = 9 [json_name = "maint_hist_seq_id"];
    google.protobuf.Timestamp issued_date_time = 10 [json_name = "issued_date_time"];
    string issued_by_user_login_id = 11 [json_name = "issued_by_user_login_id"];
    routines.FixedPoint quantity = 12 [json_name = "quantity"];
    routines.FixedPoint cancel_quantity = 13 [json_name = "cancel_quantity"];
    google.protobuf.Timestamp last_updated_tx_stamp = 14 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 15 [json_name = "created_tx_stamp"];
    string tenant_id = 16 [json_name = "tenant_id"];
    
    
    // relations
    InventoryItemData inventory_item = 17 [json_name = "inventory_item"]; // ref(InventoryItem): inventoryItemId
    OrderItemShipGrpInvResData order_item_ship_grp_inv_res = 18 [json_name = "order_item_ship_grp_inv_res"]; // ref(OrderItemShipGrpInvRes): orderId + orderItemSeqId + shipGroupSeqId + inventoryItemId
    ShipmentData shipment = 19 [json_name = "shipment"]; // ref(Shipment): shipmentId
    ShipmentItemData shipment_item = 20 [json_name = "shipment_item"]; // ref(ShipmentItem): shipmentId + shipmentItemSeqId
    OrderHeaderData order_header = 22 [json_name = "order_header"]; // ref(OrderHeader): orderId
    OrderItemData order_item = 23 [json_name = "order_item"]; // ref(OrderItem): orderId + orderItemSeqId
    repeated InventoryItemDetailData inventory_item_detail = 25 [json_name = "inventory_item_detail"]; // ref(InventoryItemDetail): itemIssuanceId
    repeated OrderItemBillingData order_item_billing = 28 [json_name = "order_item_billing"]; // ref(OrderItemBilling): itemIssuanceId
    TenantData tenant = 29 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 30;
    map<string, google.protobuf.Any> attachments = 31;
}



// The Item Issuance service definition.
service ItemIssuanceService {
    rpc Create(ItemIssuanceData) returns (routines.Response) {}
    rpc StoreOrUpdate(ItemIssuanceFlatData) returns (routines.Response) {}
    rpc Update(ItemIssuanceFlatData) returns (routines.Response) {}
    rpc Delete(ItemIssuanceFlatData) returns (routines.Response) {}
    rpc Find(ItemIssuanceFlatData) returns (ItemIssuanceFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ItemIssuanceFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ItemIssuanceData) {}
    rpc FindList(routines.QueryList) returns (stream ItemIssuanceData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ItemIssuanceData) {}
}


// Quantity Break
message QuantityBreakData {
    option (routines.entity_type) = "QuantityBreak";
    option (routines.keys).keys = "quantity_break_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: quantityBreakId
    // fields
    string quantity_break_id = 1 [json_name = "quantity_break_id", (google.api.graphql.relay_options).id = true];
    string quantity_break_type_id = 2 [json_name = "quantity_break_type_id"];
    routines.FixedPoint from_quantity = 3 [json_name = "from_quantity"];
    routines.FixedPoint thru_quantity = 4 [json_name = "thru_quantity"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 6 [json_name = "created_tx_stamp"];
    string tenant_id = 7 [json_name = "tenant_id"];
    
    
    // relations
    repeated ShipmentCostEstimateData weight_shipment_cost_estimate = 9 [json_name = "weight_shipment_cost_estimate"]; // ref(WeightShipmentCostEstimate): quantityBreakId
    repeated ShipmentCostEstimateData quantity_shipment_cost_estimate = 10 [json_name = "quantity_shipment_cost_estimate"]; // ref(QuantityShipmentCostEstimate): quantityBreakId
    repeated ShipmentCostEstimateData price_shipment_cost_estimate = 11 [json_name = "price_shipment_cost_estimate"]; // ref(PriceShipmentCostEstimate): quantityBreakId
    TenantData tenant = 12 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}



// The Quantity Break service definition.
service QuantityBreakService {
    rpc Create(QuantityBreakData) returns (routines.Response) {}
    rpc StoreOrUpdate(QuantityBreakFlatData) returns (routines.Response) {}
    rpc Update(QuantityBreakFlatData) returns (routines.Response) {}
    rpc Delete(QuantityBreakFlatData) returns (routines.Response) {}
    rpc Find(QuantityBreakFlatData) returns (QuantityBreakFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (QuantityBreakFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream QuantityBreakData) {}
    rpc FindList(routines.QueryList) returns (stream QuantityBreakData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream QuantityBreakData) {}
}


// Contact Mechanism
message ContactMechData {
    option (routines.entity_type) = "ContactMech";
    option (routines.keys).keys = "contact_mech_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: contactMechId
    // fields
    string contact_mech_id = 1 [json_name = "contact_mech_id", (google.api.graphql.relay_options).id = true];
    string contact_mech_type_id = 2 [json_name = "contact_mech_type_id"];
    string info_string = 3 [json_name = "info_string"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 5 [json_name = "created_tx_stamp"];
    string tenant_id = 6 [json_name = "tenant_id"];
    
    
    // relations
    repeated BillingAccountData billing_account = 9 [json_name = "billing_account"]; // ref(BillingAccount): contactMechId
    repeated CommunicationEventData from_communication_event = 11 [json_name = "from_communication_event"]; // ref(FromCommunicationEvent): contactMechId
    repeated CommunicationEventData to_communication_event = 12 [json_name = "to_communication_event"]; // ref(ToCommunicationEvent): contactMechId
    repeated CommunicationEventRoleData communication_event_role = 13 [json_name = "communication_event_role"]; // ref(CommunicationEventRole): contactMechId
    repeated CreditCardData credit_card = 19 [json_name = "credit_card"]; // ref(CreditCard): contactMechId
    repeated CustRequestData fulfill_cust_request = 20 [json_name = "fulfill_cust_request"]; // ref(FulfillCustRequest): contactMechId
    repeated EftAccountData eft_account = 21 [json_name = "eft_account"]; // ref(EftAccount): contactMechId
    repeated FacilityContactMechData facility_contact_mech = 22 [json_name = "facility_contact_mech"]; // ref(FacilityContactMech): contactMechId
    repeated FacilityContactMechPurposeData facility_contact_mech_purpose = 23 [json_name = "facility_contact_mech_purpose"]; // ref(FacilityContactMechPurpose): contactMechId
    repeated InvoiceData invoice = 26 [json_name = "invoice"]; // ref(Invoice): contactMechId
    repeated OrderContactMechData order_contact_mech = 28 [json_name = "order_contact_mech"]; // ref(OrderContactMech): contactMechId
    repeated OrderItemShipGroupData order_item_ship_group = 30 [json_name = "order_item_ship_group"]; // ref(OrderItemShipGroup): contactMechId
    repeated OrderItemShipGroupData telecom_order_item_ship_group = 31 [json_name = "telecom_order_item_ship_group"]; // ref(TelecomOrderItemShipGroup): contactMechId
    repeated PartyContactMechData party_contact_mech = 32 [json_name = "party_contact_mech"]; // ref(PartyContactMech): contactMechId
    repeated PartyContactMechPurposeData party_contact_mech_purpose = 33 [json_name = "party_contact_mech_purpose"]; // ref(PartyContactMechPurpose): contactMechId
    PostalAddressData postal_address = 35 [json_name = "postal_address"]; // ref(PostalAddress): contactMechId
    repeated ReturnHeaderData return_header = 39 [json_name = "return_header"]; // ref(ReturnHeader): contactMechId
    repeated ShipmentData origin_shipment = 40 [json_name = "origin_shipment"]; // ref(OriginShipment): contactMechId
    repeated ShipmentData dest_shipment = 41 [json_name = "dest_shipment"]; // ref(DestShipment): contactMechId
    repeated ShipmentRouteSegmentData origin_shipment_route_segment = 43 [json_name = "origin_shipment_route_segment"]; // ref(OriginShipmentRouteSegment): contactMechId
    repeated ShipmentRouteSegmentData dest_shipment_route_segment = 44 [json_name = "dest_shipment_route_segment"]; // ref(DestShipmentRouteSegment): contactMechId
    repeated ShoppingListData shopping_list = 45 [json_name = "shopping_list"]; // ref(ShoppingList): contactMechId
    TelecomNumberData telecom_number = 47 [json_name = "telecom_number"]; // ref(TelecomNumber): contactMechId
    TenantData tenant = 50 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 51;
    map<string, google.protobuf.Any> attachments = 52;
}



// The Contact Mechanism service definition.
service ContactMechService {
    rpc Create(ContactMechData) returns (routines.Response) {}
    rpc StoreOrUpdate(ContactMechFlatData) returns (routines.Response) {}
    rpc Update(ContactMechFlatData) returns (routines.Response) {}
    rpc Delete(ContactMechFlatData) returns (routines.Response) {}
    rpc Find(ContactMechFlatData) returns (ContactMechFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ContactMechFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ContactMechData) {}
    rpc FindList(routines.QueryList) returns (stream ContactMechData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ContactMechData) {}
}


// Product Review
message ProductReviewData {
    option (routines.entity_type) = "ProductReview";
    option (routines.keys).keys = "product_review_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: productReviewId
    // fields
    string product_review_id = 1 [json_name = "product_review_id", (google.api.graphql.relay_options).id = true];
    string product_store_id = 2 [json_name = "product_store_id"];
    string product_id = 3 [json_name = "product_id"];
    string user_login_id = 4 [json_name = "user_login_id"];
    string status_id = 5 [json_name = "status_id"];
    routines.Indicator posted_anonymous = 6 [json_name = "posted_anonymous"];
    google.protobuf.Timestamp posted_date_time = 7 [json_name = "posted_date_time"];
    routines.FixedPoint product_rating = 8 [json_name = "product_rating"];
    string product_review = 9 [json_name = "product_review"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 11 [json_name = "created_tx_stamp"];
    string tenant_id = 12 [json_name = "tenant_id"];
    
    
    // relations
    ProductStoreData product_store = 13 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    ProductData product = 14 [json_name = "product"]; // ref(Product): productId
    TenantData tenant = 17 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 18;
    map<string, google.protobuf.Any> attachments = 19;
}



// The Product Review service definition.
service ProductReviewService {
    rpc Create(ProductReviewData) returns (routines.Response) {}
    rpc StoreOrUpdate(ProductReviewFlatData) returns (routines.Response) {}
    rpc Update(ProductReviewFlatData) returns (routines.Response) {}
    rpc Delete(ProductReviewFlatData) returns (routines.Response) {}
    rpc Find(ProductReviewFlatData) returns (ProductReviewFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ProductReviewFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ProductReviewData) {}
    rpc FindList(routines.QueryList) returns (stream ProductReviewData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ProductReviewData) {}
}


// The Order Payment Preference
message OrderPaymentPreferenceData {
    option (routines.entity_type) = "OrderPaymentPreference";
    option (routines.keys).keys = "order_payment_preference_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: orderPaymentPreferenceId
    // fields
    string order_payment_preference_id = 1 [json_name = "order_payment_preference_id", (google.api.graphql.relay_options).id = true];
    string order_id = 2 [json_name = "order_id"];
    string order_item_seq_id = 3 [json_name = "order_item_seq_id"];
    string ship_group_seq_id = 4 [json_name = "ship_group_seq_id"];
    string product_price_purpose_id = 5 [json_name = "product_price_purpose_id"];
    string payment_method_type_id = 6 [json_name = "payment_method_type_id"];
    string payment_method_id = 7 [json_name = "payment_method_id"];
    string fin_account_id = 8 [json_name = "fin_account_id"];
    string security_code = 9 [json_name = "security_code"];
    string track2 = 10 [json_name = "track2"];
    routines.Indicator present_flag = 11 [json_name = "present_flag"];
    routines.Indicator swiped_flag = 12 [json_name = "swiped_flag"];
    routines.Indicator overflow_flag = 13 [json_name = "overflow_flag"];
    routines.Currency max_amount = 14 [json_name = "max_amount"];
    int64 process_attempt = 15 [json_name = "process_attempt"];
    string billing_postal_code = 16 [json_name = "billing_postal_code"];
    string manual_auth_code = 17 [json_name = "manual_auth_code"];
    string manual_ref_num = 18 [json_name = "manual_ref_num"];
    string status_id = 19 [json_name = "status_id"];
    routines.Indicator needs_nsf_retry = 20 [json_name = "needs_nsf_retry"];
    google.protobuf.Timestamp created_date = 21 [json_name = "created_date"];
    string created_by_user_login = 22 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 23 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 24 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 25 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 26 [json_name = "created_tx_stamp"];
    string tenant_id = 27 [json_name = "tenant_id"];
    
    
    // relations
    OrderHeaderData order_header = 28 [json_name = "order_header"]; // ref(OrderHeader): orderId
    OrderItemData order_item = 29 [json_name = "order_item"]; // ref(OrderItem): orderId + orderItemSeqId
    OrderItemShipGroupData order_item_ship_group = 30 [json_name = "order_item_ship_group"]; // ref(OrderItemShipGroup): orderId + shipGroupSeqId
    PaymentMethodData payment_method = 33 [json_name = "payment_method"]; // ref(PaymentMethod): paymentMethodId
    FinAccountData fin_account = 34 [json_name = "fin_account"]; // ref(FinAccount): finAccountId
    CreditCardData credit_card = 37 [json_name = "credit_card"]; // ref(CreditCard): paymentMethodId
    EftAccountData eft_account = 38 [json_name = "eft_account"]; // ref(EftAccount): paymentMethodId
    repeated OrderStatusData order_status = 40 [json_name = "order_status"]; // ref(OrderStatus): orderPaymentPreferenceId
    repeated PaymentData payment = 41 [json_name = "payment"]; // ref(Payment): orderPaymentPreferenceId
    repeated PaymentGatewayResponseData payment_gateway_response = 42 [json_name = "payment_gateway_response"]; // ref(PaymentGatewayResponse): orderPaymentPreferenceId
    TenantData tenant = 44 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 45;
    map<string, google.protobuf.Any> attachments = 46;
}



// The The Order Payment Preference service definition.
service OrderPaymentPreferenceService {
    rpc Create(OrderPaymentPreferenceData) returns (routines.Response) {}
    rpc StoreOrUpdate(OrderPaymentPreferenceFlatData) returns (routines.Response) {}
    rpc Update(OrderPaymentPreferenceFlatData) returns (routines.Response) {}
    rpc Delete(OrderPaymentPreferenceFlatData) returns (routines.Response) {}
    rpc Find(OrderPaymentPreferenceFlatData) returns (OrderPaymentPreferenceFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (OrderPaymentPreferenceFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream OrderPaymentPreferenceData) {}
    rpc FindList(routines.QueryList) returns (stream OrderPaymentPreferenceData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream OrderPaymentPreferenceData) {}
}


// Order Status
message OrderStatusData {
    option (routines.entity_type) = "OrderStatus";
    option (routines.keys).keys = "order_status_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: orderStatusId
    // fields
    string order_status_id = 1 [json_name = "order_status_id", (google.api.graphql.relay_options).id = true];
    string status_id = 2 [json_name = "status_id"];
    string order_id = 3 [json_name = "order_id"];
    string order_item_seq_id = 4 [json_name = "order_item_seq_id"];
    string order_payment_preference_id = 5 [json_name = "order_payment_preference_id"];
    google.protobuf.Timestamp status_datetime = 6 [json_name = "status_datetime"];
    string status_user_login = 7 [json_name = "status_user_login"];
    string change_reason = 8 [json_name = "change_reason"];
    google.protobuf.Timestamp last_updated_tx_stamp = 9 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 10 [json_name = "created_tx_stamp"];
    string tenant_id = 11 [json_name = "tenant_id"];
    
    
    // relations
    OrderHeaderData order_header = 13 [json_name = "order_header"]; // ref(OrderHeader): orderId
    OrderItemData order_item = 14 [json_name = "order_item"]; // ref(OrderItem): orderId + orderItemSeqId
    OrderPaymentPreferenceData order_payment_preference = 15 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): orderPaymentPreferenceId
    TenantData tenant = 17 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 18;
    map<string, google.protobuf.Any> attachments = 19;
}



// The Order Status service definition.
service OrderStatusService {
    rpc Create(OrderStatusData) returns (routines.Response) {}
    rpc StoreOrUpdate(OrderStatusFlatData) returns (routines.Response) {}
    rpc Update(OrderStatusFlatData) returns (routines.Response) {}
    rpc Delete(OrderStatusFlatData) returns (routines.Response) {}
    rpc Find(OrderStatusFlatData) returns (OrderStatusFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (OrderStatusFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream OrderStatusData) {}
    rpc FindList(routines.QueryList) returns (stream OrderStatusData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream OrderStatusData) {}
}


// Budget
message BudgetData {
    option (routines.entity_type) = "Budget";
    option (routines.keys).keys = "budget_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: budgetId
    // fields
    string budget_id = 1 [json_name = "budget_id", (google.api.graphql.relay_options).id = true];
    string budget_type_id = 2 [json_name = "budget_type_id"];
    string custom_time_period_id = 3 [json_name = "custom_time_period_id"];
    string comments = 4 [json_name = "comments"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 6 [json_name = "created_tx_stamp"];
    string tenant_id = 7 [json_name = "tenant_id"];
    
    
    // relations
    repeated BudgetStatusData budget_status = 18 [json_name = "budget_status"]; // ref(BudgetStatus): budgetId
    TenantData tenant = 21 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 22;
    map<string, google.protobuf.Any> attachments = 23;
}



// The Budget service definition.
service BudgetService {
    rpc Create(BudgetData) returns (routines.Response) {}
    rpc StoreOrUpdate(BudgetFlatData) returns (routines.Response) {}
    rpc Update(BudgetFlatData) returns (routines.Response) {}
    rpc Delete(BudgetFlatData) returns (routines.Response) {}
    rpc Find(BudgetFlatData) returns (BudgetFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (BudgetFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream BudgetData) {}
    rpc FindList(routines.QueryList) returns (stream BudgetData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream BudgetData) {}
}


// Payment Content Type
message PaymentContentTypeData {
    option (routines.entity_type) = "PaymentContentType";
    option (routines.keys).keys = "payment_content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: paymentContentTypeId
    // fields
    string payment_content_type_id = 1 [json_name = "payment_content_type_id", (google.api.graphql.relay_options).id = true];
    string parent_type_id = 2 [json_name = "parent_type_id"];
    routines.Indicator has_table = 3 [json_name = "has_table"];
    string description = 4 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 6 [json_name = "created_tx_stamp"];
    string tenant_id = 7 [json_name = "tenant_id"];
    
    
    // relations
    PaymentContentTypeData parent_payment_content_type = 8 [json_name = "parent_payment_content_type"]; // ref(ParentPaymentContentType): parentTypeId
    repeated PaymentContentTypeData child_payment_content_type = 10 [json_name = "child_payment_content_type"]; // ref(ChildPaymentContentType): paymentContentTypeId
    TenantData tenant = 11 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 12;
    map<string, google.protobuf.Any> attachments = 13;
}



// The Payment Content Type service definition.
service PaymentContentTypeService {
    rpc Create(PaymentContentTypeData) returns (routines.Response) {}
    rpc StoreOrUpdate(PaymentContentTypeFlatData) returns (routines.Response) {}
    rpc Update(PaymentContentTypeFlatData) returns (routines.Response) {}
    rpc Delete(PaymentContentTypeFlatData) returns (routines.Response) {}
    rpc Find(PaymentContentTypeFlatData) returns (PaymentContentTypeFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PaymentContentTypeFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PaymentContentTypeData) {}
    rpc FindList(routines.QueryList) returns (stream PaymentContentTypeData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PaymentContentTypeData) {}
}


// Security Component - Security Permission
message SecurityPermissionData {
    option (routines.entity_type) = "SecurityPermission";
    option (routines.keys).keys = "permission_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: permissionId
    // fields
    string permission_id = 1 [json_name = "permission_id", (google.api.graphql.relay_options).id = true];
    string description = 2 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 3 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 4 [json_name = "created_tx_stamp"];
    string tenant_id = 5 [json_name = "tenant_id"];
    
    
    // relations
    repeated SecurityGroupPermissionData security_group_permission = 6 [json_name = "security_group_permission"]; // ref(SecurityGroupPermission): permissionId
    TenantData tenant = 7 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 8;
    map<string, google.protobuf.Any> attachments = 9;
}



// The Security Component - Security Permission service definition.
service SecurityPermissionService {
    rpc Create(SecurityPermissionData) returns (routines.Response) {}
    rpc StoreOrUpdate(SecurityPermissionFlatData) returns (routines.Response) {}
    rpc Update(SecurityPermissionFlatData) returns (routines.Response) {}
    rpc Delete(SecurityPermissionFlatData) returns (routines.Response) {}
    rpc Find(SecurityPermissionFlatData) returns (SecurityPermissionFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (SecurityPermissionFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream SecurityPermissionData) {}
    rpc FindList(routines.QueryList) returns (stream SecurityPermissionData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream SecurityPermissionData) {}
}


// Recurrence Rule
message RecurrenceRuleData {
    option (routines.entity_type) = "RecurrenceRule";
    option (routines.keys).keys = "recurrence_rule_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: recurrenceRuleId
    // fields
    string recurrence_rule_id = 1 [json_name = "recurrence_rule_id", (google.api.graphql.relay_options).id = true];
    string frequency = 2 [json_name = "frequency"];
    google.protobuf.Timestamp until_date_time = 3 [json_name = "until_date_time"];
    int64 count_number = 4 [json_name = "count_number"];
    int64 interval_number = 5 [json_name = "interval_number"];
    string by_second_list = 6 [json_name = "by_second_list"];
    string by_minute_list = 7 [json_name = "by_minute_list"];
    string by_hour_list = 8 [json_name = "by_hour_list"];
    string by_day_list = 9 [json_name = "by_day_list"];
    string by_month_day_list = 10 [json_name = "by_month_day_list"];
    string by_year_day_list = 11 [json_name = "by_year_day_list"];
    string by_week_no_list = 12 [json_name = "by_week_no_list"];
    string by_month_list = 13 [json_name = "by_month_list"];
    string by_set_pos_list = 14 [json_name = "by_set_pos_list"];
    string week_start = 15 [json_name = "week_start"];
    string x_name = 16 [json_name = "x_name"];
    google.protobuf.Timestamp last_updated_tx_stamp = 17 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 18 [json_name = "created_tx_stamp"];
    string tenant_id = 19 [json_name = "tenant_id"];
    
    
    // relations
    repeated RecurrenceInfoData recurrence_info = 20 [json_name = "recurrence_info"]; // ref(RecurrenceInfo): recurrenceRuleId
    repeated RecurrenceInfoData exception_recurrence_info = 21 [json_name = "exception_recurrence_info"]; // ref(ExceptionRecurrenceInfo): recurrenceRuleId
    TenantData tenant = 22 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 23;
    map<string, google.protobuf.Any> attachments = 24;
}



// The Recurrence Rule service definition.
service RecurrenceRuleService {
    rpc Create(RecurrenceRuleData) returns (routines.Response) {}
    rpc StoreOrUpdate(RecurrenceRuleFlatData) returns (routines.Response) {}
    rpc Update(RecurrenceRuleFlatData) returns (routines.Response) {}
    rpc Delete(RecurrenceRuleFlatData) returns (routines.Response) {}
    rpc Find(RecurrenceRuleFlatData) returns (RecurrenceRuleFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (RecurrenceRuleFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream RecurrenceRuleData) {}
    rpc FindList(routines.QueryList) returns (stream RecurrenceRuleData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream RecurrenceRuleData) {}
}


// Temporal Expression
message TemporalExpressionData {
    option (routines.entity_type) = "TemporalExpression";
    option (routines.keys).keys = "temp_expr_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: tempExprId
    // fields
    string temp_expr_id = 1 [json_name = "temp_expr_id", (google.api.graphql.relay_options).id = true];
    string temp_expr_type_id = 2 [json_name = "temp_expr_type_id"];
    string description = 3 [json_name = "description"];
    google.protobuf.Timestamp date1 = 4 [json_name = "date1"];
    google.protobuf.Timestamp date2 = 5 [json_name = "date2"];
    int64 integer1 = 6 [json_name = "integer1"];
    int64 integer2 = 7 [json_name = "integer2"];
    string string1 = 8 [json_name = "string1"];
    string string2 = 9 [json_name = "string2"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 11 [json_name = "created_tx_stamp"];
    string tenant_id = 12 [json_name = "tenant_id"];
    
    
    // relations
    repeated JobSandboxData job_sandbox = 13 [json_name = "job_sandbox"]; // ref(JobSandbox): tempExprId
    repeated TemporalExpressionAssocData from_temporal_expression_assoc = 14 [json_name = "from_temporal_expression_assoc"]; // ref(FromTemporalExpressionAssoc): tempExprId
    repeated TemporalExpressionAssocData to_temporal_expression_assoc = 15 [json_name = "to_temporal_expression_assoc"]; // ref(ToTemporalExpressionAssoc): tempExprId
    repeated WorkEffortData work_effort = 16 [json_name = "work_effort"]; // ref(WorkEffort): tempExprId
    TenantData tenant = 17 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 18;
    map<string, google.protobuf.Any> attachments = 19;
}



// The Temporal Expression service definition.
service TemporalExpressionService {
    rpc Create(TemporalExpressionData) returns (routines.Response) {}
    rpc StoreOrUpdate(TemporalExpressionFlatData) returns (routines.Response) {}
    rpc Update(TemporalExpressionFlatData) returns (routines.Response) {}
    rpc Delete(TemporalExpressionFlatData) returns (routines.Response) {}
    rpc Find(TemporalExpressionFlatData) returns (TemporalExpressionFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (TemporalExpressionFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream TemporalExpressionData) {}
    rpc FindList(routines.QueryList) returns (stream TemporalExpressionData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream TemporalExpressionData) {}
}


// Shipment Method Type
message ShipmentMethodTypeData {
    option (routines.entity_type) = "ShipmentMethodType";
    option (routines.keys).keys = "shipment_method_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: shipmentMethodTypeId
    // fields
    string shipment_method_type_id = 1 [json_name = "shipment_method_type_id", (google.api.graphql.relay_options).id = true];
    string description = 2 [json_name = "description"];
    int64 sequence_num = 3 [json_name = "sequence_num"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 5 [json_name = "created_tx_stamp"];
    string tenant_id = 6 [json_name = "tenant_id"];
    
    
    // relations
    repeated CarrierShipmentMethodData carrier_shipment_method = 7 [json_name = "carrier_shipment_method"]; // ref(CarrierShipmentMethod): shipmentMethodTypeId
    repeated OrderItemShipGroupData order_item_ship_group = 10 [json_name = "order_item_ship_group"]; // ref(OrderItemShipGroup): shipmentMethodTypeId
    repeated ProductStoreShipmentMethData product_store_shipment_meth = 12 [json_name = "product_store_shipment_meth"]; // ref(ProductStoreShipmentMeth): shipmentMethodTypeId
    repeated ShipmentRouteSegmentData shipment_route_segment = 14 [json_name = "shipment_route_segment"]; // ref(ShipmentRouteSegment): shipmentMethodTypeId
    TenantData tenant = 15 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 16;
    map<string, google.protobuf.Any> attachments = 17;
}



// The Shipment Method Type service definition.
service ShipmentMethodTypeService {
    rpc Create(ShipmentMethodTypeData) returns (routines.Response) {}
    rpc StoreOrUpdate(ShipmentMethodTypeFlatData) returns (routines.Response) {}
    rpc Update(ShipmentMethodTypeFlatData) returns (routines.Response) {}
    rpc Delete(ShipmentMethodTypeFlatData) returns (routines.Response) {}
    rpc Find(ShipmentMethodTypeFlatData) returns (ShipmentMethodTypeFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (ShipmentMethodTypeFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream ShipmentMethodTypeData) {}
    rpc FindList(routines.QueryList) returns (stream ShipmentMethodTypeData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream ShipmentMethodTypeData) {}
}


// Accounting Transaction
message AcctgTransData {
    option (routines.entity_type) = "AcctgTrans";
    option (routines.keys).keys = "acctg_trans_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: acctgTransId
    // fields
    string acctg_trans_id = 1 [json_name = "acctg_trans_id", (google.api.graphql.relay_options).id = true];
    string acctg_trans_type_id = 2 [json_name = "acctg_trans_type_id"];
    string description = 3 [json_name = "description"];
    google.protobuf.Timestamp transaction_date = 4 [json_name = "transaction_date"];
    routines.Indicator is_posted = 5 [json_name = "is_posted"];
    google.protobuf.Timestamp posted_date = 6 [json_name = "posted_date"];
    google.protobuf.Timestamp scheduled_posting_date = 7 [json_name = "scheduled_posting_date"];
    string gl_journal_id = 8 [json_name = "gl_journal_id"];
    string gl_fiscal_type_id = 9 [json_name = "gl_fiscal_type_id"];
    string voucher_ref = 10 [json_name = "voucher_ref"];
    google.protobuf.Timestamp voucher_date = 11 [json_name = "voucher_date"];
    string group_status_id = 12 [json_name = "group_status_id"];
    string fixed_asset_id = 13 [json_name = "fixed_asset_id"];
    string inventory_item_id = 14 [json_name = "inventory_item_id"];
    string physical_inventory_id = 15 [json_name = "physical_inventory_id"];
    string party_id = 16 [json_name = "party_id"];
    string role_type_id = 17 [json_name = "role_type_id"];
    string invoice_id = 18 [json_name = "invoice_id"];
    string payment_id = 19 [json_name = "payment_id"];
    string fin_account_trans_id = 20 [json_name = "fin_account_trans_id"];
    string shipment_id = 21 [json_name = "shipment_id"];
    string receipt_id = 22 [json_name = "receipt_id"];
    string work_effort_id = 23 [json_name = "work_effort_id"];
    string their_acctg_trans_id = 24 [json_name = "their_acctg_trans_id"];
    google.protobuf.Timestamp created_date = 25 [json_name = "created_date"];
    string created_by_user_login = 26 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 27 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 28 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 29 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 30 [json_name = "created_tx_stamp"];
    string tenant_id = 31 [json_name = "tenant_id"];
    
    
    // relations
    FixedAssetData fixed_asset = 36 [json_name = "fixed_asset"]; // ref(FixedAsset): fixedAssetId
    InventoryItemData inventory_item = 38 [json_name = "inventory_item"]; // ref(InventoryItem): inventoryItemId
    PartyData party = 40 [json_name = "party"]; // ref(Party): partyId
    PartyRoleData party_role = 42 [json_name = "party_role"]; // ref(PartyRole): partyId + roleTypeId
    InvoiceData invoice = 43 [json_name = "invoice"]; // ref(Invoice): invoiceId
    PaymentData payment = 44 [json_name = "payment"]; // ref(Payment): paymentId
    FinAccountTransData fin_account_trans = 45 [json_name = "fin_account_trans"]; // ref(FinAccountTrans): finAccountTransId
    ShipmentData shipment = 46 [json_name = "shipment"]; // ref(Shipment): shipmentId
    ShipmentReceiptData shipment_receipt = 47 [json_name = "shipment_receipt"]; // ref(ShipmentReceipt): receiptId
    WorkEffortData work_effort = 48 [json_name = "work_effort"]; // ref(WorkEffort): workEffortId
    repeated AcctgTransEntryData acctg_trans_entry = 51 [json_name = "acctg_trans_entry"]; // ref(AcctgTransEntry): acctgTransId
    TenantData tenant = 53 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 54;
    map<string, google.protobuf.Any> attachments = 55;
}



// The Accounting Transaction service definition.
service AcctgTransService {
    rpc Create(AcctgTransData) returns (routines.Response) {}
    rpc StoreOrUpdate(AcctgTransFlatData) returns (routines.Response) {}
    rpc Update(AcctgTransFlatData) returns (routines.Response) {}
    rpc Delete(AcctgTransFlatData) returns (routines.Response) {}
    rpc Find(AcctgTransFlatData) returns (AcctgTransFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (AcctgTransFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream AcctgTransData) {}
    rpc FindList(routines.QueryList) returns (stream AcctgTransData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream AcctgTransData) {}
}


// Job Scheduler Sandbox
message JobSandboxData {
    option (routines.entity_type) = "JobSandbox";
    option (routines.keys).keys = "job_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: jobId
    // fields
    string job_id = 1 [json_name = "job_id", (google.api.graphql.relay_options).id = true];
    string job_name = 2 [json_name = "job_name"];
    google.protobuf.Timestamp run_time = 3 [json_name = "run_time"];
    int64 priority = 4 [json_name = "priority"];
    string pool_id = 5 [json_name = "pool_id"];
    string status_id = 6 [json_name = "status_id"];
    string parent_job_id = 7 [json_name = "parent_job_id"];
    string previous_job_id = 8 [json_name = "previous_job_id"];
    string service_name = 9 [json_name = "service_name"];
    string loader_name = 10 [json_name = "loader_name"];
    int64 max_retry = 11 [json_name = "max_retry"];
    int64 current_retry_count = 12 [json_name = "current_retry_count"];
    string auth_user_login_id = 13 [json_name = "auth_user_login_id"];
    string run_as_user = 14 [json_name = "run_as_user"];
    string runtime_data_id = 15 [json_name = "runtime_data_id"];
    string recurrence_info_id = 16 [json_name = "recurrence_info_id"];
    string temp_expr_id = 17 [json_name = "temp_expr_id"];
    int64 current_recurrence_count = 18 [json_name = "current_recurrence_count"];
    int64 max_recurrence_count = 19 [json_name = "max_recurrence_count"];
    string run_by_instance_id = 20 [json_name = "run_by_instance_id"];
    google.protobuf.Timestamp start_date_time = 21 [json_name = "start_date_time"];
    google.protobuf.Timestamp finish_date_time = 22 [json_name = "finish_date_time"];
    google.protobuf.Timestamp cancel_date_time = 23 [json_name = "cancel_date_time"];
    string job_result = 24 [json_name = "job_result"];
    string recurrence_time_zone = 25 [json_name = "recurrence_time_zone"];
    google.protobuf.Timestamp last_updated_tx_stamp = 26 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 27 [json_name = "created_tx_stamp"];
    string tenant_id = 28 [json_name = "tenant_id"];
    
    
    // relations
    RecurrenceInfoData recurrence_info = 29 [json_name = "recurrence_info"]; // ref(RecurrenceInfo): recurrenceInfoId
    TemporalExpressionData temporal_expression = 30 [json_name = "temporal_expression"]; // ref(TemporalExpression): tempExprId
    TenantData tenant = 36 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 37;
    map<string, google.protobuf.Any> attachments = 38;
}



// The Job Scheduler Sandbox service definition.
service JobSandboxService {
    rpc Create(JobSandboxData) returns (routines.Response) {}
    rpc StoreOrUpdate(JobSandboxFlatData) returns (routines.Response) {}
    rpc Update(JobSandboxFlatData) returns (routines.Response) {}
    rpc Delete(JobSandboxFlatData) returns (routines.Response) {}
    rpc Find(JobSandboxFlatData) returns (JobSandboxFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (JobSandboxFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream JobSandboxData) {}
    rpc FindList(routines.QueryList) returns (stream JobSandboxData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream JobSandboxData) {}
}


// Data Object
message DataResourceData {
    option (routines.entity_type) = "DataResource";
    option (routines.keys).keys = "data_resource_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: dataResourceId
    // fields
    string data_resource_id = 1 [json_name = "data_resource_id", (google.api.graphql.relay_options).id = true];
    string data_resource_type_id = 2 [json_name = "data_resource_type_id"];
    string data_template_type_id = 3 [json_name = "data_template_type_id"];
    string data_category_id = 4 [json_name = "data_category_id"];
    string data_source_id = 5 [json_name = "data_source_id"];
    string status_id = 6 [json_name = "status_id"];
    string data_resource_name = 7 [json_name = "data_resource_name"];
    string locale_string = 8 [json_name = "locale_string"];
    string mime_type_id = 9 [json_name = "mime_type_id"];
    string character_set_id = 10 [json_name = "character_set_id"];
    string object_info = 11 [json_name = "object_info"];
    string survey_id = 12 [json_name = "survey_id"];
    string survey_response_id = 13 [json_name = "survey_response_id"];
    string related_detail_id = 14 [json_name = "related_detail_id"];
    routines.Indicator is_public = 15 [json_name = "is_public"];
    google.protobuf.Timestamp created_date = 16 [json_name = "created_date"];
    string created_by_user_login = 17 [json_name = "created_by_user_login"];
    google.protobuf.Timestamp last_modified_date = 18 [json_name = "last_modified_date"];
    string last_modified_by_user_login = 19 [json_name = "last_modified_by_user_login"];
    google.protobuf.Timestamp last_updated_tx_stamp = 20 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 21 [json_name = "created_tx_stamp"];
    string tenant_id = 22 [json_name = "tenant_id"];
    
    
    // relations
    SurveyData survey = 33 [json_name = "survey"]; // ref(Survey): surveyId
    repeated ContentData content = 36 [json_name = "content"]; // ref(Content): dataResourceId
    repeated ContentData template_content = 37 [json_name = "template_content"]; // ref(TemplateContent): dataResourceId
    ElectronicTextData electronic_text = 44 [json_name = "electronic_text"]; // ref(ElectronicText): dataResourceId
    TenantData tenant = 49 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 50;
    map<string, google.protobuf.Any> attachments = 51;
}



// The Data Object service definition.
service DataResourceService {
    rpc Create(DataResourceData) returns (routines.Response) {}
    rpc StoreOrUpdate(DataResourceFlatData) returns (routines.Response) {}
    rpc Update(DataResourceFlatData) returns (routines.Response) {}
    rpc Delete(DataResourceFlatData) returns (routines.Response) {}
    rpc Find(DataResourceFlatData) returns (DataResourceFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (DataResourceFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream DataResourceData) {}
    rpc FindList(routines.QueryList) returns (stream DataResourceData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream DataResourceData) {}
}


// General Ledger Account
message GlAccountData {
    option (routines.entity_type) = "GlAccount";
    option (routines.keys).keys = "gl_account_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: glAccountId
    // fields
    string gl_account_id = 1 [json_name = "gl_account_id", (google.api.graphql.relay_options).id = true];
    string gl_account_type_id = 2 [json_name = "gl_account_type_id"];
    string gl_account_class_id = 3 [json_name = "gl_account_class_id"];
    string gl_resource_type_id = 4 [json_name = "gl_resource_type_id"];
    string gl_xbrl_class_id = 5 [json_name = "gl_xbrl_class_id"];
    string parent_gl_account_id = 6 [json_name = "parent_gl_account_id"];
    string account_code = 7 [json_name = "account_code"];
    string account_name = 8 [json_name = "account_name"];
    string description = 9 [json_name = "description"];
    string product_id = 10 [json_name = "product_id"];
    string external_id = 11 [json_name = "external_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 12 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 13 [json_name = "created_tx_stamp"];
    string tenant_id = 14 [json_name = "tenant_id"];
    
    
    // relations
    GlAccountData parent_gl_account = 19 [json_name = "parent_gl_account"]; // ref(ParentGlAccount): parentGlAccountId
    repeated AcctgTransEntryData acctg_trans_entry = 20 [json_name = "acctg_trans_entry"]; // ref(AcctgTransEntry): glAccountId
    repeated FinAccountData post_to_fin_account = 21 [json_name = "post_to_fin_account"]; // ref(PostToFinAccount): glAccountId
    repeated GlAccountData child_gl_account = 28 [json_name = "child_gl_account"]; // ref(ChildGlAccount): glAccountId
    repeated GlAccountTypeDefaultData gl_account_type_default = 34 [json_name = "gl_account_type_default"]; // ref(GlAccountTypeDefault): glAccountId
    repeated InvoiceItemData override_invoice_item = 37 [json_name = "override_invoice_item"]; // ref(OverrideInvoiceItem): glAccountId
    repeated InvoiceItemTypeGlAccountData invoice_item_type_gl_account = 39 [json_name = "invoice_item_type_gl_account"]; // ref(InvoiceItemTypeGlAccount): glAccountId
    repeated OrderAdjustmentData override_order_adjustment = 40 [json_name = "override_order_adjustment"]; // ref(OverrideOrderAdjustment): glAccountId
    repeated OrderItemData override_order_item = 41 [json_name = "override_order_item"]; // ref(OverrideOrderItem): glAccountId
    repeated PaymentData payment = 43 [json_name = "payment"]; // ref(Payment): glAccountId
    repeated PaymentApplicationData payment_application = 44 [json_name = "payment_application"]; // ref(PaymentApplication): glAccountId
    repeated PaymentMethodData payment_method = 45 [json_name = "payment_method"]; // ref(PaymentMethod): glAccountId
    repeated PaymentMethodTypeGlAccountData payment_method_type_gl_account = 47 [json_name = "payment_method_type_gl_account"]; // ref(PaymentMethodTypeGlAccount): glAccountId
    repeated QuoteAdjustmentData override_quote_adjustment = 50 [json_name = "override_quote_adjustment"]; // ref(OverrideQuoteAdjustment): glAccountId
    repeated TaxAuthorityGlAccountData tax_authority_gl_account = 52 [json_name = "tax_authority_gl_account"]; // ref(TaxAuthorityGlAccount): glAccountId
    TenantData tenant = 54 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 55;
    map<string, google.protobuf.Any> attachments = 56;
}



// The General Ledger Account service definition.
service GlAccountService {
    rpc Create(GlAccountData) returns (routines.Response) {}
    rpc StoreOrUpdate(GlAccountFlatData) returns (routines.Response) {}
    rpc Update(GlAccountFlatData) returns (routines.Response) {}
    rpc Delete(GlAccountFlatData) returns (routines.Response) {}
    rpc Find(GlAccountFlatData) returns (GlAccountFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (GlAccountFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream GlAccountData) {}
    rpc FindList(routines.QueryList) returns (stream GlAccountData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream GlAccountData) {}
}


// Calendar
message TechDataCalendarData {
    option (routines.entity_type) = "TechDataCalendar";
    option (routines.keys).keys = "calendar_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: calendarId
    // fields
    string calendar_id = 1 [json_name = "calendar_id", (google.api.graphql.relay_options).id = true];
    string description = 2 [json_name = "description"];
    string calendar_week_id = 3 [json_name = "calendar_week_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 5 [json_name = "created_tx_stamp"];
    string tenant_id = 6 [json_name = "tenant_id"];
    
    
    // relations
    TechDataCalendarWeekData tech_data_calendar_week = 7 [json_name = "tech_data_calendar_week"]; // ref(TechDataCalendarWeek): calendarWeekId
    repeated FixedAssetData fixed_asset = 8 [json_name = "fixed_asset"]; // ref(FixedAsset): calendarId
    repeated TechDataCalendarExcDayData tech_data_calendar_exc_day = 9 [json_name = "tech_data_calendar_exc_day"]; // ref(TechDataCalendarExcDay): calendarId
    TenantData tenant = 11 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 12;
    map<string, google.protobuf.Any> attachments = 13;
}



// The Calendar service definition.
service TechDataCalendarService {
    rpc Create(TechDataCalendarData) returns (routines.Response) {}
    rpc StoreOrUpdate(TechDataCalendarFlatData) returns (routines.Response) {}
    rpc Update(TechDataCalendarFlatData) returns (routines.Response) {}
    rpc Delete(TechDataCalendarFlatData) returns (routines.Response) {}
    rpc Find(TechDataCalendarFlatData) returns (TechDataCalendarFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (TechDataCalendarFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream TechDataCalendarData) {}
    rpc FindList(routines.QueryList) returns (stream TechDataCalendarData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream TechDataCalendarData) {}
}


// Customer Request Type
message CustRequestTypeData {
    option (routines.entity_type) = "CustRequestType";
    option (routines.keys).keys = "cust_request_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: custRequestTypeId
    // fields
    string cust_request_type_id = 1 [json_name = "cust_request_type_id", (google.api.graphql.relay_options).id = true];
    string parent_type_id = 2 [json_name = "parent_type_id"];
    routines.Indicator has_table = 3 [json_name = "has_table"];
    string description = 4 [json_name = "description"];
    string party_id = 5 [json_name = "party_id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 7 [json_name = "created_tx_stamp"];
    string tenant_id = 8 [json_name = "tenant_id"];
    
    
    // relations
    CustRequestTypeData parent_cust_request_type = 9 [json_name = "parent_cust_request_type"]; // ref(ParentCustRequestType): parentTypeId
    PartyData party = 10 [json_name = "party"]; // ref(Party): partyId
    repeated PartyRelationshipData party_relationship = 11 [json_name = "party_relationship"]; // ref(PartyRelationship): partyId
    repeated CustRequestData cust_request = 12 [json_name = "cust_request"]; // ref(CustRequest): custRequestTypeId
    repeated CustRequestTypeData child_cust_request_type = 15 [json_name = "child_cust_request_type"]; // ref(ChildCustRequestType): custRequestTypeId
    TenantData tenant = 17 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 18;
    map<string, google.protobuf.Any> attachments = 19;
}



// The Customer Request Type service definition.
service CustRequestTypeService {
    rpc Create(CustRequestTypeData) returns (routines.Response) {}
    rpc StoreOrUpdate(CustRequestTypeFlatData) returns (routines.Response) {}
    rpc Update(CustRequestTypeFlatData) returns (routines.Response) {}
    rpc Delete(CustRequestTypeFlatData) returns (routines.Response) {}
    rpc Find(CustRequestTypeFlatData) returns (CustRequestTypeFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (CustRequestTypeFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream CustRequestTypeData) {}
    rpc FindList(routines.QueryList) returns (stream CustRequestTypeData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream CustRequestTypeData) {}
}


// Credit Card Information
message CreditCardData {
    option (routines.entity_type) = "CreditCard";
    option (routines.keys).keys = "payment_method_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: paymentMethodId
    // fields
    string payment_method_id = 1 [json_name = "payment_method_id", (google.api.graphql.relay_options).id = true];
    string card_type = 2 [json_name = "card_type"];
    string card_number = 3 [json_name = "card_number"];
    string valid_from_date = 4 [json_name = "valid_from_date"];
    string expire_date = 5 [json_name = "expire_date"];
    string issue_number = 6 [json_name = "issue_number"];
    string company_name_on_card = 7 [json_name = "company_name_on_card"];
    string title_on_card = 8 [json_name = "title_on_card"];
    string first_name_on_card = 9 [json_name = "first_name_on_card"];
    string middle_name_on_card = 10 [json_name = "middle_name_on_card"];
    string last_name_on_card = 11 [json_name = "last_name_on_card"];
    string suffix_on_card = 12 [json_name = "suffix_on_card"];
    string contact_mech_id = 13 [json_name = "contact_mech_id"];
    int64 consecutive_failed_auths = 14 [json_name = "consecutive_failed_auths"];
    google.protobuf.Timestamp last_failed_auth_date = 15 [json_name = "last_failed_auth_date"];
    int64 consecutive_failed_nsf = 16 [json_name = "consecutive_failed_nsf"];
    google.protobuf.Timestamp last_failed_nsf_date = 17 [json_name = "last_failed_nsf_date"];
    google.protobuf.Timestamp last_updated_tx_stamp = 18 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 19 [json_name = "created_tx_stamp"];
    string tenant_id = 20 [json_name = "tenant_id"];
    
    
    // relations
    PaymentMethodData payment_method = 21 [json_name = "payment_method"]; // ref(PaymentMethod): paymentMethodId
    ContactMechData contact_mech = 22 [json_name = "contact_mech"]; // ref(ContactMech): contactMechId
    PostalAddressData postal_address = 23 [json_name = "postal_address"]; // ref(PostalAddress): contactMechId
    repeated OrderPaymentPreferenceData order_payment_preference = 24 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): paymentMethodId
    repeated PaymentData payment = 25 [json_name = "payment"]; // ref(Payment): paymentMethodId
    TenantData tenant = 26 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 27;
    map<string, google.protobuf.Any> attachments = 28;
}



// The Credit Card Information service definition.
service CreditCardService {
    rpc Create(CreditCardData) returns (routines.Response) {}
    rpc StoreOrUpdate(CreditCardFlatData) returns (routines.Response) {}
    rpc Update(CreditCardFlatData) returns (routines.Response) {}
    rpc Delete(CreditCardFlatData) returns (routines.Response) {}
    rpc Find(CreditCardFlatData) returns (CreditCardFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (CreditCardFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream CreditCardData) {}
    rpc FindList(routines.QueryList) returns (stream CreditCardData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream CreditCardData) {}
}


// Agreement
message AgreementData {
    option (routines.entity_type) = "Agreement";
    option (routines.keys).keys = "agreement_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: agreementId
    // fields
    string agreement_id = 1 [json_name = "agreement_id", (google.api.graphql.relay_options).id = true];
    string product_id = 2 [json_name = "product_id"];
    string party_id_from = 3 [json_name = "party_id_from"];
    string party_id_to = 4 [json_name = "party_id_to"];
    string role_type_id_from = 5 [json_name = "role_type_id_from"];
    string role_type_id_to = 6 [json_name = "role_type_id_to"];
    string agreement_type_id = 7 [json_name = "agreement_type_id"];
    google.protobuf.Timestamp agreement_date = 8 [json_name = "agreement_date"];
    google.protobuf.Timestamp from_date = 9 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 10 [json_name = "thru_date"];
    string description = 11 [json_name = "description"];
    string text_data = 12 [json_name = "text_data"];
    google.protobuf.Timestamp last_updated_tx_stamp = 13 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 14 [json_name = "created_tx_stamp"];
    string tenant_id = 15 [json_name = "tenant_id"];
    
    
    // relations
    ProductData product = 16 [json_name = "product"]; // ref(Product): productId
    PartyData from_party = 17 [json_name = "from_party"]; // ref(FromParty): partyIdFrom
    PartyRoleData from_party_role = 19 [json_name = "from_party_role"]; // ref(FromPartyRole): partyIdFrom + roleTypeIdFrom
    PartyData to_party = 20 [json_name = "to_party"]; // ref(ToParty): partyIdTo
    PartyRoleData to_party_role = 22 [json_name = "to_party_role"]; // ref(ToPartyRole): partyIdTo + roleTypeIdTo
    repeated PartyRelationshipData party_relationship = 23 [json_name = "party_relationship"]; // ref(PartyRelationship): roleTypeIdFrom + roleTypeIdTo + partyIdFrom + partyIdTo
    repeated AgreementItemData agreement_item = 31 [json_name = "agreement_item"]; // ref(AgreementItem): agreementId
    repeated AgreementProductApplData agreement_product_appl = 33 [json_name = "agreement_product_appl"]; // ref(AgreementProductAppl): agreementId
    repeated AgreementTermData agreement_term = 36 [json_name = "agreement_term"]; // ref(AgreementTerm): agreementId
    repeated OrderItemShipGroupData supplier_order_item_ship_group = 38 [json_name = "supplier_order_item_ship_group"]; // ref(SupplierOrderItemShipGroup): agreementId
    TenantData tenant = 39 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 40;
    map<string, google.protobuf.Any> attachments = 41;
}



// The Agreement service definition.
service AgreementService {
    rpc Create(AgreementData) returns (routines.Response) {}
    rpc StoreOrUpdate(AgreementFlatData) returns (routines.Response) {}
    rpc Update(AgreementFlatData) returns (routines.Response) {}
    rpc Delete(AgreementFlatData) returns (routines.Response) {}
    rpc Find(AgreementFlatData) returns (AgreementFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (AgreementFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream AgreementData) {}
    rpc FindList(routines.QueryList) returns (stream AgreementData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream AgreementData) {}
}


// Agreement Term
message AgreementTermData {
    option (routines.entity_type) = "AgreementTerm";
    option (routines.keys).keys = "agreement_term_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: agreementTermId
    // fields
    string agreement_term_id = 1 [json_name = "agreement_term_id", (google.api.graphql.relay_options).id = true];
    string term_type_id = 2 [json_name = "term_type_id"];
    string agreement_id = 3 [json_name = "agreement_id"];
    string agreement_item_seq_id = 4 [json_name = "agreement_item_seq_id"];
    string invoice_item_type_id = 5 [json_name = "invoice_item_type_id"];
    google.protobuf.Timestamp from_date = 6 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 7 [json_name = "thru_date"];
    routines.Currency term_value = 8 [json_name = "term_value"];
    int64 term_days = 9 [json_name = "term_days"];
    string text_value = 10 [json_name = "text_value"];
    double min_quantity = 11 [json_name = "min_quantity"];
    double max_quantity = 12 [json_name = "max_quantity"];
    string description = 13 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 14 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 15 [json_name = "created_tx_stamp"];
    string tenant_id = 16 [json_name = "tenant_id"];
    
    
    // relations
    AgreementData agreement = 18 [json_name = "agreement"]; // ref(Agreement): agreementId
    AgreementItemData agreement_item = 19 [json_name = "agreement_item"]; // ref(AgreementItem): agreementId + agreementItemSeqId
    TenantData tenant = 22 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 23;
    map<string, google.protobuf.Any> attachments = 24;
}



// The Agreement Term service definition.
service AgreementTermService {
    rpc Create(AgreementTermData) returns (routines.Response) {}
    rpc StoreOrUpdate(AgreementTermFlatData) returns (routines.Response) {}
    rpc Update(AgreementTermFlatData) returns (routines.Response) {}
    rpc Delete(AgreementTermFlatData) returns (routines.Response) {}
    rpc Find(AgreementTermFlatData) returns (AgreementTermFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (AgreementTermFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream AgreementTermData) {}
    rpc FindList(routines.QueryList) returns (stream AgreementTermData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream AgreementTermData) {}
}


// Party (organization) accounting preferences
message PartyAcctgPreferenceData {
    option (routines.entity_type) = "PartyAcctgPreference";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: partyId
    // fields
    string party_id = 1 [json_name = "party_id", (google.api.graphql.relay_options).id = true];
    int64 fiscal_year_start_month = 2 [json_name = "fiscal_year_start_month"];
    int64 fiscal_year_start_day = 3 [json_name = "fiscal_year_start_day"];
    string tax_form_id = 4 [json_name = "tax_form_id"];
    string cogs_method_id = 5 [json_name = "cogs_method_id"];
    string base_currency_uom_id = 6 [json_name = "base_currency_uom_id"];
    string invoice_seq_cust_meth_id = 7 [json_name = "invoice_seq_cust_meth_id"];
    string invoice_id_prefix = 8 [json_name = "invoice_id_prefix"];
    int64 last_invoice_number = 9 [json_name = "last_invoice_number"];
    google.protobuf.Timestamp last_invoice_restart_date = 10 [json_name = "last_invoice_restart_date"];
    routines.Indicator use_invoice_id_for_returns = 11 [json_name = "use_invoice_id_for_returns"];
    string quote_seq_cust_meth_id = 12 [json_name = "quote_seq_cust_meth_id"];
    string quote_id_prefix = 13 [json_name = "quote_id_prefix"];
    int64 last_quote_number = 14 [json_name = "last_quote_number"];
    string order_seq_cust_meth_id = 15 [json_name = "order_seq_cust_meth_id"];
    string order_id_prefix = 16 [json_name = "order_id_prefix"];
    int64 last_order_number = 17 [json_name = "last_order_number"];
    string refund_payment_method_id = 18 [json_name = "refund_payment_method_id"];
    string error_gl_journal_id = 19 [json_name = "error_gl_journal_id"];
    routines.Indicator enable_accounting = 20 [json_name = "enable_accounting"];
    google.protobuf.Timestamp last_updated_tx_stamp = 21 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 22 [json_name = "created_tx_stamp"];
    string tenant_id = 23 [json_name = "tenant_id"];
    
    
    // relations
    PartyData party = 24 [json_name = "party"]; // ref(Party): partyId
    CustomMethodData invoice_custom_method = 28 [json_name = "invoice_custom_method"]; // ref(InvoiceCustomMethod): invoiceSeqCustMethId
    CustomMethodData quote_custom_method = 29 [json_name = "quote_custom_method"]; // ref(QuoteCustomMethod): quoteSeqCustMethId
    CustomMethodData order_custom_method = 30 [json_name = "order_custom_method"]; // ref(OrderCustomMethod): orderSeqCustMethId
    PaymentMethodData payment_method = 31 [json_name = "payment_method"]; // ref(PaymentMethod): refundPaymentMethodId
    TenantData tenant = 37 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 38;
    map<string, google.protobuf.Any> attachments = 39;
}



// The Party (organization) accounting preferences service definition.
service PartyAcctgPreferenceService {
    rpc Create(PartyAcctgPreferenceData) returns (routines.Response) {}
    rpc StoreOrUpdate(PartyAcctgPreferenceFlatData) returns (routines.Response) {}
    rpc Update(PartyAcctgPreferenceFlatData) returns (routines.Response) {}
    rpc Delete(PartyAcctgPreferenceFlatData) returns (routines.Response) {}
    rpc Find(PartyAcctgPreferenceFlatData) returns (PartyAcctgPreferenceFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (PartyAcctgPreferenceFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream PartyAcctgPreferenceData) {}
    rpc FindList(routines.QueryList) returns (stream PartyAcctgPreferenceData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream PartyAcctgPreferenceData) {}
}


// Survey Question Category
message SurveyQuestionCategoryData {
    option (routines.entity_type) = "SurveyQuestionCategory";
    option (routines.keys).keys = "survey_question_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: surveyQuestionCategoryId
    // fields
    string survey_question_category_id = 1 [json_name = "survey_question_category_id", (google.api.graphql.relay_options).id = true];
    string parent_category_id = 2 [json_name = "parent_category_id"];
    string description = 3 [json_name = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 5 [json_name = "created_tx_stamp"];
    string tenant_id = 6 [json_name = "tenant_id"];
    
    
    // relations
    SurveyQuestionCategoryData parent_survey_question_category = 7 [json_name = "parent_survey_question_category"]; // ref(ParentSurveyQuestionCategory): parentCategoryId
    repeated SurveyQuestionData survey_question = 8 [json_name = "survey_question"]; // ref(SurveyQuestion): surveyQuestionCategoryId
    repeated SurveyQuestionCategoryData child_survey_question_category = 9 [json_name = "child_survey_question_category"]; // ref(ChildSurveyQuestionCategory): surveyQuestionCategoryId
    TenantData tenant = 10 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 11;
    map<string, google.protobuf.Any> attachments = 12;
}



// The Survey Question Category service definition.
service SurveyQuestionCategoryService {
    rpc Create(SurveyQuestionCategoryData) returns (routines.Response) {}
    rpc StoreOrUpdate(SurveyQuestionCategoryFlatData) returns (routines.Response) {}
    rpc Update(SurveyQuestionCategoryFlatData) returns (routines.Response) {}
    rpc Delete(SurveyQuestionCategoryFlatData) returns (routines.Response) {}
    rpc Find(SurveyQuestionCategoryFlatData) returns (SurveyQuestionCategoryFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (SurveyQuestionCategoryFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream SurveyQuestionCategoryData) {}
    rpc FindList(routines.QueryList) returns (stream SurveyQuestionCategoryData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream SurveyQuestionCategoryData) {}
}


// Tax Authority Rate
message TaxAuthorityRateProductData {
    option (routines.entity_type) = "TaxAuthorityRateProduct";
    option (routines.keys).keys = "tax_authority_rate_seq_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: taxAuthorityRateSeqId
    // fields
    string tax_authority_rate_seq_id = 1 [json_name = "tax_authority_rate_seq_id", (google.api.graphql.relay_options).id = true];
    string tax_auth_geo_id = 2 [json_name = "tax_auth_geo_id"];
    string tax_auth_party_id = 3 [json_name = "tax_auth_party_id"];
    string tax_authority_rate_type_id = 4 [json_name = "tax_authority_rate_type_id"];
    string product_store_id = 5 [json_name = "product_store_id"];
    string product_category_id = 6 [json_name = "product_category_id"];
    string title_transfer_enum_id = 7 [json_name = "title_transfer_enum_id"];
    routines.Currency min_item_price = 8 [json_name = "min_item_price"];
    routines.Currency min_purchase = 9 [json_name = "min_purchase"];
    routines.Indicator tax_shipping = 10 [json_name = "tax_shipping"];
    routines.FixedPoint tax_percentage = 11 [json_name = "tax_percentage"];
    routines.Indicator tax_promotions = 12 [json_name = "tax_promotions"];
    google.protobuf.Timestamp from_date = 13 [json_name = "from_date"];
    google.protobuf.Timestamp thru_date = 14 [json_name = "thru_date"];
    string description = 15 [json_name = "description"];
    routines.Indicator is_tax_in_shipping_price = 16 [json_name = "is_tax_in_shipping_price"];
    google.protobuf.Timestamp last_updated_tx_stamp = 17 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 18 [json_name = "created_tx_stamp"];
    string tenant_id = 19 [json_name = "tenant_id"];
    
    
    // relations
    TaxAuthorityData tax_authority = 20 [json_name = "tax_authority"]; // ref(TaxAuthority): taxAuthGeoId + taxAuthPartyId
    ProductStoreData product_store = 22 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    ProductCategoryData product_category = 23 [json_name = "product_category"]; // ref(ProductCategory): productCategoryId
    repeated InvoiceItemData invoice_item = 24 [json_name = "invoice_item"]; // ref(InvoiceItem): taxAuthorityRateSeqId
    repeated OrderAdjustmentData order_adjustment = 25 [json_name = "order_adjustment"]; // ref(OrderAdjustment): taxAuthorityRateSeqId
    TenantData tenant = 27 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 28;
    map<string, google.protobuf.Any> attachments = 29;
}



// The Tax Authority Rate service definition.
service TaxAuthorityRateProductService {
    rpc Create(TaxAuthorityRateProductData) returns (routines.Response) {}
    rpc StoreOrUpdate(TaxAuthorityRateProductFlatData) returns (routines.Response) {}
    rpc Update(TaxAuthorityRateProductFlatData) returns (routines.Response) {}
    rpc Delete(TaxAuthorityRateProductFlatData) returns (routines.Response) {}
    rpc Find(TaxAuthorityRateProductFlatData) returns (TaxAuthorityRateProductFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (TaxAuthorityRateProductFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream TaxAuthorityRateProductData) {}
    rpc FindList(routines.QueryList) returns (stream TaxAuthorityRateProductData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream TaxAuthorityRateProductData) {}
}


// Facility
message FacilityData {
    option (routines.entity_type) = "Facility";
    option (routines.keys).keys = "facility_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: facilityId
    // fields
    string facility_id = 1 [json_name = "facility_id", (google.api.graphql.relay_options).id = true];
    string facility_type_id = 2 [json_name = "facility_type_id"];
    string parent_facility_id = 3 [json_name = "parent_facility_id"];
    string owner_party_id = 4 [json_name = "owner_party_id"];
    string default_inventory_item_type_id = 5 [json_name = "default_inventory_item_type_id"];
    string facility_name = 6 [json_name = "facility_name"];
    string primary_facility_group_id = 7 [json_name = "primary_facility_group_id"];
    routines.FixedPoint facility_size = 8 [json_name = "facility_size"];
    string facility_size_uom_id = 9 [json_name = "facility_size_uom_id"];
    string product_store_id = 10 [json_name = "product_store_id"];
    int64 default_days_to_ship = 11 [json_name = "default_days_to_ship"];
    google.protobuf.Timestamp opened_date = 12 [json_name = "opened_date"];
    google.protobuf.Timestamp closed_date = 13 [json_name = "closed_date"];
    string description = 14 [json_name = "description"];
    string default_dimension_uom_id = 15 [json_name = "default_dimension_uom_id"];
    string default_weight_uom_id = 16 [json_name = "default_weight_uom_id"];
    string geo_point_id = 17 [json_name = "geo_point_id"];
    int64 facility_level = 18 [json_name = "facility_level"];
    google.protobuf.Timestamp last_updated_tx_stamp = 19 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 20 [json_name = "created_tx_stamp"];
    string tenant_id = 21 [json_name = "tenant_id"];
    
    
    // relations
    FacilityData parent_facility = 23 [json_name = "parent_facility"]; // ref(ParentFacility): parentFacilityId
    PartyData owner_party = 25 [json_name = "owner_party"]; // ref(OwnerParty): ownerPartyId
    ProductStoreData product_store = 29 [json_name = "product_store"]; // ref(ProductStore): productStoreId
    GeoPointData geo_point = 31 [json_name = "geo_point"]; // ref(GeoPoint): geoPointId
    repeated FacilityData child_facility = 37 [json_name = "child_facility"]; // ref(ChildFacility): facilityId
    repeated FacilityContactMechData facility_contact_mech = 41 [json_name = "facility_contact_mech"]; // ref(FacilityContactMech): facilityId
    repeated FacilityContactMechPurposeData facility_contact_mech_purpose = 42 [json_name = "facility_contact_mech_purpose"]; // ref(FacilityContactMechPurpose): facilityId
    repeated FacilityLocationData facility_location = 45 [json_name = "facility_location"]; // ref(FacilityLocation): facilityId
    repeated FixedAssetData located_at_fixed_asset = 47 [json_name = "located_at_fixed_asset"]; // ref(LocatedAtFixedAsset): facilityId
    repeated InventoryItemData inventory_item = 48 [json_name = "inventory_item"]; // ref(InventoryItem): facilityId
    repeated OrderHeaderData origin_order_header = 52 [json_name = "origin_order_header"]; // ref(OriginOrderHeader): facilityId
    repeated OrderItemShipGroupData order_item_ship_group = 53 [json_name = "order_item_ship_group"]; // ref(OrderItemShipGroup): facilityId
    repeated ProductData product = 57 [json_name = "product"]; // ref(Product): facilityId
    repeated ProductFacilityData product_facility = 59 [json_name = "product_facility"]; // ref(ProductFacility): facilityId
    repeated ProductFacilityAssocData from_product_facility_assoc = 60 [json_name = "from_product_facility_assoc"]; // ref(FromProductFacilityAssoc): facilityId
    repeated ProductFacilityAssocData to_product_facility_assoc = 61 [json_name = "to_product_facility_assoc"]; // ref(ToProductFacilityAssoc): facilityId
    repeated ProductFacilityLocationData product_facility_location = 62 [json_name = "product_facility_location"]; // ref(ProductFacilityLocation): facilityId
    repeated ProductStoreFacilityData product_store_facility = 63 [json_name = "product_store_facility"]; // ref(ProductStoreFacility): facilityId
    repeated RequirementData requirement = 65 [json_name = "requirement"]; // ref(Requirement): facilityId
    repeated ReturnHeaderData return_header = 66 [json_name = "return_header"]; // ref(ReturnHeader): facilityId
    repeated ShipmentData origin_shipment = 67 [json_name = "origin_shipment"]; // ref(OriginShipment): facilityId
    repeated ShipmentData destination_shipment = 68 [json_name = "destination_shipment"]; // ref(DestinationShipment): facilityId
    repeated ShipmentRouteSegmentData origin_shipment_route_segment = 69 [json_name = "origin_shipment_route_segment"]; // ref(OriginShipmentRouteSegment): facilityId
    repeated ShipmentRouteSegmentData dest_shipment_route_segment = 70 [json_name = "dest_shipment_route_segment"]; // ref(DestShipmentRouteSegment): facilityId
    repeated WorkEffortData work_effort = 71 [json_name = "work_effort"]; // ref(WorkEffort): facilityId
    repeated WorkEffortPartyAssignmentData work_effort_party_assignment = 72 [json_name = "work_effort_party_assignment"]; // ref(WorkEffortPartyAssignment): facilityId
    TenantData tenant = 73 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 74;
    map<string, google.protobuf.Any> attachments = 75;
}



// The Facility service definition.
service FacilityService {
    rpc Create(FacilityData) returns (routines.Response) {}
    rpc StoreOrUpdate(FacilityFlatData) returns (routines.Response) {}
    rpc Update(FacilityFlatData) returns (routines.Response) {}
    rpc Delete(FacilityFlatData) returns (routines.Response) {}
    rpc Find(FacilityFlatData) returns (FacilityFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (FacilityFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream FacilityData) {}
    rpc FindList(routines.QueryList) returns (stream FacilityData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream FacilityData) {}
}


// Week definition
message TechDataCalendarWeekData {
    option (routines.entity_type) = "TechDataCalendarWeek";
    option (routines.keys).keys = "calendar_week_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: calendarWeekId
    // fields
    string calendar_week_id = 1 [json_name = "calendar_week_id", (google.api.graphql.relay_options).id = true];
    string description = 2 [json_name = "description"];
    google.type.TimeOfDay monday_start_time = 3 [json_name = "monday_start_time"];
    double monday_capacity = 4 [json_name = "monday_capacity"];
    google.type.TimeOfDay tuesday_start_time = 5 [json_name = "tuesday_start_time"];
    double tuesday_capacity = 6 [json_name = "tuesday_capacity"];
    google.type.TimeOfDay wednesday_start_time = 7 [json_name = "wednesday_start_time"];
    double wednesday_capacity = 8 [json_name = "wednesday_capacity"];
    google.type.TimeOfDay thursday_start_time = 9 [json_name = "thursday_start_time"];
    double thursday_capacity = 10 [json_name = "thursday_capacity"];
    google.type.TimeOfDay friday_start_time = 11 [json_name = "friday_start_time"];
    double friday_capacity = 12 [json_name = "friday_capacity"];
    google.type.TimeOfDay saturday_start_time = 13 [json_name = "saturday_start_time"];
    double saturday_capacity = 14 [json_name = "saturday_capacity"];
    google.type.TimeOfDay sunday_start_time = 15 [json_name = "sunday_start_time"];
    double sunday_capacity = 16 [json_name = "sunday_capacity"];
    google.protobuf.Timestamp last_updated_tx_stamp = 17 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 18 [json_name = "created_tx_stamp"];
    string tenant_id = 19 [json_name = "tenant_id"];
    
    
    // relations
    repeated TechDataCalendarData tech_data_calendar = 20 [json_name = "tech_data_calendar"]; // ref(TechDataCalendar): calendarWeekId
    TenantData tenant = 22 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 23;
    map<string, google.protobuf.Any> attachments = 24;
}



// The Week definition service definition.
service TechDataCalendarWeekService {
    rpc Create(TechDataCalendarWeekData) returns (routines.Response) {}
    rpc StoreOrUpdate(TechDataCalendarWeekFlatData) returns (routines.Response) {}
    rpc Update(TechDataCalendarWeekFlatData) returns (routines.Response) {}
    rpc Delete(TechDataCalendarWeekFlatData) returns (routines.Response) {}
    rpc Find(TechDataCalendarWeekFlatData) returns (TechDataCalendarWeekFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (TechDataCalendarWeekFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream TechDataCalendarWeekData) {}
    rpc FindList(routines.QueryList) returns (stream TechDataCalendarWeekData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream TechDataCalendarWeekData) {}
}


// EFT Account Information
message EftAccountData {
    option (routines.entity_type) = "EftAccount";
    option (routines.keys).keys = "payment_method_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: paymentMethodId
    // fields
    string payment_method_id = 1 [json_name = "payment_method_id", (google.api.graphql.relay_options).id = true];
    string bank_name = 2 [json_name = "bank_name"];
    string routing_number = 3 [json_name = "routing_number"];
    string account_type = 4 [json_name = "account_type"];
    string account_number = 5 [json_name = "account_number"];
    string name_on_account = 6 [json_name = "name_on_account"];
    string company_name_on_account = 7 [json_name = "company_name_on_account"];
    string contact_mech_id = 8 [json_name = "contact_mech_id"];
    int64 years_at_bank = 9 [json_name = "years_at_bank"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 11 [json_name = "created_tx_stamp"];
    string tenant_id = 12 [json_name = "tenant_id"];
    
    
    // relations
    PaymentMethodData payment_method = 13 [json_name = "payment_method"]; // ref(PaymentMethod): paymentMethodId
    ContactMechData contact_mech = 14 [json_name = "contact_mech"]; // ref(ContactMech): contactMechId
    PostalAddressData postal_address = 15 [json_name = "postal_address"]; // ref(PostalAddress): contactMechId
    repeated OrderPaymentPreferenceData order_payment_preference = 16 [json_name = "order_payment_preference"]; // ref(OrderPaymentPreference): paymentMethodId
    repeated PaymentData payment = 17 [json_name = "payment"]; // ref(Payment): paymentMethodId
    TenantData tenant = 18 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 19;
    map<string, google.protobuf.Any> attachments = 20;
}



// The EFT Account Information service definition.
service EftAccountService {
    rpc Create(EftAccountData) returns (routines.Response) {}
    rpc StoreOrUpdate(EftAccountFlatData) returns (routines.Response) {}
    rpc Update(EftAccountFlatData) returns (routines.Response) {}
    rpc Delete(EftAccountFlatData) returns (routines.Response) {}
    rpc Find(EftAccountFlatData) returns (EftAccountFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (EftAccountFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream EftAccountData) {}
    rpc FindList(routines.QueryList) returns (stream EftAccountData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream EftAccountData) {}
}


// Survey Question
message SurveyQuestionData {
    option (routines.entity_type) = "SurveyQuestion";
    option (routines.keys).keys = "survey_question_id";
    option (routines.keys).combine = false;
    option (routines.flat) = false;
    option (routines.has_table) = true;
    // keys: surveyQuestionId
    // fields
    string survey_question_id = 1 [json_name = "survey_question_id", (google.api.graphql.relay_options).id = true];
    string survey_question_category_id = 2 [json_name = "survey_question_category_id"];
    string survey_question_type_id = 3 [json_name = "survey_question_type_id"];
    string description = 4 [json_name = "description"];
    string question = 5 [json_name = "question"];
    string hint = 6 [json_name = "hint"];
    string enum_type_id = 7 [json_name = "enum_type_id"];
    string geo_id = 8 [json_name = "geo_id"];
    string format_string = 9 [json_name = "format_string"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [json_name = "last_updated_tx_stamp"];
    google.protobuf.Timestamp created_tx_stamp = 11 [json_name = "created_tx_stamp"];
    string tenant_id = 12 [json_name = "tenant_id"];
    
    
    // relations
    SurveyQuestionCategoryData survey_question_category = 14 [json_name = "survey_question_category"]; // ref(SurveyQuestionCategory): surveyQuestionCategoryId
    repeated SurveyQuestionApplData survey_question_appl = 17 [json_name = "survey_question_appl"]; // ref(SurveyQuestionAppl): surveyQuestionId
    repeated SurveyQuestionOptionData survey_question_option = 18 [json_name = "survey_question_option"]; // ref(SurveyQuestionOption): surveyQuestionId
    TenantData tenant = 20 [json_name = "tenant"]; // ref(Tenant): tenantId
    
        

    // extra
    google.protobuf.Struct extra = 21;
    map<string, google.protobuf.Any> attachments = 22;
}



// The Survey Question service definition.
service SurveyQuestionService {
    rpc Create(SurveyQuestionData) returns (routines.Response) {}
    rpc StoreOrUpdate(SurveyQuestionFlatData) returns (routines.Response) {}
    rpc Update(SurveyQuestionFlatData) returns (routines.Response) {}
    rpc Delete(SurveyQuestionFlatData) returns (routines.Response) {}
    rpc Find(SurveyQuestionFlatData) returns (SurveyQuestionFlatData) {}
    rpc DeleteById(routines.Identity) returns (routines.Response) {}
    rpc FindById(routines.Identity) returns (SurveyQuestionFlatData) {}
    rpc FindRelations(routines.QueryRelations) returns (stream SurveyQuestionData) {}
    rpc FindList(routines.QueryList) returns (stream SurveyQuestionData) {}
    rpc FindObjects(condition.QueryObjects) returns (stream SurveyQuestionData) {}
}


