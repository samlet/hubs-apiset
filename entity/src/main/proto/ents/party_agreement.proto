syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "PartyAgreementProto";
option objc_class_prefix = "PartyAgreement";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// flat-ent: Agreement
message AgreementFlatData {
    option (routines.entity_type) = "Agreement";
    option (routines.keys).keys = "agreement_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: agreementId
        
    string agreement_id = 1 [json_name = "agreement_id", (google.api.graphql.relay_options).id = true];    
    string product_id = 2 [json_name = "product_id"];    
    string party_id_from = 3 [json_name = "party_id_from"];    
    string party_id_to = 4 [json_name = "party_id_to"];    
    string role_type_id_from = 5 [json_name = "role_type_id_from"];
    string role_type_id_to = 6 [json_name = "role_type_id_to"]; // RoleType    
    string agreement_type_id = 7 [json_name = "agreement_type_id"];    
    google.protobuf.Timestamp agreement_date = 8 [json_name = "agreement_date"];    
    google.protobuf.Timestamp from_date = 9 [json_name = "from_date"];    
    google.protobuf.Timestamp thru_date = 10 [json_name = "thru_date"];    
    string description = 11 [json_name = "description"];    
    string text_data = 12 [json_name = "text_data"];    
    google.protobuf.Timestamp last_updated_tx_stamp = 13 [json_name = "last_updated_tx_stamp"];    
    google.protobuf.Timestamp created_tx_stamp = 14 [json_name = "created_tx_stamp"];    
    string tenant_id = 15 [json_name = "tenant_id"]; 

    // extra
    google.protobuf.Struct extra = 40;
    map<string, google.protobuf.Any> attachments = 41 ;
}

message AgreementList{
    repeated AgreementFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListAgreements` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}

// Agreement Item
message AgreementItemData {
    option (routines.entity_type) = "AgreementItem";
    option (routines.keys).keys = "agreement_id, agreement_item_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: agreementId, agreementItemSeqId
    // fields
        
    string agreement_id = 1 [json_name = "agreement_id"];    
    string agreement_item_seq_id = 2 [json_name = "agreement_item_seq_id"];    
    string agreement_item_type_id = 3 [json_name = "agreement_item_type_id"];    
    string currency_uom_id = 4 [json_name = "currency_uom_id"];    
    string agreement_text = 5 [json_name = "agreement_text"];    
    bytes agreement_image = 6 [json_name = "agreement_image"];    
    google.protobuf.Timestamp last_updated_tx_stamp = 7 [json_name = "last_updated_tx_stamp"];    
    google.protobuf.Timestamp created_tx_stamp = 8 [json_name = "created_tx_stamp"];    
    string id = 9 [json_name = "id", (google.api.graphql.relay_options).id = true];
        

    // extra
    google.protobuf.Struct extra = 14;
    map<string, google.protobuf.Any> attachments = 15;
}


message AgreementItemList{
    repeated AgreementItemData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListAgreementItems` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// Agreement Product Application
message AgreementProductApplData {
    option (routines.entity_type) = "AgreementProductAppl";
    option (routines.keys).keys = "agreement_id, agreement_item_seq_id, product_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: agreementId, agreementItemSeqId, productId
    // fields
        
    string agreement_id = 1 [json_name = "agreement_id"];    
    string agreement_item_seq_id = 2 [json_name = "agreement_item_seq_id"];    
    string product_id = 3 [json_name = "product_id"];    
    routines.Currency price = 4 [json_name = "price"];    
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [json_name = "last_updated_tx_stamp"];    
    google.protobuf.Timestamp created_tx_stamp = 6 [json_name = "created_tx_stamp"];    
    string id = 7 [json_name = "id", (google.api.graphql.relay_options).id = true];
        

    // extra
    google.protobuf.Struct extra = 11;
    map<string, google.protobuf.Any> attachments = 12;
}


message AgreementProductApplList{
    repeated AgreementProductApplData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListAgreementProductAppls` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}


// flat-ent: Agreement Term
message AgreementTermFlatData {
    option (routines.entity_type) = "AgreementTerm";
    option (routines.keys).keys = "agreement_term_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: agreementTermId
        
    string agreement_term_id = 1 [json_name = "agreement_term_id", (google.api.graphql.relay_options).id = true];
    string term_type_id = 2 [json_name = "term_type_id"]; // TermType    
    string agreement_id = 3 [json_name = "agreement_id"];    
    string agreement_item_seq_id = 4 [json_name = "agreement_item_seq_id"];
    string invoice_item_type_id = 5 [json_name = "invoice_item_type_id"]; // InvoiceItemType    
    google.protobuf.Timestamp from_date = 6 [json_name = "from_date"];    
    google.protobuf.Timestamp thru_date = 7 [json_name = "thru_date"];    
    routines.Currency term_value = 8 [json_name = "term_value"];    
    int64 term_days = 9 [json_name = "term_days"];    
    string text_value = 10 [json_name = "text_value"];    
    double min_quantity = 11 [json_name = "min_quantity"];    
    double max_quantity = 12 [json_name = "max_quantity"];    
    string description = 13 [json_name = "description"];    
    google.protobuf.Timestamp last_updated_tx_stamp = 14 [json_name = "last_updated_tx_stamp"];    
    google.protobuf.Timestamp created_tx_stamp = 15 [json_name = "created_tx_stamp"];    
    string tenant_id = 16 [json_name = "tenant_id"]; 

    // extra
    google.protobuf.Struct extra = 23;
    map<string, google.protobuf.Any> attachments = 24 ;
}

message AgreementTermList{
    repeated AgreementTermFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListAgreementTerms` method to retrieve the next
    // page of results.
    string next_page_token = 2;
}

