syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "PartyContactProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// flat-ent: Contact Mechanism
message ContactMechFlatData {
    option (routines.entity_type) = "ContactMech";
    option (routines.keys).keys = "contact_mech_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contactMechId
    string contact_mech_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string contact_mech_type_id = 2 [(routines.opts).field_type = "id"];
    string info_string = 3 [(routines.opts).field_type = "long-varchar"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
    string tenant_id = 6 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 51;
    map<string, google.protobuf.Any> attachments = 52 ;
}

message ContactMechKey{
    string contact_mech_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message ContactMechList{
    repeated ContactMechFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListContactMeches` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// Party Contact Mechanism
message PartyContactMechData {
    option (routines.entity_type) = "PartyContactMech";
    option (routines.keys).keys = "party_id, contact_mech_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, contactMechId, fromDate
    // fields
    string party_id = 1 [(routines.opts).field_type = "id"];
    string contact_mech_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 4 [(routines.opts).field_type = "date-time"];
    string role_type_id = 5 [(routines.opts).field_type = "id"];
    routines.Indicator allow_solicitation = 6 [(routines.opts).field_type = "indicator"];
    string extension = 7 [(routines.opts).field_type = "long-varchar"];
    routines.Indicator verified = 8 [(routines.opts).field_type = "indicator"];
    string comments = 9 [(routines.opts).field_type = "comment"];
    int64 years_with_contact_mech = 10 [(routines.opts).field_type = "numeric"];
    int64 months_with_contact_mech = 11 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp last_updated_tx_stamp = 12 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 13 [(routines.opts).field_type = "date-time"];
    string id = 14 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 24;
    map<string, google.protobuf.Any> attachments = 25;
}


message PartyContactMechKey{
    string party_id = 1 [(routines.opts).field_type = "id"];
    string contact_mech_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
}

message PartyContactMechList{
    repeated PartyContactMechData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListPartyContactMeches` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Party Contact Mechanism Purpose
message PartyContactMechPurposeData {
    option (routines.entity_type) = "PartyContactMechPurpose";
    option (routines.keys).keys = "party_id, contact_mech_id, contact_mech_purpose_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: partyId, contactMechId, contactMechPurposeTypeId, fromDate
    // fields
    string party_id = 1 [(routines.opts).field_type = "id"];
    string contact_mech_id = 2 [(routines.opts).field_type = "id"];
    string contact_mech_purpose_type_id = 3 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 5 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
    string id = 8 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 17;
    map<string, google.protobuf.Any> attachments = 18;
}


message PartyContactMechPurposeKey{
    string party_id = 1 [(routines.opts).field_type = "id"];
    string contact_mech_id = 2 [(routines.opts).field_type = "id"];
    string contact_mech_purpose_type_id = 3 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 4 [(routines.opts).field_type = "date-time"];
}

message PartyContactMechPurposeList{
    repeated PartyContactMechPurposeData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListPartyContactMechPurposes` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// flat-ent: Postal Address
message PostalAddressFlatData {
    option (routines.entity_type) = "PostalAddress";
    option (routines.keys).keys = "contact_mech_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contactMechId
    string contact_mech_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string to_name = 2 [(routines.opts).field_type = "name"];
    string attn_name = 3 [(routines.opts).field_type = "name"];
    string address1 = 4 [(routines.opts).field_type = "long-varchar"];
    string address2 = 5 [(routines.opts).field_type = "long-varchar"];
    int64 house_number = 6 [(routines.opts).field_type = "numeric"];
    string house_number_ext = 7 [(routines.opts).field_type = "short-varchar"];
    string directions = 8 [(routines.opts).field_type = "long-varchar"];
    string city = 9 [(routines.opts).field_type = "name"];
    string city_geo_id = 10 [(routines.opts).field_type = "id"];
    string postal_code = 11 [(routines.opts).field_type = "short-varchar"];
    string postal_code_ext = 12 [(routines.opts).field_type = "short-varchar"];
    string country_geo_id = 13 [(routines.opts).field_type = "id"];
    string state_province_geo_id = 14 [(routines.opts).field_type = "id"];
    string county_geo_id = 15 [(routines.opts).field_type = "id"];
    string municipality_geo_id = 16 [(routines.opts).field_type = "id"];
    string postal_code_geo_id = 17 [(routines.opts).field_type = "id"];
    string geo_point_id = 18 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 19 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 20 [(routines.opts).field_type = "date-time"];
    string tenant_id = 21 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 47;
    map<string, google.protobuf.Any> attachments = 48 ;
}

message PostalAddressKey{
    string contact_mech_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message PostalAddressList{
    repeated PostalAddressFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListPostalAddresses` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// flat-ent: Telecommunications Number
message TelecomNumberFlatData {
    option (routines.entity_type) = "TelecomNumber";
    option (routines.keys).keys = "contact_mech_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: contactMechId
    string contact_mech_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string country_code = 2 [(routines.opts).field_type = "very-short"];
    string area_code = 3 [(routines.opts).field_type = "very-short"];
    string contact_number = 4 [(routines.opts).field_type = "short-varchar"];
    string ask_for_name = 5 [(routines.opts).field_type = "name"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
    string tenant_id = 8 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 20;
    map<string, google.protobuf.Any> attachments = 21 ;
}

message TelecomNumberKey{
    string contact_mech_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TelecomNumberList{
    repeated TelecomNumberFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTelecomNumbers` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

