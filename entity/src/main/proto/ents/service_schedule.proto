syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "ServiceScheduleProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// flat-ent: Job Scheduler Sandbox
message JobSandboxFlatData {
    option (routines.entity_type) = "JobSandbox";
    option (routines.keys).keys = "job_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: jobId
    string job_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string job_name = 2 [(routines.opts).field_type = "name"];
    google.protobuf.Timestamp run_time = 3 [(routines.opts).field_type = "date-time"];
    int64 priority = 4 [(routines.opts).field_type = "numeric"];
    string pool_id = 5 [(routines.opts).field_type = "name"];
    string status_id = 6 [(routines.opts).field_type = "id"];
    string parent_job_id = 7 [(routines.opts).field_type = "id"];
    string previous_job_id = 8 [(routines.opts).field_type = "id"];
    string service_name = 9 [(routines.opts).field_type = "name"];
    string loader_name = 10 [(routines.opts).field_type = "name"];
    int64 max_retry = 11 [(routines.opts).field_type = "numeric"];
    int64 current_retry_count = 12 [(routines.opts).field_type = "numeric"];
    string auth_user_login_id = 13 [(routines.opts).field_type = "id-vlong"];
    string run_as_user = 14 [(routines.opts).field_type = "id-vlong"];
    string runtime_data_id = 15 [(routines.opts).field_type = "id"];
    string recurrence_info_id = 16 [(routines.opts).field_type = "id"];
    string temp_expr_id = 17 [(routines.opts).field_type = "id"];
    int64 current_recurrence_count = 18 [(routines.opts).field_type = "numeric"];
    int64 max_recurrence_count = 19 [(routines.opts).field_type = "numeric"];
    string run_by_instance_id = 20 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp start_date_time = 21 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp finish_date_time = 22 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp cancel_date_time = 23 [(routines.opts).field_type = "date-time"];
    string job_result = 24 [(routines.opts).field_type = "value"];
    string recurrence_time_zone = 25 [(routines.opts).field_type = "id-long"];
    google.protobuf.Timestamp last_updated_tx_stamp = 26 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 27 [(routines.opts).field_type = "date-time"];
    string tenant_id = 28 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 37;
    map<string, google.protobuf.Any> attachments = 38 ;
}

message JobSandboxKey{
    string job_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message JobSandboxList{
    repeated JobSandboxFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListJobSandboxes` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// flat-ent: Recurrence Info
message RecurrenceInfoFlatData {
    option (routines.entity_type) = "RecurrenceInfo";
    option (routines.keys).keys = "recurrence_info_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: recurrenceInfoId
    string recurrence_info_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    google.protobuf.Timestamp start_date_time = 2 [(routines.opts).field_type = "date-time"];
    string exception_date_times = 3 [(routines.opts).field_type = "very-long"];
    string recurrence_date_times = 4 [(routines.opts).field_type = "very-long"];
    string exception_rule_id = 5 [(routines.opts).field_type = "id"];
    string recurrence_rule_id = 6 [(routines.opts).field_type = "id"];
    int64 recurrence_count = 7 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp last_updated_tx_stamp = 8 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 9 [(routines.opts).field_type = "date-time"];
    string tenant_id = 10 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 19;
    map<string, google.protobuf.Any> attachments = 20 ;
}

message RecurrenceInfoKey{
    string recurrence_info_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message RecurrenceInfoList{
    repeated RecurrenceInfoFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListRecurrenceInfos` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// flat-ent: Recurrence Rule
message RecurrenceRuleFlatData {
    option (routines.entity_type) = "RecurrenceRule";
    option (routines.keys).keys = "recurrence_rule_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: recurrenceRuleId
    string recurrence_rule_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string frequency = 2 [(routines.opts).field_type = "short-varchar"];
    google.protobuf.Timestamp until_date_time = 3 [(routines.opts).field_type = "date-time"];
    int64 count_number = 4 [(routines.opts).field_type = "numeric"];
    int64 interval_number = 5 [(routines.opts).field_type = "numeric"];
    string by_second_list = 6 [(routines.opts).field_type = "very-long"];
    string by_minute_list = 7 [(routines.opts).field_type = "very-long"];
    string by_hour_list = 8 [(routines.opts).field_type = "very-long"];
    string by_day_list = 9 [(routines.opts).field_type = "very-long"];
    string by_month_day_list = 10 [(routines.opts).field_type = "very-long"];
    string by_year_day_list = 11 [(routines.opts).field_type = "very-long"];
    string by_week_no_list = 12 [(routines.opts).field_type = "very-long"];
    string by_month_list = 13 [(routines.opts).field_type = "very-long"];
    string by_set_pos_list = 14 [(routines.opts).field_type = "very-long"];
    string week_start = 15 [(routines.opts).field_type = "short-varchar"];
    string x_name = 16 [(routines.opts).field_type = "very-long"];
    google.protobuf.Timestamp last_updated_tx_stamp = 17 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 18 [(routines.opts).field_type = "date-time"];
    string tenant_id = 19 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 23;
    map<string, google.protobuf.Any> attachments = 24 ;
}

message RecurrenceRuleKey{
    string recurrence_rule_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message RecurrenceRuleList{
    repeated RecurrenceRuleFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListRecurrenceRules` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// flat-ent: Temporal Expression
message TemporalExpressionFlatData {
    option (routines.entity_type) = "TemporalExpression";
    option (routines.keys).keys = "temp_expr_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: tempExprId
    string temp_expr_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string temp_expr_type_id = 2 [(routines.opts).field_type = "id"];
    string description = 3 [(routines.opts).field_type = "description"];
    google.protobuf.Timestamp date1 = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp date2 = 5 [(routines.opts).field_type = "date-time"];
    int64 integer1 = 6 [(routines.opts).field_type = "numeric"];
    int64 integer2 = 7 [(routines.opts).field_type = "numeric"];
    string string1 = 8 [(routines.opts).field_type = "id"];
    string string2 = 9 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 11 [(routines.opts).field_type = "date-time"];
    string tenant_id = 12 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 18;
    map<string, google.protobuf.Any> attachments = 19 ;
}

message TemporalExpressionKey{
    string temp_expr_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message TemporalExpressionList{
    repeated TemporalExpressionFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTemporalExpressions` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// Temporal Expression Association
message TemporalExpressionAssocData {
    option (routines.entity_type) = "TemporalExpressionAssoc";
    option (routines.keys).keys = "from_temp_expr_id, to_temp_expr_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fromTempExprId, toTempExprId
    // fields
    string from_temp_expr_id = 1 [(routines.opts).field_type = "id"];
    string to_temp_expr_id = 2 [(routines.opts).field_type = "id"];
    string expr_assoc_type = 3 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
    string id = 6 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 9;
    map<string, google.protobuf.Any> attachments = 10;
}


message TemporalExpressionAssocKey{
    string from_temp_expr_id = 1 [(routines.opts).field_type = "id"];
    string to_temp_expr_id = 2 [(routines.opts).field_type = "id"];
}

message TemporalExpressionAssocList{
    repeated TemporalExpressionAssocData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListTemporalExpressionAssocs` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


