syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "ContentSurveyProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// flat-ent: Survey
message SurveyFlatData {
    option (routines.entity_type) = "Survey";
    option (routines.keys).keys = "survey_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId
    string survey_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string survey_name = 2 [(routines.opts).field_type = "name"];
    string description = 3 [(routines.opts).field_type = "description"];
    string comments = 4 [(routines.opts).field_type = "comment"];
    string submit_caption = 5 [(routines.opts).field_type = "short-varchar"];
    string response_service = 6 [(routines.opts).field_type = "long-varchar"];
    routines.Indicator is_anonymous = 7 [(routines.opts).field_type = "indicator"];
    routines.Indicator allow_multiple = 8 [(routines.opts).field_type = "indicator"];
    routines.Indicator allow_update = 9 [(routines.opts).field_type = "indicator"];
    string acro_form_content_id = 10 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 11 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 12 [(routines.opts).field_type = "date-time"];
    string tenant_id = 13 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 24;
    map<string, google.protobuf.Any> attachments = 25 ;
}

message SurveyKey{
    string survey_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message SurveyList{
    repeated SurveyFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSurveys` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// flat-ent: Survey Application Type
message SurveyApplTypeFlatData {
    option (routines.entity_type) = "SurveyApplType";
    option (routines.keys).keys = "survey_appl_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyApplTypeId
    string survey_appl_type_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string description = 2 [(routines.opts).field_type = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
    string tenant_id = 5 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 9;
    map<string, google.protobuf.Any> attachments = 10 ;
}

message SurveyApplTypeKey{
    string survey_appl_type_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message SurveyApplTypeList{
    repeated SurveyApplTypeFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSurveyApplTypes` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// Survey Multi-Response Group
message SurveyMultiRespData {
    option (routines.entity_type) = "SurveyMultiResp";
    option (routines.keys).keys = "survey_id, survey_multi_resp_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId, surveyMultiRespId
    // fields
    string survey_id = 1 [(routines.opts).field_type = "id"];
    string survey_multi_resp_id = 2 [(routines.opts).field_type = "id"];
    string multi_resp_title = 3 [(routines.opts).field_type = "name"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
    string id = 6 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 10;
    map<string, google.protobuf.Any> attachments = 11;
}


message SurveyMultiRespKey{
    string survey_id = 1 [(routines.opts).field_type = "id"];
    string survey_multi_resp_id = 2 [(routines.opts).field_type = "id"];
}

message SurveyMultiRespList{
    repeated SurveyMultiRespData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSurveyMultiResps` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Survey Multi-Response Group Column/Category
message SurveyMultiRespColumnData {
    option (routines.entity_type) = "SurveyMultiRespColumn";
    option (routines.keys).keys = "survey_id, survey_multi_resp_id, survey_multi_resp_col_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId, surveyMultiRespId, surveyMultiRespColId
    // fields
    string survey_id = 1 [(routines.opts).field_type = "id"];
    string survey_multi_resp_id = 2 [(routines.opts).field_type = "id"];
    string survey_multi_resp_col_id = 3 [(routines.opts).field_type = "id"];
    string column_title = 4 [(routines.opts).field_type = "name"];
    int64 sequence_num = 5 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
    string id = 8 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 11;
    map<string, google.protobuf.Any> attachments = 12;
}


message SurveyMultiRespColumnKey{
    string survey_id = 1 [(routines.opts).field_type = "id"];
    string survey_multi_resp_id = 2 [(routines.opts).field_type = "id"];
    string survey_multi_resp_col_id = 3 [(routines.opts).field_type = "id"];
}

message SurveyMultiRespColumnList{
    repeated SurveyMultiRespColumnData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSurveyMultiRespColumns` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Survey Page Type
message SurveyPageData {
    option (routines.entity_type) = "SurveyPage";
    option (routines.keys).keys = "survey_id, survey_page_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId, surveyPageSeqId
    // fields
    string survey_id = 1 [(routines.opts).field_type = "id"];
    string survey_page_seq_id = 2 [(routines.opts).field_type = "id"];
    string page_name = 3 [(routines.opts).field_type = "name"];
    int64 sequence_num = 4 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    string id = 7 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 10;
    map<string, google.protobuf.Any> attachments = 11;
}


message SurveyPageKey{
    string survey_id = 1 [(routines.opts).field_type = "id"];
    string survey_page_seq_id = 2 [(routines.opts).field_type = "id"];
}

message SurveyPageList{
    repeated SurveyPageData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSurveyPages` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// flat-ent: Survey Question
message SurveyQuestionFlatData {
    option (routines.entity_type) = "SurveyQuestion";
    option (routines.keys).keys = "survey_question_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyQuestionId
    string survey_question_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string survey_question_category_id = 2 [(routines.opts).field_type = "id"];
    string survey_question_type_id = 3 [(routines.opts).field_type = "id"];
    string description = 4 [(routines.opts).field_type = "description"];
    string question = 5 [(routines.opts).field_type = "very-long"];
    string hint = 6 [(routines.opts).field_type = "very-long"];
    string enum_type_id = 7 [(routines.opts).field_type = "id"];
    string geo_id = 8 [(routines.opts).field_type = "id"];
    string format_string = 9 [(routines.opts).field_type = "value"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 11 [(routines.opts).field_type = "date-time"];
    string tenant_id = 12 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 21;
    map<string, google.protobuf.Any> attachments = 22 ;
}

message SurveyQuestionKey{
    string survey_question_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message SurveyQuestionList{
    repeated SurveyQuestionFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSurveyQuestions` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// Survey Question Application
message SurveyQuestionApplData {
    option (routines.entity_type) = "SurveyQuestionAppl";
    option (routines.keys).keys = "survey_id, survey_question_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyId, surveyQuestionId, fromDate
    // fields
    string survey_id = 1 [(routines.opts).field_type = "id"];
    string survey_question_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 4 [(routines.opts).field_type = "date-time"];
    string survey_page_seq_id = 5 [(routines.opts).field_type = "id"];
    string survey_multi_resp_id = 6 [(routines.opts).field_type = "id"];
    string survey_multi_resp_col_id = 7 [(routines.opts).field_type = "id"];
    routines.Indicator required_field = 8 [(routines.opts).field_type = "indicator"];
    int64 sequence_num = 9 [(routines.opts).field_type = "numeric"];
    string external_field_ref = 10 [(routines.opts).field_type = "long-varchar"];
    string with_survey_question_id = 11 [(routines.opts).field_type = "id"];
    string with_survey_option_seq_id = 12 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 13 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 14 [(routines.opts).field_type = "date-time"];
    string id = 15 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 22;
    map<string, google.protobuf.Any> attachments = 23;
}


message SurveyQuestionApplKey{
    string survey_id = 1 [(routines.opts).field_type = "id"];
    string survey_question_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
}

message SurveyQuestionApplList{
    repeated SurveyQuestionApplData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSurveyQuestionAppls` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// flat-ent: Survey Question Category
message SurveyQuestionCategoryFlatData {
    option (routines.entity_type) = "SurveyQuestionCategory";
    option (routines.keys).keys = "survey_question_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyQuestionCategoryId
    string survey_question_category_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string parent_category_id = 2 [(routines.opts).field_type = "id"];
    string description = 3 [(routines.opts).field_type = "description"];
    google.protobuf.Timestamp last_updated_tx_stamp = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
    string tenant_id = 6 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 11;
    map<string, google.protobuf.Any> attachments = 12 ;
}

message SurveyQuestionCategoryKey{
    string survey_question_category_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message SurveyQuestionCategoryList{
    repeated SurveyQuestionCategoryFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSurveyQuestionCategories` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// Survey Question Option
message SurveyQuestionOptionData {
    option (routines.entity_type) = "SurveyQuestionOption";
    option (routines.keys).keys = "survey_question_id, survey_option_seq_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: surveyQuestionId, surveyOptionSeqId
    // fields
    string survey_question_id = 1 [(routines.opts).field_type = "id"];
    string survey_option_seq_id = 2 [(routines.opts).field_type = "id"];
    string description = 3 [(routines.opts).field_type = "description"];
    int64 sequence_num = 4 [(routines.opts).field_type = "numeric"];
    routines.Currency amount_base = 5 [(routines.opts).field_type = "currency-amount"];
    string amount_base_uom_id = 6 [(routines.opts).field_type = "id"];
    double weight_factor = 7 [(routines.opts).field_type = "floating-point"];
    int64 duration = 8 [(routines.opts).field_type = "numeric"];
    string duration_uom_id = 9 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 11 [(routines.opts).field_type = "date-time"];
    string id = 12 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 16;
    map<string, google.protobuf.Any> attachments = 17;
}


message SurveyQuestionOptionKey{
    string survey_question_id = 1 [(routines.opts).field_type = "id"];
    string survey_option_seq_id = 2 [(routines.opts).field_type = "id"];
}

message SurveyQuestionOptionList{
    repeated SurveyQuestionOptionData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListSurveyQuestionOptions` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


