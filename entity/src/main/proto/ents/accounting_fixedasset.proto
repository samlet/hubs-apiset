syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "AccountingFixedassetProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// flat-ent: Fixed Asset
message FixedAssetFlatData {
    option (routines.entity_type) = "FixedAsset";
    option (routines.keys).keys = "fixed_asset_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fixedAssetId
    string fixed_asset_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string fixed_asset_type_id = 2 [(routines.opts).field_type = "id"];
    string parent_fixed_asset_id = 3 [(routines.opts).field_type = "id"];
    string instance_of_product_id = 4 [(routines.opts).field_type = "id"];
    string class_enum_id = 5 [(routines.opts).field_type = "id"];
    string party_id = 6 [(routines.opts).field_type = "id"];
    string role_type_id = 7 [(routines.opts).field_type = "id"];
    string fixed_asset_name = 8 [(routines.opts).field_type = "name"];
    string acquire_order_id = 9 [(routines.opts).field_type = "id"];
    string acquire_order_item_seq_id = 10 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp date_acquired = 11 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp date_last_serviced = 12 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp date_next_service = 13 [(routines.opts).field_type = "date-time"];
    google.type.Date expected_end_of_life = 14 [(routines.opts).field_type = "date"];
    google.type.Date actual_end_of_life = 15 [(routines.opts).field_type = "date"];
    routines.FixedPoint production_capacity = 16 [(routines.opts).field_type = "fixed-point"];
    string uom_id = 17 [(routines.opts).field_type = "id"];
    string calendar_id = 18 [(routines.opts).field_type = "id"];
    string serial_number = 19 [(routines.opts).field_type = "long-varchar"];
    string located_at_facility_id = 20 [(routines.opts).field_type = "id"];
    string located_at_location_seq_id = 21 [(routines.opts).field_type = "id"];
    routines.Currency salvage_value = 22 [(routines.opts).field_type = "currency-amount"];
    routines.Currency depreciation = 23 [(routines.opts).field_type = "currency-amount"];
    routines.Currency purchase_cost = 24 [(routines.opts).field_type = "currency-amount"];
    string purchase_cost_uom_id = 25 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 26 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 27 [(routines.opts).field_type = "date-time"];
    string tenant_id = 28 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 65;
    map<string, google.protobuf.Any> attachments = 66 ;
}

message FixedAssetKey{
    string fixed_asset_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message FixedAssetList{
    repeated FixedAssetFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListFixedAssets` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// Fixed Asset Depreciation Method
message FixedAssetDepMethodData {
    option (routines.entity_type) = "FixedAssetDepMethod";
    option (routines.keys).keys = "depreciation_custom_method_id, fixed_asset_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: depreciationCustomMethodId, fixedAssetId
    // fields
    string depreciation_custom_method_id = 1 [(routines.opts).field_type = "id"];
    string fixed_asset_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    string id = 7 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 10;
    map<string, google.protobuf.Any> attachments = 11;
}


message FixedAssetDepMethodKey{
    string depreciation_custom_method_id = 1 [(routines.opts).field_type = "id"];
    string fixed_asset_id = 2 [(routines.opts).field_type = "id"];
}

message FixedAssetDepMethodList{
    repeated FixedAssetDepMethodData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListFixedAssetDepMethods` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Fixed Asset Geo Location with history
message FixedAssetGeoPointData {
    option (routines.entity_type) = "FixedAssetGeoPoint";
    option (routines.keys).keys = "fixed_asset_id, geo_point_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fixedAssetId, geoPointId, fromDate
    // fields
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    string geo_point_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp last_updated_tx_stamp = 5 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    string id = 7 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 10;
    map<string, google.protobuf.Any> attachments = 11;
}


message FixedAssetGeoPointKey{
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    string geo_point_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
}

message FixedAssetGeoPointList{
    repeated FixedAssetGeoPointData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListFixedAssetGeoPoints` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Fixed Asset Meter
message FixedAssetMeterData {
    option (routines.entity_type) = "FixedAssetMeter";
    option (routines.keys).keys = "fixed_asset_id, product_meter_type_id, reading_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fixedAssetId, productMeterTypeId, readingDate
    // fields
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    string product_meter_type_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp reading_date = 3 [(routines.opts).field_type = "date-time"];
    routines.FixedPoint meter_value = 4 [(routines.opts).field_type = "fixed-point"];
    string reading_reason_enum_id = 5 [(routines.opts).field_type = "id"];
    string maint_hist_seq_id = 6 [(routines.opts).field_type = "id"];
    string work_effort_id = 7 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 8 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 9 [(routines.opts).field_type = "date-time"];
    string id = 10 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}


message FixedAssetMeterKey{
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    string product_meter_type_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp reading_date = 3 [(routines.opts).field_type = "date-time"];
}

message FixedAssetMeterList{
    repeated FixedAssetMeterData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListFixedAssetMeters` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Fixed Asset Product Representation
message FixedAssetProductData {
    option (routines.entity_type) = "FixedAssetProduct";
    option (routines.keys).keys = "fixed_asset_id, product_id, fixed_asset_product_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fixedAssetId, productId, fixedAssetProductTypeId, fromDate
    // fields
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    string product_id = 2 [(routines.opts).field_type = "id"];
    string fixed_asset_product_type_id = 3 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 4 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 5 [(routines.opts).field_type = "date-time"];
    string comments = 6 [(routines.opts).field_type = "comment"];
    int64 sequence_num = 7 [(routines.opts).field_type = "numeric"];
    routines.FixedPoint quantity = 8 [(routines.opts).field_type = "fixed-point"];
    string quantity_uom_id = 9 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp last_updated_tx_stamp = 10 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 11 [(routines.opts).field_type = "date-time"];
    string id = 12 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 17;
    map<string, google.protobuf.Any> attachments = 18;
}


message FixedAssetProductKey{
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    string product_id = 2 [(routines.opts).field_type = "id"];
    string fixed_asset_product_type_id = 3 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 4 [(routines.opts).field_type = "date-time"];
}

message FixedAssetProductList{
    repeated FixedAssetProductData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListFixedAssetProducts` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Fixed Asset Registration
message FixedAssetRegistrationData {
    option (routines.entity_type) = "FixedAssetRegistration";
    option (routines.keys).keys = "fixed_asset_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fixedAssetId, fromDate
    // fields
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 2 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp registration_date = 4 [(routines.opts).field_type = "date-time"];
    string gov_agency_party_id = 5 [(routines.opts).field_type = "id"];
    string registration_number = 6 [(routines.opts).field_type = "long-varchar"];
    string license_number = 7 [(routines.opts).field_type = "long-varchar"];
    google.protobuf.Timestamp last_updated_tx_stamp = 8 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 9 [(routines.opts).field_type = "date-time"];
    string id = 10 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}


message FixedAssetRegistrationKey{
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 2 [(routines.opts).field_type = "date-time"];
}

message FixedAssetRegistrationList{
    repeated FixedAssetRegistrationData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListFixedAssetRegistrations` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Fixed Asset Standard Cost
message FixedAssetStdCostData {
    option (routines.entity_type) = "FixedAssetStdCost";
    option (routines.keys).keys = "fixed_asset_id, fixed_asset_std_cost_type_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: fixedAssetId, fixedAssetStdCostTypeId, fromDate
    // fields
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    string fixed_asset_std_cost_type_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 4 [(routines.opts).field_type = "date-time"];
    string amount_uom_id = 5 [(routines.opts).field_type = "id"];
    routines.Currency amount = 6 [(routines.opts).field_type = "currency-amount"];
    google.protobuf.Timestamp last_updated_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 8 [(routines.opts).field_type = "date-time"];
    string id = 9 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}


message FixedAssetStdCostKey{
    string fixed_asset_id = 1 [(routines.opts).field_type = "id"];
    string fixed_asset_std_cost_type_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
}

message FixedAssetStdCostList{
    repeated FixedAssetStdCostData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListFixedAssetStdCosts` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


