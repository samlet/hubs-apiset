syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "ProductConfigProto";

package domain;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

import "date.proto";
import "timeofday.proto";
import "routines.proto";
import "condition.proto";
import "relay.proto";

// Product Configuration Templates
message ProductConfigData {
    option (routines.entity_type) = "ProductConfig";
    option (routines.keys).keys = "product_id, config_item_id, sequence_num, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: productId, configItemId, sequenceNum, fromDate
    // fields
    string product_id = 1 [(routines.opts).field_type = "id"];
    string config_item_id = 2 [(routines.opts).field_type = "id"];
    int64 sequence_num = 3 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp from_date = 4 [(routines.opts).field_type = "date-time"];
    string description = 5 [(routines.opts).field_type = "description"];
    string long_description = 6 [(routines.opts).field_type = "very-long"];
    string config_type_id = 7 [(routines.opts).field_type = "id"];
    string default_config_option_id = 8 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp thru_date = 9 [(routines.opts).field_type = "date-time"];
    routines.Indicator is_mandatory = 10 [(routines.opts).field_type = "indicator"];
    google.protobuf.Timestamp last_updated_tx_stamp = 11 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 12 [(routines.opts).field_type = "date-time"];
    string id = 13 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 16;
    map<string, google.protobuf.Any> attachments = 17;
}


message ProductConfigKey{
    string product_id = 1 [(routines.opts).field_type = "id"];
    string config_item_id = 2 [(routines.opts).field_type = "id"];
    int64 sequence_num = 3 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp from_date = 4 [(routines.opts).field_type = "date-time"];
}

message ProductConfigList{
    repeated ProductConfigData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListProductConfigs` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// flat-ent: Product Configuration Question
message ProductConfigItemFlatData {
    option (routines.entity_type) = "ProductConfigItem";
    option (routines.keys).keys = "config_item_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: configItemId
    string config_item_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
    string config_item_type_id = 2 [(routines.opts).field_type = "id"];
    string config_item_name = 3 [(routines.opts).field_type = "name"];
    string description = 4 [(routines.opts).field_type = "description"];
    string long_description = 5 [(routines.opts).field_type = "very-long"];
    string image_url = 6 [(routines.opts).field_type = "url"];
    google.protobuf.Timestamp last_updated_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 8 [(routines.opts).field_type = "date-time"];
    string tenant_id = 9 [(routines.opts).field_type = "id"];
     

    // extra
    google.protobuf.Struct extra = 18;
    map<string, google.protobuf.Any> attachments = 19 ;
}

message ProductConfigItemKey{
    string config_item_id = 1 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
}

message ProductConfigItemList{
    repeated ProductConfigItemFlatData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListProductConfigItems` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}

// Product Configuration Options
message ProductConfigOptionData {
    option (routines.entity_type) = "ProductConfigOption";
    option (routines.keys).keys = "config_item_id, config_option_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: configItemId, configOptionId
    // fields
    string config_item_id = 1 [(routines.opts).field_type = "id"];
    string config_option_id = 2 [(routines.opts).field_type = "id"];
    google.protobuf.Timestamp from_date = 3 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp thru_date = 4 [(routines.opts).field_type = "date-time"];
    string config_option_name = 5 [(routines.opts).field_type = "name"];
    string description = 6 [(routines.opts).field_type = "description"];
    int64 sequence_num = 7 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp last_updated_tx_stamp = 8 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 9 [(routines.opts).field_type = "date-time"];
    string id = 10 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 16;
    map<string, google.protobuf.Any> attachments = 17;
}


message ProductConfigOptionKey{
    string config_item_id = 1 [(routines.opts).field_type = "id"];
    string config_option_id = 2 [(routines.opts).field_type = "id"];
}

message ProductConfigOptionList{
    repeated ProductConfigOptionData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListProductConfigOptions` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


// Product Configuration Option to Products
message ProductConfigProductData {
    option (routines.entity_type) = "ProductConfigProduct";
    option (routines.keys).keys = "config_item_id, config_option_id, product_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = true;
    // keys: configItemId, configOptionId, productId
    // fields
    string config_item_id = 1 [(routines.opts).field_type = "id"];
    string config_option_id = 2 [(routines.opts).field_type = "id"];
    string product_id = 3 [(routines.opts).field_type = "id"];
    routines.FixedPoint quantity = 4 [(routines.opts).field_type = "fixed-point"];
    int64 sequence_num = 5 [(routines.opts).field_type = "numeric"];
    google.protobuf.Timestamp last_updated_tx_stamp = 6 [(routines.opts).field_type = "date-time"];
    google.protobuf.Timestamp created_tx_stamp = 7 [(routines.opts).field_type = "date-time"];
    string id = 8 [(routines.opts).field_type = "id", (google.api.graphql.relay_options).id = true];
            
             

    // extra
    google.protobuf.Struct extra = 13;
    map<string, google.protobuf.Any> attachments = 14;
}


message ProductConfigProductKey{
    string config_item_id = 1 [(routines.opts).field_type = "id"];
    string config_option_id = 2 [(routines.opts).field_type = "id"];
    string product_id = 3 [(routines.opts).field_type = "id"];
}

message ProductConfigProductList{
    repeated ProductConfigProductData values=1;
    // A token to retrieve next page of results.
    // Pass this value in the
    // [ListRequest.page_token][google.example.library.v1.ListRequest.page_token]
    // field in the subsequent call to `ListProductConfigProducts` method to retrieve the next
    // page of results.
    string next_page_token = 2;
    string region_id=3;
}


