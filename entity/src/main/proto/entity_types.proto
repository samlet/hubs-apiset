syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.bluecc.hubs.stub";
option java_outer_classname = "EntityTypeProto";
option objc_class_prefix = "ETP";

package domain;

import "google/protobuf/timestamp.proto";
import "date.proto";
import "timeofday.proto";
import "routines.proto";


// flat-ent: Content Association Type
message ContentAssocTypeData {
    option (routines.entity_type) = "ContentAssocType";
    option (routines.keys).keys = "content_assoc_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contentAssocTypeId
        
    string content_assoc_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Custom Method
message CustomMethodData {
    option (routines.entity_type) = "CustomMethod";
    option (routines.keys).keys = "custom_method_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: customMethodId
        
    string custom_method_id = 1;
    string custom_method_type_id = 2; // CustomMethodType    
    string custom_method_name = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Credit Card Type GL Account
message CreditCardTypeGlAccountData {
    option (routines.entity_type) = "CreditCardTypeGlAccount";
    option (routines.keys).keys = "card_type, organization_party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: cardType, organizationPartyId
    string id = 150;     
    string card_type = 1;    
    string organization_party_id = 2;    
    string gl_account_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Cost Component Calculation
message CostComponentCalcData {
    option (routines.entity_type) = "CostComponentCalc";
    option (routines.keys).keys = "cost_component_calc_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: costComponentCalcId
        
    string cost_component_calc_id = 1;    
    string description = 2;
    string cost_gl_account_type_id = 3; // GlAccountType
    string offsetting_gl_account_type_id = 4; // GlAccountType    
    routines.Currency fixed_cost = 5;    
    routines.Currency variable_cost = 6;    
    int64 per_milli_second = 7;
    string currency_uom_id = 8; // Uom
    string cost_custom_method_id = 9; // CustomMethod    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;  
}

// flat-ent: Payment Group Type
message PaymentGroupTypeData {
    option (routines.entity_type) = "PaymentGroupType";
    option (routines.keys).keys = "payment_group_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: paymentGroupTypeId
        
    string payment_group_type_id = 1;
    string parent_type_id = 2; // PaymentGroupType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: File Extension
message FileExtensionData {
    option (routines.entity_type) = "FileExtension";
    option (routines.keys).keys = "file_extension_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: fileExtensionId
        
    string file_extension_id = 1;
    string mime_type_id = 2; // MimeType    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: WorkEffort Content Type
message WorkEffortContentTypeData {
    option (routines.entity_type) = "WorkEffortContentType";
    option (routines.keys).keys = "work_effort_content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: workEffortContentTypeId
        
    string work_effort_content_type_id = 1;
    string parent_type_id = 2; // WorkEffortContentType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Geographic Boundary Association
message GeoAssocData {
    option (routines.entity_type) = "GeoAssoc";
    option (routines.keys).keys = "geo_id, geo_id_to";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: geoId, geoIdTo
    string id = 150; 
    string geo_id = 1; // Geo
    string geo_id_to = 2; // Geo
    string geo_assoc_type_id = 3; // GeoAssocType    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Product Price Purpose
message ProductPricePurposeData {
    option (routines.entity_type) = "ProductPricePurpose";
    option (routines.keys).keys = "product_price_purpose_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productPricePurposeId
        
    string product_price_purpose_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Contact Mechanism Type
message ContactMechTypeData {
    option (routines.entity_type) = "ContactMechType";
    option (routines.keys).keys = "contact_mech_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contactMechTypeId
        
    string contact_mech_type_id = 1;
    string parent_type_id = 2; // ContactMechType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Survey Question Type
message SurveyQuestionTypeData {
    option (routines.entity_type) = "SurveyQuestionType";
    option (routines.keys).keys = "survey_question_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: surveyQuestionTypeId
        
    string survey_question_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Content Operation
message ContentOperationData {
    option (routines.entity_type) = "ContentOperation";
    option (routines.keys).keys = "content_operation_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contentOperationId
    
    string content_operation_id = 1; // ContentPurposeOperation    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Order Denylist Type
message OrderDenylistTypeData {
    option (routines.entity_type) = "OrderDenylistType";
    option (routines.keys).keys = "order_denylist_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: orderDenylistTypeId
        
    string order_denylist_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Return Adjustment Type
message ReturnAdjustmentTypeData {
    option (routines.entity_type) = "ReturnAdjustmentType";
    option (routines.keys).keys = "return_adjustment_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: returnAdjustmentTypeId
        
    string return_adjustment_type_id = 1;
    string parent_type_id = 2; // ReturnAdjustmentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Product Type
message ProductTypeData {
    option (routines.entity_type) = "ProductType";
    option (routines.keys).keys = "product_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productTypeId
        
    string product_type_id = 1;
    string parent_type_id = 2; // ProductType    
    routines.Indicator is_physical = 3;    
    routines.Indicator is_digital = 4;    
    routines.Indicator has_table = 5;    
    string description = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;  
}

// flat-ent: Return Type
message ReturnTypeData {
    option (routines.entity_type) = "ReturnType";
    option (routines.keys).keys = "return_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: returnTypeId
        
    string return_type_id = 1;    
    string parent_type_id = 2;    
    routines.Indicator has_table = 3;    
    string description = 4;    
    string sequence_id = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Tax Authority Assoc Type
message TaxAuthorityAssocTypeData {
    option (routines.entity_type) = "TaxAuthorityAssocType";
    option (routines.keys).keys = "tax_authority_assoc_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: taxAuthorityAssocTypeId
        
    string tax_authority_assoc_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Data Source
message DataSourceData {
    option (routines.entity_type) = "DataSource";
    option (routines.keys).keys = "data_source_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: dataSourceId
        
    string data_source_id = 1;
    string data_source_type_id = 2; // DataSourceType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: ProductStore Group
message ProductStoreGroupData {
    option (routines.entity_type) = "ProductStoreGroup";
    option (routines.keys).keys = "product_store_group_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productStoreGroupId
        
    string product_store_group_id = 1;    
    string product_store_group_type_id = 2;
    string primary_parent_group_id = 3; // ProductStoreGroup    
    string product_store_group_name = 4;    
    string description = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Shopping List Type
message ShoppingListTypeData {
    option (routines.entity_type) = "ShoppingListType";
    option (routines.keys).keys = "shopping_list_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: shoppingListTypeId
        
    string shopping_list_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: EmplPosition Type
message EmplPositionTypeData {
    option (routines.entity_type) = "EmplPositionType";
    option (routines.keys).keys = "empl_position_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: emplPositionTypeId
        
    string empl_position_type_id = 1;
    string parent_type_id = 2; // EmplPositionType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Responsibility Type
message ResponsibilityTypeData {
    option (routines.entity_type) = "ResponsibilityType";
    option (routines.keys).keys = "responsibility_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: responsibilityTypeId
        
    string responsibility_type_id = 1;
    string parent_type_id = 2; // ResponsibilityType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: General Ledger Account Category
message GlAccountCategoryData {
    option (routines.entity_type) = "GlAccountCategory";
    option (routines.keys).keys = "gl_account_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glAccountCategoryId
    
    string gl_account_category_id = 1; // GlAccountCategoryMember
    string gl_account_category_type_id = 2; // GlAccountCategoryType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Entity Grouping
message EntityGroupData {
    option (routines.entity_type) = "EntityGroup";
    option (routines.keys).keys = "entity_group_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: entityGroupId
        
    string entity_group_id = 1;    
    string entity_group_name = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Deduction Type
message DeductionTypeData {
    option (routines.entity_type) = "DeductionType";
    option (routines.keys).keys = "deduction_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: deductionTypeId
        
    string deduction_type_id = 1;
    string parent_type_id = 2; // DeductionType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: MRP Event Type
message MrpEventTypeData {
    option (routines.entity_type) = "MrpEventType";
    option (routines.keys).keys = "mrp_event_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: mrpEventTypeId
        
    string mrp_event_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Content Purpose Type
message ContentPurposeTypeData {
    option (routines.entity_type) = "ContentPurposeType";
    option (routines.keys).keys = "content_purpose_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contentPurposeTypeId
        
    string content_purpose_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Fixed Asset Standard Cost Type
message FixedAssetStdCostTypeData {
    option (routines.entity_type) = "FixedAssetStdCostType";
    option (routines.keys).keys = "fixed_asset_std_cost_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: fixedAssetStdCostTypeId
        
    string fixed_asset_std_cost_type_id = 1;
    string parent_type_id = 2; // FixedAssetStdCostType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Product Price Type
message ProductPriceTypeData {
    option (routines.entity_type) = "ProductPriceType";
    option (routines.keys).keys = "product_price_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productPriceTypeId
        
    string product_price_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Contact Mechanism Purpose Type
message ContactMechPurposeTypeData {
    option (routines.entity_type) = "ContactMechPurposeType";
    option (routines.keys).keys = "contact_mech_purpose_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contactMechPurposeTypeId
        
    string contact_mech_purpose_type_id = 1;    
    string parent_type_id = 2;    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Enumeration
message EnumerationData {
    option (routines.entity_type) = "Enumeration";
    option (routines.keys).keys = "enum_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: enumId
        
    string enum_id = 1;
    string enum_type_id = 2; // EnumerationType    
    string enum_code = 3;    
    string sequence_id = 4;    
    string description = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Order Item Type
message OrderItemTypeData {
    option (routines.entity_type) = "OrderItemType";
    option (routines.keys).keys = "order_item_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: orderItemTypeId
        
    string order_item_type_id = 1;
    string parent_type_id = 2; // OrderItemType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Return Header Type
message ReturnHeaderTypeData {
    option (routines.entity_type) = "ReturnHeaderType";
    option (routines.keys).keys = "return_header_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: returnHeaderTypeId
        
    string return_header_type_id = 1;
    string parent_type_id = 2; // ReturnHeaderType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Work Effort Association Type
message WorkEffortAssocTypeData {
    option (routines.entity_type) = "WorkEffortAssocType";
    option (routines.keys).keys = "work_effort_assoc_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: workEffortAssocTypeId
        
    string work_effort_assoc_type_id = 1;
    string parent_type_id = 2; // WorkEffortAssocType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Geographic Boundary Type
message GeoTypeData {
    option (routines.entity_type) = "GeoType";
    option (routines.keys).keys = "geo_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: geoTypeId
    
    string geo_type_id = 1; // GeoType
    string parent_type_id = 2; // GeoType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Leave Reason Type
message EmplLeaveReasonTypeData {
    option (routines.entity_type) = "EmplLeaveReasonType";
    option (routines.keys).keys = "empl_leave_reason_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: emplLeaveReasonTypeId
        
    string empl_leave_reason_type_id = 1;
    string parent_type_id = 2; // EmplLeaveReasonType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Product average cost type
message ProductAverageCostTypeData {
    option (routines.entity_type) = "ProductAverageCostType";
    option (routines.keys).keys = "product_average_cost_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productAverageCostTypeId
        
    string product_average_cost_type_id = 1;
    string parent_type_id = 2; // ProductAverageCostType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Product Maintenance Type
message ProductMaintTypeData {
    option (routines.entity_type) = "ProductMaintType";
    option (routines.keys).keys = "product_maint_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productMaintTypeId
        
    string product_maint_type_id = 1;    
    string description = 2;
    string parent_type_id = 3; // ProductMaintType    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Term Type
message TermTypeData {
    option (routines.entity_type) = "TermType";
    option (routines.keys).keys = "term_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: termTypeId
        
    string term_type_id = 1;
    string parent_type_id = 2; // TermType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Web Site Content Type
message WebSiteContentTypeData {
    option (routines.entity_type) = "WebSiteContentType";
    option (routines.keys).keys = "web_site_content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: webSiteContentTypeId
        
    string web_site_content_type_id = 1;    
    string description = 2;
    string parent_type_id = 3; // WebSiteContentType    
    routines.Indicator has_table = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: General Ledger Account Type
message GlAccountTypeData {
    option (routines.entity_type) = "GlAccountType";
    option (routines.keys).keys = "gl_account_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glAccountTypeId
        
    string gl_account_type_id = 1;
    string parent_type_id = 2; // GlAccountType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Defines a group of User Preferences
message UserPrefGroupTypeData {
    option (routines.entity_type) = "UserPrefGroupType";
    option (routines.keys).keys = "user_pref_group_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: userPrefGroupTypeId
    
    string user_pref_group_type_id = 1; // UserPreference    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Define associations between facilities
message FacilityAssocTypeData {
    option (routines.entity_type) = "FacilityAssocType";
    option (routines.keys).keys = "facility_assoc_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: facilityAssocTypeId
        
    string facility_assoc_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: General Ledger Account Category Type
message GlAccountCategoryTypeData {
    option (routines.entity_type) = "GlAccountCategoryType";
    option (routines.keys).keys = "gl_account_category_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glAccountCategoryTypeId
    
    string gl_account_category_type_id = 1; // GlAccountCategory    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Defines GL Accounts for Inventory Variance Reasons
message VarianceReasonGlAccountData {
    option (routines.entity_type) = "VarianceReasonGlAccount";
    option (routines.keys).keys = "variance_reason_id, organization_party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: varianceReasonId, organizationPartyId
    string id = 150; 
    string variance_reason_id = 1; // VarianceReason    
    string organization_party_id = 2;    
    string gl_account_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Content Association Predicate
message ContentAssocPredicateData {
    option (routines.entity_type) = "ContentAssocPredicate";
    option (routines.keys).keys = "content_assoc_predicate_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contentAssocPredicateId
        
    string content_assoc_predicate_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Work Effort Purpose Type
message WorkEffortPurposeTypeData {
    option (routines.entity_type) = "WorkEffortPurposeType";
    option (routines.keys).keys = "work_effort_purpose_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: workEffortPurposeTypeId
        
    string work_effort_purpose_type_id = 1;
    string parent_type_id = 2; // WorkEffortPurposeType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: PaymentMethodType
message PaymentMethodTypeData {
    option (routines.entity_type) = "PaymentMethodType";
    option (routines.keys).keys = "payment_method_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: paymentMethodTypeId
        
    string payment_method_type_id = 1;    
    string description = 2;    
    string default_gl_account_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: General Ledger Resource
message GlResourceTypeData {
    option (routines.entity_type) = "GlResourceType";
    option (routines.keys).keys = "gl_resource_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glResourceTypeId
        
    string gl_resource_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Facility Group
message FacilityGroupData {
    option (routines.entity_type) = "FacilityGroup";
    option (routines.keys).keys = "facility_group_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: facilityGroupId
        
    string facility_group_id = 1;
    string facility_group_type_id = 2; // FacilityGroupType
    string primary_parent_group_id = 3; // FacilityGroup    
    string facility_group_name = 4;    
    string description = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Financial Account Transaction Type
message FinAccountTransTypeData {
    option (routines.entity_type) = "FinAccountTransType";
    option (routines.keys).keys = "fin_account_trans_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: finAccountTransTypeId
        
    string fin_account_trans_type_id = 1;
    string parent_type_id = 2; // FinAccountTransType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Product Feature Type
message ProductFeatureTypeData {
    option (routines.entity_type) = "ProductFeatureType";
    option (routines.keys).keys = "product_feature_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productFeatureTypeId
        
    string product_feature_type_id = 1;
    string parent_type_id = 2; // ProductFeatureType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Entity Grouping
message EntityGroupEntryData {
    option (routines.entity_type) = "EntityGroupEntry";
    option (routines.keys).keys = "entity_group_id, entity_or_package";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: entityGroupId, entityOrPackage
    string id = 150; 
    string entity_group_id = 1; // EntityGroup    
    string entity_or_package = 2;    
    string appl_enum_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Product Content Type
message ProdConfItemContentTypeData {
    option (routines.entity_type) = "ProdConfItemContentType";
    option (routines.keys).keys = "conf_item_content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: confItemContentTypeId
        
    string conf_item_content_type_id = 1;
    string parent_type_id = 2; // ProdConfItemContentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Preference Type
message SupplierPrefOrderData {
    option (routines.entity_type) = "SupplierPrefOrder";
    option (routines.keys).keys = "supplier_pref_order_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: supplierPrefOrderId
        
    string supplier_pref_order_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Rejection Reason
message RejectionReasonData {
    option (routines.entity_type) = "RejectionReason";
    option (routines.keys).keys = "rejection_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: rejectionId
        
    string rejection_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Allocation Plan Type Entity
message AllocationPlanTypeData {
    option (routines.entity_type) = "AllocationPlanType";
    option (routines.keys).keys = "plan_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: planTypeId
        
    string plan_type_id = 1;    
    string description = 2;    
    routines.Indicator has_table = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Product Category Type
message ProductCategoryTypeData {
    option (routines.entity_type) = "ProductCategoryType";
    option (routines.keys).keys = "product_category_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productCategoryTypeId
        
    string product_category_type_id = 1;
    string parent_type_id = 2; // ProductCategoryType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Country Capital
message CountryCapitalData {
    option (routines.entity_type) = "CountryCapital";
    option (routines.keys).keys = "country_code";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: countryCode
    
    string country_code = 1; // CountryCode    
    string country_capital = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Communication Event Type
message CommunicationEventTypeData {
    option (routines.entity_type) = "CommunicationEventType";
    option (routines.keys).keys = "communication_event_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: communicationEventTypeId
        
    string communication_event_type_id = 1;
    string parent_type_id = 2; // CommunicationEventType    
    routines.Indicator has_table = 3;    
    string description = 4;
    string contact_mech_type_id = 5; // ContactMechType    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: General Ledger Account Group
message GlAccountGroupData {
    option (routines.entity_type) = "GlAccountGroup";
    option (routines.keys).keys = "gl_account_group_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glAccountGroupId
        
    string gl_account_group_id = 1;
    string gl_account_group_type_id = 2; // GlAccountGroupType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Order Adjustment Type
message OrderAdjustmentTypeData {
    option (routines.entity_type) = "OrderAdjustmentType";
    option (routines.keys).keys = "order_adjustment_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: orderAdjustmentTypeId
        
    string order_adjustment_type_id = 1;
    string parent_type_id = 2; // OrderAdjustmentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Quote Type
message QuoteTypeData {
    option (routines.entity_type) = "QuoteType";
    option (routines.keys).keys = "quote_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: quoteTypeId
        
    string quote_type_id = 1;
    string parent_type_id = 2; // QuoteType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Data Object Type
message DataResourceTypeData {
    option (routines.entity_type) = "DataResourceType";
    option (routines.keys).keys = "data_resource_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: dataResourceTypeId
        
    string data_resource_type_id = 1;
    string parent_type_id = 2; // DataResourceType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Fixed Asset Product Type
message FixedAssetProductTypeData {
    option (routines.entity_type) = "FixedAssetProductType";
    option (routines.keys).keys = "fixed_asset_product_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: fixedAssetProductTypeId
        
    string fixed_asset_product_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Agreement Item Type
message AgreementItemTypeData {
    option (routines.entity_type) = "AgreementItemType";
    option (routines.keys).keys = "agreement_item_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: agreementItemTypeId
        
    string agreement_item_type_id = 1;
    string parent_type_id = 2; // AgreementItemType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Accounting Transaction Type
message AcctgTransTypeData {
    option (routines.entity_type) = "AcctgTransType";
    option (routines.keys).keys = "acctg_trans_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: acctgTransTypeId
        
    string acctg_trans_type_id = 1;
    string parent_type_id = 2; // AcctgTransType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Invoice Item Assoc Type
message InvoiceItemAssocTypeData {
    option (routines.entity_type) = "InvoiceItemAssocType";
    option (routines.keys).keys = "invoice_item_assoc_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: invoiceItemAssocTypeId
        
    string invoice_item_assoc_type_id = 1;
    string parent_type_id = 2; // InvoiceItemAssocType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Data Meta-Data Predicate
message MetaDataPredicateData {
    option (routines.entity_type) = "MetaDataPredicate";
    option (routines.keys).keys = "meta_data_predicate_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: metaDataPredicateId
        
    string meta_data_predicate_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Performance Rating Type
message PerfRatingTypeData {
    option (routines.entity_type) = "PerfRatingType";
    option (routines.keys).keys = "perf_rating_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: perfRatingTypeId
        
    string perf_rating_type_id = 1;
    string parent_type_id = 2; // PerfRatingType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Unit Of Measure Type
message UomTypeData {
    option (routines.entity_type) = "UomType";
    option (routines.keys).keys = "uom_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: uomTypeId
        
    string uom_type_id = 1;
    string parent_type_id = 2; // UomType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Status Valid Change
message StatusValidChangeData {
    option (routines.entity_type) = "StatusValidChange";
    option (routines.keys).keys = "status_id, status_id_to";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: statusId, statusIdTo
    string id = 150;     
    string status_id = 1;
    string status_id_to = 2; // StatusItem    
    string condition_expression = 3;    
    string transition_name = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Quantity Break Type
message QuantityBreakTypeData {
    option (routines.entity_type) = "QuantityBreakType";
    option (routines.keys).keys = "quantity_break_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: quantityBreakTypeId
        
    string quantity_break_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Employment Application Source Type
message EmploymentAppSourceTypeData {
    option (routines.entity_type) = "EmploymentAppSourceType";
    option (routines.keys).keys = "employment_app_source_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: employmentAppSourceTypeId
        
    string employment_app_source_type_id = 1;
    string parent_type_id = 2; // EmploymentAppSourceType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Work Effort Good Standard Type
message WorkEffortGoodStandardTypeData {
    option (routines.entity_type) = "WorkEffortGoodStandardType";
    option (routines.keys).keys = "work_effort_good_std_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: workEffortGoodStdTypeId
        
    string work_effort_good_std_type_id = 1;
    string parent_type_id = 2; // WorkEffortGoodStandardType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: DHL Shipment Gateway Configuration
message ShipmentGatewayDhlData {
    option (routines.entity_type) = "ShipmentGatewayDhl";
    option (routines.keys).keys = "shipment_gateway_config_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: shipmentGatewayConfigId
    
    string shipment_gateway_config_id = 1; // ShipmentGatewayConfig    
    string connect_url = 2;    
    int64 connect_timeout = 3;    
    string head_version = 4;    
    string head_action = 5;    
    string access_user_id = 6;    
    string access_password = 7;    
    string access_account_nbr = 8;    
    string access_shipping_key = 9;    
    string label_image_format = 10;    
    string rate_estimate_template = 11;    
    google.protobuf.Timestamp last_updated_tx_stamp = 12;    
    google.protobuf.Timestamp created_tx_stamp = 13;  
}

// flat-ent: Termination Type
message TerminationTypeData {
    option (routines.entity_type) = "TerminationType";
    option (routines.keys).keys = "termination_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: terminationTypeId
        
    string termination_type_id = 1;
    string parent_type_id = 2; // TerminationType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: General Ledger Journal
message GlJournalData {
    option (routines.entity_type) = "GlJournal";
    option (routines.keys).keys = "gl_journal_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glJournalId
        
    string gl_journal_id = 1;    
    string gl_journal_name = 2;    
    string organization_party_id = 3;    
    routines.Indicator is_posted = 4;    
    google.protobuf.Timestamp posted_date = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Party Relationship Type
message PartyRelationshipTypeData {
    option (routines.entity_type) = "PartyRelationshipType";
    option (routines.keys).keys = "party_relationship_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: partyRelationshipTypeId
        
    string party_relationship_type_id = 1;
    string parent_type_id = 2; // PartyRelationshipType    
    routines.Indicator has_table = 3;    
    string party_relationship_name = 4;    
    string description = 5;
    string role_type_id_valid_from = 6; // RoleType
    string role_type_id_valid_to = 7; // RoleType    
    google.protobuf.Timestamp last_updated_tx_stamp = 8;    
    google.protobuf.Timestamp created_tx_stamp = 9;  
}

// flat-ent: Enumeration Type
message EnumerationTypeData {
    option (routines.entity_type) = "EnumerationType";
    option (routines.keys).keys = "enum_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: enumTypeId
    
    string enum_type_id = 1; // EnumerationType
    string parent_type_id = 2; // EnumerationType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Document Type
message DocumentTypeData {
    option (routines.entity_type) = "DocumentType";
    option (routines.keys).keys = "document_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: documentTypeId
        
    string document_type_id = 1;
    string parent_type_id = 2; // DocumentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Variance Reason
message VarianceReasonData {
    option (routines.entity_type) = "VarianceReason";
    option (routines.keys).keys = "variance_reason_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: varianceReasonId
        
    string variance_reason_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Geographic Boundary Association
message GeoAssocTypeData {
    option (routines.entity_type) = "GeoAssocType";
    option (routines.keys).keys = "geo_assoc_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: geoAssocTypeId
    
    string geo_assoc_type_id = 1; // GeoAssoc    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Benefit Type
message BenefitTypeData {
    option (routines.entity_type) = "BenefitType";
    option (routines.keys).keys = "benefit_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: benefitTypeId
        
    string benefit_type_id = 1;    
    string benefit_name = 2;
    string parent_type_id = 3; // BenefitType    
    routines.Indicator has_table = 4;    
    string description = 5;    
    double employer_paid_percentage = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;  
}

// flat-ent: Unit Of Measure
message UomData {
    option (routines.entity_type) = "Uom";
    option (routines.keys).keys = "uom_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: uomId
        
    string uom_id = 1;
    string uom_type_id = 2; // UomType    
    string abbreviation = 3;    
    int64 numeric_code = 4;    
    string description = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Payment Method Type GL Account
message PaymentMethodTypeGlAccountData {
    option (routines.entity_type) = "PaymentMethodTypeGlAccount";
    option (routines.keys).keys = "payment_method_type_id, organization_party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: paymentMethodTypeId, organizationPartyId
    string id = 150; 
    string payment_method_type_id = 1; // PaymentMethodType    
    string organization_party_id = 2;    
    string gl_account_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Cost Component Type
message CostComponentTypeData {
    option (routines.entity_type) = "CostComponentType";
    option (routines.keys).keys = "cost_component_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: costComponentTypeId
        
    string cost_component_type_id = 1;
    string parent_type_id = 2; // CostComponentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Unit Of Measure Conversion Entity for those Units of Measure whose conversion values change over time (ie, currencies)
message UomConversionDatedData {
    option (routines.entity_type) = "UomConversionDated";
    option (routines.keys).keys = "uom_id, uom_id_to, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: uomId, uomIdTo, fromDate
    string id = 150; 
    string uom_id = 1; // Uom
    string uom_id_to = 2; // Uom    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    double conversion_factor = 5;
    string custom_method_id = 6; // CustomMethod    
    int64 decimal_scale = 7;    
    string rounding_mode = 8;
    string purpose_enum_id = 9; // Enumeration    
    google.protobuf.Timestamp last_updated_tx_stamp = 10;    
    google.protobuf.Timestamp created_tx_stamp = 11;  
}

// flat-ent: Entity for storing data about Interview Types
message JobInterviewTypeData {
    option (routines.entity_type) = "JobInterviewType";
    option (routines.keys).keys = "job_interview_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: jobInterviewTypeId
        
    string job_interview_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Period Type
message PeriodTypeData {
    option (routines.entity_type) = "PeriodType";
    option (routines.keys).keys = "period_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: periodTypeId
        
    string period_type_id = 1;    
    string description = 2;    
    int64 period_length = 3;
    string uom_id = 4; // Uom    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Data Category
message DataCategoryData {
    option (routines.entity_type) = "DataCategory";
    option (routines.keys).keys = "data_category_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: dataCategoryId
        
    string data_category_id = 1;
    string parent_category_id = 2; // DataCategory    
    string category_name = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Content Type
message ContentTypeData {
    option (routines.entity_type) = "ContentType";
    option (routines.keys).keys = "content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contentTypeId
        
    string content_type_id = 1;
    string parent_type_id = 2; // ContentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Role Type
message RoleTypeData {
    option (routines.entity_type) = "RoleType";
    option (routines.keys).keys = "role_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: roleTypeId
        
    string role_type_id = 1;
    string parent_type_id = 2; // RoleType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Shipment Gateway Config Type
message ShipmentGatewayConfigTypeData {
    option (routines.entity_type) = "ShipmentGatewayConfigType";
    option (routines.keys).keys = "shipment_gateway_conf_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: shipmentGatewayConfTypeId
    
    string shipment_gateway_conf_type_id = 1; // ShipmentGatewayConfigType
    string parent_type_id = 2; // ShipmentGatewayConfigType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Shipment Contact Mechanism Type
message ShipmentContactMechTypeData {
    option (routines.entity_type) = "ShipmentContactMechType";
    option (routines.keys).keys = "shipment_contact_mech_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: shipmentContactMechTypeId
        
    string shipment_contact_mech_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Customer Request Resolution
message CustRequestResolutionData {
    option (routines.entity_type) = "CustRequestResolution";
    option (routines.keys).keys = "cust_request_resolution_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: custRequestResolutionId
        
    string cust_request_resolution_id = 1;    
    string cust_request_type_id = 2;    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Budget Item Type
message BudgetItemTypeData {
    option (routines.entity_type) = "BudgetItemType";
    option (routines.keys).keys = "budget_item_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: budgetItemTypeId
        
    string budget_item_type_id = 1;
    string parent_type_id = 2; // BudgetItemType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Subscription Type
message SubscriptionTypeData {
    option (routines.entity_type) = "SubscriptionType";
    option (routines.keys).keys = "subscription_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: subscriptionTypeId
        
    string subscription_type_id = 1;
    string parent_type_id = 2; // SubscriptionType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Agreement Content Type
message AgreementContentTypeData {
    option (routines.entity_type) = "AgreementContentType";
    option (routines.keys).keys = "agreement_content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: agreementContentTypeId
        
    string agreement_content_type_id = 1;
    string parent_type_id = 2; // AgreementContentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: GL Account Organization
message GlAccountTypeDefaultData {
    option (routines.entity_type) = "GlAccountTypeDefault";
    option (routines.keys).keys = "gl_account_type_id, organization_party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glAccountTypeId, organizationPartyId
    string id = 150; 
    string gl_account_type_id = 1; // GlAccountType    
    string organization_party_id = 2;    
    string gl_account_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Segment Group Type
message SegmentGroupTypeData {
    option (routines.entity_type) = "SegmentGroupType";
    option (routines.keys).keys = "segment_group_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: segmentGroupTypeId
        
    string segment_group_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Data Source Type
message DataSourceTypeData {
    option (routines.entity_type) = "DataSourceType";
    option (routines.keys).keys = "data_source_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: dataSourceTypeId
    
    string data_source_type_id = 1; // DataSource    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Data Template Type
message DataTemplateTypeData {
    option (routines.entity_type) = "DataTemplateType";
    option (routines.keys).keys = "data_template_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: dataTemplateTypeId
        
    string data_template_type_id = 1;    
    string description = 2;    
    string extension = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Application preferences for a given userLogin.
message UserPreferenceData {
    option (routines.entity_type) = "UserPreference";
    option (routines.keys).keys = "user_login_id, user_pref_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: userLoginId, userPrefTypeId
    string id = 150;     
    string user_login_id = 1;    
    string user_pref_type_id = 2;
    string user_pref_group_type_id = 3; // UserPrefGroupType    
    string user_pref_value = 4;    
    string user_pref_data_type = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Fedex Shipment Gateway Configuration
message ShipmentGatewayFedexData {
    option (routines.entity_type) = "ShipmentGatewayFedex";
    option (routines.keys).keys = "shipment_gateway_config_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: shipmentGatewayConfigId
    
    string shipment_gateway_config_id = 1; // ShipmentGatewayConfig    
    string connect_url = 2;    
    string connect_soap_url = 3;    
    int64 connect_timeout = 4;    
    string access_account_nbr = 5;    
    string access_meter_number = 6;    
    string access_user_key = 7;    
    string access_user_pwd = 8;    
    string label_image_type = 9;    
    string default_dropoff_type = 10;    
    string default_packaging_type = 11;    
    string template_shipment = 12;    
    string template_subscription = 13;    
    string rate_estimate_template = 14;    
    google.protobuf.Timestamp last_updated_tx_stamp = 15;    
    google.protobuf.Timestamp created_tx_stamp = 16;  
}

// flat-ent: Geographic Boundary
message GeoData {
    option (routines.entity_type) = "Geo";
    option (routines.keys).keys = "geo_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: geoId
        
    string geo_id = 1;
    string geo_type_id = 2; // GeoType    
    string geo_name = 3;    
    string geo_code = 4;    
    string geo_sec_code = 5;    
    string abbreviation = 6;    
    string well_known_text = 7;    
    google.protobuf.Timestamp last_updated_tx_stamp = 8;    
    google.protobuf.Timestamp created_tx_stamp = 9;  
}

// flat-ent: Contact Mechanism Type Purpose
message ContactMechTypePurposeData {
    option (routines.entity_type) = "ContactMechTypePurpose";
    option (routines.keys).keys = "contact_mech_type_id, contact_mech_purpose_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contactMechTypeId, contactMechPurposeTypeId
    string id = 150; 
    string contact_mech_type_id = 1; // ContactMechType
    string contact_mech_purpose_type_id = 2; // ContactMechPurposeType    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Tracking Code Type
message TrackingCodeTypeData {
    option (routines.entity_type) = "TrackingCodeType";
    option (routines.keys).keys = "tracking_code_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: trackingCodeTypeId
        
    string tracking_code_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Return Reason
message ReturnReasonData {
    option (routines.entity_type) = "ReturnReason";
    option (routines.keys).keys = "return_reason_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: returnReasonId
        
    string return_reason_id = 1;    
    string description = 2;    
    string sequence_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Fixed Asset Type
message FixedAssetTypeData {
    option (routines.entity_type) = "FixedAssetType";
    option (routines.keys).keys = "fixed_asset_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: fixedAssetTypeId
        
    string fixed_asset_type_id = 1;
    string parent_type_id = 2; // FixedAssetType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Content Purpose
message ContentPurposeOperationData {
    option (routines.entity_type) = "ContentPurposeOperation";
    option (routines.keys).keys = "content_purpose_type_id, content_operation_id, role_type_id, status_id, privilege_enum_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contentPurposeTypeId, contentOperationId, roleTypeId, statusId, privilegeEnumId
    string id = 150; 
    string content_purpose_type_id = 1; // ContentPurposeType
    string content_operation_id = 2; // ContentOperation
    string role_type_id = 3; // RoleType
    string status_id = 4; // StatusItem
    string privilege_enum_id = 5; // Enumeration    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Catalog Category Association Type
message ProdCatalogCategoryTypeData {
    option (routines.entity_type) = "ProdCatalogCategoryType";
    option (routines.keys).keys = "prod_catalog_category_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: prodCatalogCategoryTypeId
        
    string prod_catalog_category_type_id = 1;
    string parent_type_id = 2; // ProdCatalogCategoryType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: USPS Shipment Gateway Configuration
message ShipmentGatewayUspsData {
    option (routines.entity_type) = "ShipmentGatewayUsps";
    option (routines.keys).keys = "shipment_gateway_config_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: shipmentGatewayConfigId
    
    string shipment_gateway_config_id = 1; // ShipmentGatewayConfig    
    string connect_url = 2;    
    string connect_url_labels = 3;    
    int64 connect_timeout = 4;    
    string access_user_id = 5;    
    string access_password = 6;    
    int64 max_estimate_weight = 7;    
    string test = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;  
}

// flat-ent: Product Meter Type
message ProductMeterTypeData {
    option (routines.entity_type) = "ProductMeterType";
    option (routines.keys).keys = "product_meter_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productMeterTypeId
        
    string product_meter_type_id = 1;    
    string description = 2;
    string default_uom_id = 3; // Uom    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: General Ledger Fiscal
message GlFiscalTypeData {
    option (routines.entity_type) = "GlFiscalType";
    option (routines.keys).keys = "gl_fiscal_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glFiscalTypeId
        
    string gl_fiscal_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Mime Type
message MimeTypeData {
    option (routines.entity_type) = "MimeType";
    option (routines.keys).keys = "mime_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: mimeTypeId
        
    string mime_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Product Category Content Type
message ProductCategoryContentTypeData {
    option (routines.entity_type) = "ProductCategoryContentType";
    option (routines.keys).keys = "prod_cat_content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: prodCatContentTypeId
        
    string prod_cat_content_type_id = 1;
    string parent_type_id = 2; // ProductCategoryContentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Employee Leave Type
message EmplLeaveTypeData {
    option (routines.entity_type) = "EmplLeaveType";
    option (routines.keys).keys = "leave_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: leaveTypeId
        
    string leave_type_id = 1;
    string parent_type_id = 2; // EmplLeaveType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: CustomTimePeriod
message CustomTimePeriodData {
    option (routines.entity_type) = "CustomTimePeriod";
    option (routines.keys).keys = "custom_time_period_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: customTimePeriodId
        
    string custom_time_period_id = 1;
    string parent_period_id = 2; // CustomTimePeriod
    string period_type_id = 3; // PeriodType    
    int64 period_num = 4;    
    string period_name = 5;    
    google.protobuf.Timestamp from_date = 6;    
    google.protobuf.Timestamp thru_date = 7;    
    routines.Indicator is_closed = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;    
    string organization_party_id = 11;  
}

// flat-ent: Character Set
message CharacterSetData {
    option (routines.entity_type) = "CharacterSet";
    option (routines.keys).keys = "character_set_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: characterSetId
        
    string character_set_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Rate Type
message RateTypeData {
    option (routines.entity_type) = "RateType";
    option (routines.keys).keys = "rate_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: rateTypeId
        
    string rate_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Maps PaymentTypes to GlAccountTypes, allowing user to configure payments and gl accounts
message PaymentGlAccountTypeMapData {
    option (routines.entity_type) = "PaymentGlAccountTypeMap";
    option (routines.keys).keys = "payment_type_id, organization_party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: paymentTypeId, organizationPartyId
    string id = 150; 
    string payment_type_id = 1; // PaymentType    
    string organization_party_id = 2;
    string gl_account_type_id = 3; // GlAccountType    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Training Class Type
message TrainingClassTypeData {
    option (routines.entity_type) = "TrainingClassType";
    option (routines.keys).keys = "training_class_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: trainingClassTypeId
        
    string training_class_type_id = 1;
    string parent_type_id = 2; // TrainingClassType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Security Component - Security Permission
message SecurityPermissionData {
    option (routines.entity_type) = "SecurityPermission";
    option (routines.keys).keys = "permission_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: permissionId
        
    string permission_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Defines a set of Visual Themes
message VisualThemeSetData {
    option (routines.entity_type) = "VisualThemeSet";
    option (routines.keys).keys = "visual_theme_set_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: visualThemeSetId
        
    string visual_theme_set_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: StandardLanguage
message StandardLanguageData {
    option (routines.entity_type) = "StandardLanguage";
    option (routines.keys).keys = "standard_language_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: standardLanguageId
        
    string standard_language_id = 1;    
    string lang_code3t = 2;    
    string lang_code3b = 3;    
    string lang_code2 = 4;    
    string lang_name = 5;    
    string lang_family = 6;    
    string lang_charset = 7;    
    google.protobuf.Timestamp last_updated_tx_stamp = 8;    
    google.protobuf.Timestamp created_tx_stamp = 9;  
}

// flat-ent: Telephone Country Code
message CountryTeleCodeData {
    option (routines.entity_type) = "CountryTeleCode";
    option (routines.keys).keys = "country_code";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: countryCode
    
    string country_code = 1; // CountryCode    
    string tele_code = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Product Association Type
message ProductAssocTypeData {
    option (routines.entity_type) = "ProductAssocType";
    option (routines.keys).keys = "product_assoc_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productAssocTypeId
        
    string product_assoc_type_id = 1;
    string parent_type_id = 2; // ProductAssocType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Financial Account Type GL Account
message FinAccountTypeGlAccountData {
    option (routines.entity_type) = "FinAccountTypeGlAccount";
    option (routines.keys).keys = "fin_account_type_id, organization_party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: finAccountTypeId, organizationPartyId
    string id = 150; 
    string fin_account_type_id = 1; // FinAccountType    
    string organization_party_id = 2;    
    string gl_account_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Calendar
message TechDataCalendarData {
    option (routines.entity_type) = "TechDataCalendar";
    option (routines.keys).keys = "calendar_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: calendarId
        
    string calendar_id = 1;    
    string description = 2;
    string calendar_week_id = 3; // TechDataCalendarWeek    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Party (organization) accounting preferences
message PartyAcctgPreferenceData {
    option (routines.entity_type) = "PartyAcctgPreference";
    option (routines.keys).keys = "party_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: partyId
        
    string party_id = 1;    
    int64 fiscal_year_start_month = 2;    
    int64 fiscal_year_start_day = 3;
    string tax_form_id = 4; // Enumeration
    string cogs_method_id = 5; // Enumeration
    string base_currency_uom_id = 6; // Uom
    string invoice_seq_cust_meth_id = 7; // CustomMethod    
    string invoice_id_prefix = 8;    
    int64 last_invoice_number = 9;    
    google.protobuf.Timestamp last_invoice_restart_date = 10;    
    routines.Indicator use_invoice_id_for_returns = 11;
    string quote_seq_cust_meth_id = 12; // CustomMethod    
    string quote_id_prefix = 13;    
    int64 last_quote_number = 14;
    string order_seq_cust_meth_id = 15; // CustomMethod    
    string order_id_prefix = 16;    
    int64 last_order_number = 17;    
    string refund_payment_method_id = 18;
    string error_gl_journal_id = 19; // GlJournal    
    routines.Indicator enable_accounting = 20;    
    google.protobuf.Timestamp last_updated_tx_stamp = 21;    
    google.protobuf.Timestamp created_tx_stamp = 22;  
}

// flat-ent: General Ledger XBRL Class
message GlXbrlClassData {
    option (routines.entity_type) = "GlXbrlClass";
    option (routines.keys).keys = "gl_xbrl_class_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glXbrlClassId
        
    string gl_xbrl_class_id = 1;
    string parent_gl_xbrl_class_id = 2; // GlXbrlClass    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Week definition
message TechDataCalendarWeekData {
    option (routines.entity_type) = "TechDataCalendarWeek";
    option (routines.keys).keys = "calendar_week_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: calendarWeekId
        
    string calendar_week_id = 1;    
    string description = 2;    
    google.type.TimeOfDay monday_start_time = 3;    
    double monday_capacity = 4;    
    google.type.TimeOfDay tuesday_start_time = 5;    
    double tuesday_capacity = 6;    
    google.type.TimeOfDay wednesday_start_time = 7;    
    double wednesday_capacity = 8;    
    google.type.TimeOfDay thursday_start_time = 9;    
    double thursday_capacity = 10;    
    google.type.TimeOfDay friday_start_time = 11;    
    double friday_capacity = 12;    
    google.type.TimeOfDay saturday_start_time = 13;    
    double saturday_capacity = 14;    
    google.type.TimeOfDay sunday_start_time = 15;    
    double sunday_capacity = 16;    
    google.protobuf.Timestamp last_updated_tx_stamp = 17;    
    google.protobuf.Timestamp created_tx_stamp = 18;  
}

// flat-ent: Payment Gateway Config Type
message PaymentGatewayConfigTypeData {
    option (routines.entity_type) = "PaymentGatewayConfigType";
    option (routines.keys).keys = "payment_gateway_config_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: paymentGatewayConfigTypeId
        
    string payment_gateway_config_type_id = 1;
    string parent_type_id = 2; // PaymentGatewayConfigType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Facility Type
message FacilityTypeData {
    option (routines.entity_type) = "FacilityType";
    option (routines.keys).keys = "facility_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: facilityTypeId
        
    string facility_type_id = 1;
    string parent_type_id = 2; // FacilityType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Inventory Item Type
message InventoryItemTypeData {
    option (routines.entity_type) = "InventoryItemType";
    option (routines.keys).keys = "inventory_item_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: inventoryItemTypeId
        
    string inventory_item_type_id = 1;
    string parent_type_id = 2; // InventoryItemType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Shipment Gateway Config
message ShipmentGatewayConfigData {
    option (routines.entity_type) = "ShipmentGatewayConfig";
    option (routines.keys).keys = "shipment_gateway_config_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: shipmentGatewayConfigId
        
    string shipment_gateway_config_id = 1;
    string shipment_gateway_conf_type_id = 2; // ShipmentGatewayConfigType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Server Hit Bin
message ServerHitTypeData {
    option (routines.entity_type) = "ServerHitType";
    option (routines.keys).keys = "hit_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: hitTypeId
        
    string hit_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Budget Type
message BudgetTypeData {
    option (routines.entity_type) = "BudgetType";
    option (routines.keys).keys = "budget_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: budgetTypeId
        
    string budget_type_id = 1;
    string parent_type_id = 2; // BudgetType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Invoice Item Type Map
message InvoiceItemTypeMapData {
    option (routines.entity_type) = "InvoiceItemTypeMap";
    option (routines.keys).keys = "invoice_item_map_key, invoice_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: invoiceItemMapKey, invoiceTypeId
    string id = 150;     
    string invoice_item_map_key = 1;
    string invoice_type_id = 2; // InvoiceType    
    string invoice_item_type_id = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Web Analytics Type
message WebAnalyticsTypeData {
    option (routines.entity_type) = "WebAnalyticsType";
    option (routines.keys).keys = "web_analytics_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: webAnalyticsTypeId
        
    string web_analytics_type_id = 1;
    string parent_type_id = 2; // WebAnalyticsType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Work Requirement Fulfillment Type
message WorkReqFulfTypeData {
    option (routines.entity_type) = "WorkReqFulfType";
    option (routines.keys).keys = "work_req_fulf_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: workReqFulfTypeId
        
    string work_req_fulf_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: General Ledger Reconciliation
message GlReconciliationData {
    option (routines.entity_type) = "GlReconciliation";
    option (routines.keys).keys = "gl_reconciliation_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glReconciliationId
        
    string gl_reconciliation_id = 1;    
    string gl_reconciliation_name = 2;    
    string description = 3;    
    google.protobuf.Timestamp created_date = 4;    
    string created_by_user_login = 5;    
    google.protobuf.Timestamp last_modified_date = 6;    
    string last_modified_by_user_login = 7;    
    string gl_account_id = 8;
    string status_id = 9; // StatusItem    
    string organization_party_id = 10;    
    routines.Currency reconciled_balance = 11;    
    routines.Currency opening_balance = 12;    
    google.protobuf.Timestamp reconciled_date = 13;    
    google.protobuf.Timestamp last_updated_tx_stamp = 14;    
    google.protobuf.Timestamp created_tx_stamp = 15;  
}

// flat-ent: Shipment Type
message ShipmentTypeData {
    option (routines.entity_type) = "ShipmentType";
    option (routines.keys).keys = "shipment_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: shipmentTypeId
        
    string shipment_type_id = 1;
    string parent_type_id = 2; // ShipmentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Order Type
message OrderTypeData {
    option (routines.entity_type) = "OrderType";
    option (routines.keys).keys = "order_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: orderTypeId
        
    string order_type_id = 1;
    string parent_type_id = 2; // OrderType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Party Classification Type
message PartyClassificationTypeData {
    option (routines.entity_type) = "PartyClassificationType";
    option (routines.keys).keys = "party_classification_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: partyClassificationTypeId
        
    string party_classification_type_id = 1;
    string parent_type_id = 2; // PartyClassificationType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Return Item Type Map
message ReturnItemTypeMapData {
    option (routines.entity_type) = "ReturnItemTypeMap";
    option (routines.keys).keys = "return_item_map_key, return_header_type_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: returnItemMapKey, returnHeaderTypeId
    string id = 150;     
    string return_item_map_key = 1;
    string return_header_type_id = 2; // ReturnHeaderType
    string return_item_type_id = 3; // ReturnAdjustmentType    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Product Feature Applicability Type
message ProductFeatureApplTypeData {
    option (routines.entity_type) = "ProductFeatureApplType";
    option (routines.keys).keys = "product_feature_appl_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productFeatureApplTypeId
        
    string product_feature_appl_type_id = 1;
    string parent_type_id = 2; // ProductFeatureApplType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Contact List Type
message ContactListTypeData {
    option (routines.entity_type) = "ContactListType";
    option (routines.keys).keys = "contact_list_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: contactListTypeId
        
    string contact_list_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: General Ledger Account Category Member
message GlAccountCategoryMemberData {
    option (routines.entity_type) = "GlAccountCategoryMember";
    option (routines.keys).keys = "gl_account_id, gl_account_category_id, from_date";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glAccountId, glAccountCategoryId, fromDate
    string id = 150;     
    string gl_account_id = 1;
    string gl_account_category_id = 2; // GlAccountCategory    
    google.protobuf.Timestamp from_date = 3;    
    google.protobuf.Timestamp thru_date = 4;    
    routines.FixedPoint amount_percentage = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Invoice Item Type
message InvoiceItemTypeData {
    option (routines.entity_type) = "InvoiceItemType";
    option (routines.keys).keys = "invoice_item_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: invoiceItemTypeId
        
    string invoice_item_type_id = 1;
    string parent_type_id = 2; // InvoiceItemType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    string default_gl_account_id = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Product Price Type
message ProductPriceActionTypeData {
    option (routines.entity_type) = "ProductPriceActionType";
    option (routines.keys).keys = "product_price_action_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productPriceActionTypeId
        
    string product_price_action_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: CountryAddressFormat
message CountryAddressFormatData {
    option (routines.entity_type) = "CountryAddressFormat";
    option (routines.keys).keys = "geo_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: geoId
    
    string geo_id = 1; // Geo
    string geo_assoc_type_id = 2; // GeoAssocType    
    string require_state_province_id = 3;    
    routines.Indicator require_postal_code = 4;    
    string postal_code_regex = 5;    
    routines.Indicator has_postal_code_ext = 6;    
    routines.Indicator require_postal_code_ext = 7;    
    string address_format = 8;    
    google.protobuf.Timestamp last_updated_tx_stamp = 9;    
    google.protobuf.Timestamp created_tx_stamp = 10;  
}

// flat-ent: Party Content Type
message PartyContentTypeData {
    option (routines.entity_type) = "PartyContentType";
    option (routines.keys).keys = "party_content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: partyContentTypeId
        
    string party_content_type_id = 1;
    string parent_type_id = 2; // PartyContentType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Good Identification Type
message GoodIdentificationTypeData {
    option (routines.entity_type) = "GoodIdentificationType";
    option (routines.keys).keys = "good_identification_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: goodIdentificationTypeId
        
    string good_identification_type_id = 1;
    string parent_type_id = 2; // GoodIdentificationType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Communication Event Purpose Type
message CommunicationEventPrpTypData {
    option (routines.entity_type) = "CommunicationEventPrpTyp";
    option (routines.keys).keys = "communication_event_prp_typ_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: communicationEventPrpTypId
        
    string communication_event_prp_typ_id = 1;
    string parent_type_id = 2; // CommunicationEventPrpTyp    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: UPS Shipment Gateway Configuration
message ShipmentGatewayUpsData {
    option (routines.entity_type) = "ShipmentGatewayUps";
    option (routines.keys).keys = "shipment_gateway_config_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: shipmentGatewayConfigId
    
    string shipment_gateway_config_id = 1; // ShipmentGatewayConfig    
    string connect_url = 2;    
    int64 connect_timeout = 3;    
    string shipper_number = 4;    
    string bill_shipper_account_number = 5;    
    string access_license_number = 6;    
    string access_user_id = 7;    
    string access_password = 8;    
    string save_cert_info = 9;    
    string save_cert_path = 10;    
    string shipper_pickup_type = 11;    
    string customer_classification = 12;    
    routines.FixedPoint max_estimate_weight = 13;    
    routines.FixedPoint min_estimate_weight = 14;    
    string cod_allow_cod = 15;    
    routines.FixedPoint cod_surcharge_amount = 16;    
    string cod_surcharge_currency_uom_id = 17;    
    string cod_surcharge_apply_to_package = 18;    
    string cod_funds_code = 19;    
    string default_return_label_memo = 20;    
    string default_return_label_subject = 21;    
    google.protobuf.Timestamp last_updated_tx_stamp = 22;    
    google.protobuf.Timestamp created_tx_stamp = 23;  
}

// flat-ent: General Ledger Account Group Type
message GlAccountGroupTypeData {
    option (routines.entity_type) = "GlAccountGroupType";
    option (routines.keys).keys = "gl_account_group_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glAccountGroupTypeId
        
    string gl_account_group_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Telecom Method Type
message TelecomMethodTypeData {
    option (routines.entity_type) = "TelecomMethodType";
    option (routines.keys).keys = "telecom_method_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: telecomMethodTypeId
        
    string telecom_method_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Requirement Type
message RequirementTypeData {
    option (routines.entity_type) = "RequirementType";
    option (routines.keys).keys = "requirement_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: requirementTypeId
        
    string requirement_type_id = 1;
    string parent_type_id = 2; // RequirementType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Custom Method Type
message CustomMethodTypeData {
    option (routines.entity_type) = "CustomMethodType";
    option (routines.keys).keys = "custom_method_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: customMethodTypeId
    
    string custom_method_type_id = 1; // CustomMethodType
    string parent_type_id = 2; // CustomMethodType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Return Item Type
message ReturnItemTypeData {
    option (routines.entity_type) = "ReturnItemType";
    option (routines.keys).keys = "return_item_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: returnItemTypeId
        
    string return_item_type_id = 1;
    string parent_type_id = 2; // ReturnItemType    
    string description = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: Agreement Type
message AgreementTypeData {
    option (routines.entity_type) = "AgreementType";
    option (routines.keys).keys = "agreement_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: agreementTypeId
        
    string agreement_type_id = 1;
    string parent_type_id = 2; // AgreementType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Order Item Assoc Type
message OrderItemAssocTypeData {
    option (routines.entity_type) = "OrderItemAssocType";
    option (routines.keys).keys = "order_item_assoc_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: orderItemAssocTypeId
        
    string order_item_assoc_type_id = 1;
    string parent_type_id = 2; // OrderItemAssocType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Facility Group Type
message FacilityGroupTypeData {
    option (routines.entity_type) = "FacilityGroupType";
    option (routines.keys).keys = "facility_group_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: facilityGroupTypeId
    
    string facility_group_type_id = 1; // FacilityGroup    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Product Feature Interaction Type
message ProductFeatureIactnTypeData {
    option (routines.entity_type) = "ProductFeatureIactnType";
    option (routines.keys).keys = "product_feature_iactn_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productFeatureIactnTypeId
        
    string product_feature_iactn_type_id = 1;
    string parent_type_id = 2; // ProductFeatureIactnType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Work Effort Type
message WorkEffortTypeData {
    option (routines.entity_type) = "WorkEffortType";
    option (routines.keys).keys = "work_effort_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: workEffortTypeId
        
    string work_effort_type_id = 1;
    string parent_type_id = 2; // WorkEffortType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Status
message StatusItemData {
    option (routines.entity_type) = "StatusItem";
    option (routines.keys).keys = "status_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: statusId
        
    string status_id = 1;
    string status_type_id = 2; // StatusType    
    string status_code = 3;    
    string sequence_id = 4;    
    string description = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Payment Type
message PaymentTypeData {
    option (routines.entity_type) = "PaymentType";
    option (routines.keys).keys = "payment_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: paymentTypeId
        
    string payment_type_id = 1;
    string parent_type_id = 2; // PaymentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: ISO Country Code
message CountryCodeData {
    option (routines.entity_type) = "CountryCode";
    option (routines.keys).keys = "country_code";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: countryCode
    
    string country_code = 1; // CountryTeleCode    
    string country_abbr = 2;    
    string country_number = 3;    
    string country_name = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Party Qualification Type
message PartyQualTypeData {
    option (routines.entity_type) = "PartyQualType";
    option (routines.keys).keys = "party_qual_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: partyQualTypeId
        
    string party_qual_type_id = 1;
    string parent_type_id = 2; // PartyQualType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Party Type
message PartyTypeData {
    option (routines.entity_type) = "PartyType";
    option (routines.keys).keys = "party_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: partyTypeId
        
    string party_type_id = 1;
    string parent_type_id = 2; // PartyType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Mime Text Template
message MimeTypeHtmlTemplateData {
    option (routines.entity_type) = "MimeTypeHtmlTemplate";
    option (routines.keys).keys = "mime_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: mimeTypeId
    
    string mime_type_id = 1; // MimeType    
    string template_location = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Financial Account Type
message FinAccountTypeData {
    option (routines.entity_type) = "FinAccountType";
    option (routines.keys).keys = "fin_account_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: finAccountTypeId
        
    string fin_account_type_id = 1;
    string parent_type_id = 2; // FinAccountType
    string replenish_enum_id = 3; // Enumeration    
    routines.Indicator is_refundable = 4;    
    routines.Indicator has_table = 5;    
    string description = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;  
}

// flat-ent: Invoice Content Type
message InvoiceContentTypeData {
    option (routines.entity_type) = "InvoiceContentType";
    option (routines.keys).keys = "invoice_content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: invoiceContentTypeId
        
    string invoice_content_type_id = 1;
    string parent_type_id = 2; // InvoiceContentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: General Ledger Account Class
message GlAccountClassData {
    option (routines.entity_type) = "GlAccountClass";
    option (routines.keys).keys = "gl_account_class_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glAccountClassId
        
    string gl_account_class_id = 1;
    string parent_class_id = 2; // GlAccountClass    
    string description = 3;    
    routines.Indicator is_asset_class = 4;    
    int64 sequence_num = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Budget Review Result Type
message BudgetReviewResultTypeData {
    option (routines.entity_type) = "BudgetReviewResultType";
    option (routines.keys).keys = "budget_review_result_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: budgetReviewResultTypeId
        
    string budget_review_result_type_id = 1;    
    string description = 2;    
    string comments = 3;    
    google.protobuf.Timestamp last_updated_tx_stamp = 4;    
    google.protobuf.Timestamp created_tx_stamp = 5;  
}

// flat-ent: GL Account Organization
message GlAccountOrganizationData {
    option (routines.entity_type) = "GlAccountOrganization";
    option (routines.keys).keys = "gl_account_id, organization_party_id";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: glAccountId, organizationPartyId
    string id = 150;     
    string gl_account_id = 1;    
    string organization_party_id = 2;
    string role_type_id = 3; // RoleType    
    google.protobuf.Timestamp from_date = 4;    
    google.protobuf.Timestamp thru_date = 5;    
    google.protobuf.Timestamp last_updated_tx_stamp = 6;    
    google.protobuf.Timestamp created_tx_stamp = 7;  
}

// flat-ent: Tax Authority Rate Type
message TaxAuthorityRateTypeData {
    option (routines.entity_type) = "TaxAuthorityRateType";
    option (routines.keys).keys = "tax_authority_rate_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: taxAuthorityRateTypeId
        
    string tax_authority_rate_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Unit Of Measure Conversion Type
message UomConversionData {
    option (routines.entity_type) = "UomConversion";
    option (routines.keys).keys = "uom_id, uom_id_to";
    option (routines.keys).combine = true;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: uomId, uomIdTo
    string id = 150; 
    string uom_id = 1; // Uom
    string uom_id_to = 2; // Uom    
    double conversion_factor = 3;
    string custom_method_id = 4; // CustomMethod    
    int64 decimal_scale = 5;    
    string rounding_mode = 6;    
    google.protobuf.Timestamp last_updated_tx_stamp = 7;    
    google.protobuf.Timestamp created_tx_stamp = 8;  
}

// flat-ent: Product Content Type
message ProductContentTypeData {
    option (routines.entity_type) = "ProductContentType";
    option (routines.keys).keys = "product_content_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: productContentTypeId
        
    string product_content_type_id = 1;
    string parent_type_id = 2; // ProductContentType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Invoice Type
message InvoiceTypeData {
    option (routines.entity_type) = "InvoiceType";
    option (routines.keys).keys = "invoice_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: invoiceTypeId
        
    string invoice_type_id = 1;
    string parent_type_id = 2; // InvoiceType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Performance Review Item Type
message PerfReviewItemTypeData {
    option (routines.entity_type) = "PerfReviewItemType";
    option (routines.keys).keys = "perf_review_item_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: perfReviewItemTypeId
        
    string perf_review_item_type_id = 1;
    string parent_type_id = 2; // PerfReviewItemType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Status Type
message StatusTypeData {
    option (routines.entity_type) = "StatusType";
    option (routines.keys).keys = "status_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: statusTypeId
    
    string status_type_id = 1; // StatusType
    string parent_type_id = 2; // StatusType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Fixed Asset Identification Type
message FixedAssetIdentTypeData {
    option (routines.entity_type) = "FixedAssetIdentType";
    option (routines.keys).keys = "fixed_asset_ident_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: fixedAssetIdentTypeId
        
    string fixed_asset_ident_type_id = 1;    
    string description = 2;    
    google.protobuf.Timestamp last_updated_tx_stamp = 3;    
    google.protobuf.Timestamp created_tx_stamp = 4;  
}

// flat-ent: Accounting Transaction Entry Type
message AcctgTransEntryTypeData {
    option (routines.entity_type) = "AcctgTransEntryType";
    option (routines.keys).keys = "acctg_trans_entry_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: acctgTransEntryTypeId
        
    string acctg_trans_entry_type_id = 1;
    string parent_type_id = 2; // AcctgTransEntryType    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Custom Screen Type
message CustomScreenTypeData {
    option (routines.entity_type) = "CustomScreenType";
    option (routines.keys).keys = "custom_screen_type_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: customScreenTypeId
        
    string custom_screen_type_id = 1;    
    string parent_type_id = 2;    
    routines.Indicator has_table = 3;    
    string description = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

// flat-ent: Settlement Term
message SettlementTermData {
    option (routines.entity_type) = "SettlementTerm";
    option (routines.keys).keys = "settlement_term_id";
    option (routines.keys).combine = false;
    option (routines.flat) = true;
    option (routines.has_table) = false;
    // keys: settlementTermId
        
    string settlement_term_id = 1;    
    string term_name = 2;    
    int64 term_value = 3;    
    string uom_id = 4;    
    google.protobuf.Timestamp last_updated_tx_stamp = 5;    
    google.protobuf.Timestamp created_tx_stamp = 6;  
}

